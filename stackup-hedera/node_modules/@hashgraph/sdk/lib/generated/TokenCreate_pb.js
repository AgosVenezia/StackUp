// source: TokenCreate.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Duration_pb = require('./Duration_pb.js');
goog.object.extend(proto, Duration_pb);
var BasicTypes_pb = require('./BasicTypes_pb.js');
goog.object.extend(proto, BasicTypes_pb);
var Timestamp_pb = require('./Timestamp_pb.js');
goog.object.extend(proto, Timestamp_pb);
goog.exportSymbol('proto.proto.TokenCreateTransactionBody', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.TokenCreateTransactionBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.TokenCreateTransactionBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.TokenCreateTransactionBody.displayName = 'proto.proto.TokenCreateTransactionBody';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.TokenCreateTransactionBody.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.TokenCreateTransactionBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.TokenCreateTransactionBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TokenCreateTransactionBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    decimals: jspb.Message.getFieldWithDefault(msg, 3, 0),
    initialsupply: jspb.Message.getFieldWithDefault(msg, 4, 0),
    treasury: (f = msg.getTreasury()) && BasicTypes_pb.AccountID.toObject(includeInstance, f),
    adminkey: (f = msg.getAdminkey()) && BasicTypes_pb.Key.toObject(includeInstance, f),
    kyckey: (f = msg.getKyckey()) && BasicTypes_pb.Key.toObject(includeInstance, f),
    freezekey: (f = msg.getFreezekey()) && BasicTypes_pb.Key.toObject(includeInstance, f),
    wipekey: (f = msg.getWipekey()) && BasicTypes_pb.Key.toObject(includeInstance, f),
    supplykey: (f = msg.getSupplykey()) && BasicTypes_pb.Key.toObject(includeInstance, f),
    freezedefault: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    expiry: (f = msg.getExpiry()) && Timestamp_pb.Timestamp.toObject(includeInstance, f),
    autorenewaccount: (f = msg.getAutorenewaccount()) && BasicTypes_pb.AccountID.toObject(includeInstance, f),
    autorenewperiod: (f = msg.getAutorenewperiod()) && Duration_pb.Duration.toObject(includeInstance, f),
    memo: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.TokenCreateTransactionBody}
 */
proto.proto.TokenCreateTransactionBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.TokenCreateTransactionBody;
  return proto.proto.TokenCreateTransactionBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.TokenCreateTransactionBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.TokenCreateTransactionBody}
 */
proto.proto.TokenCreateTransactionBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDecimals(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInitialsupply(value);
      break;
    case 5:
      var value = new BasicTypes_pb.AccountID;
      reader.readMessage(value,BasicTypes_pb.AccountID.deserializeBinaryFromReader);
      msg.setTreasury(value);
      break;
    case 6:
      var value = new BasicTypes_pb.Key;
      reader.readMessage(value,BasicTypes_pb.Key.deserializeBinaryFromReader);
      msg.setAdminkey(value);
      break;
    case 7:
      var value = new BasicTypes_pb.Key;
      reader.readMessage(value,BasicTypes_pb.Key.deserializeBinaryFromReader);
      msg.setKyckey(value);
      break;
    case 8:
      var value = new BasicTypes_pb.Key;
      reader.readMessage(value,BasicTypes_pb.Key.deserializeBinaryFromReader);
      msg.setFreezekey(value);
      break;
    case 9:
      var value = new BasicTypes_pb.Key;
      reader.readMessage(value,BasicTypes_pb.Key.deserializeBinaryFromReader);
      msg.setWipekey(value);
      break;
    case 10:
      var value = new BasicTypes_pb.Key;
      reader.readMessage(value,BasicTypes_pb.Key.deserializeBinaryFromReader);
      msg.setSupplykey(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFreezedefault(value);
      break;
    case 13:
      var value = new Timestamp_pb.Timestamp;
      reader.readMessage(value,Timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpiry(value);
      break;
    case 14:
      var value = new BasicTypes_pb.AccountID;
      reader.readMessage(value,BasicTypes_pb.AccountID.deserializeBinaryFromReader);
      msg.setAutorenewaccount(value);
      break;
    case 15:
      var value = new Duration_pb.Duration;
      reader.readMessage(value,Duration_pb.Duration.deserializeBinaryFromReader);
      msg.setAutorenewperiod(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.TokenCreateTransactionBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.TokenCreateTransactionBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.TokenCreateTransactionBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TokenCreateTransactionBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getInitialsupply();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getTreasury();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      BasicTypes_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getAdminkey();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      BasicTypes_pb.Key.serializeBinaryToWriter
    );
  }
  f = message.getKyckey();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      BasicTypes_pb.Key.serializeBinaryToWriter
    );
  }
  f = message.getFreezekey();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      BasicTypes_pb.Key.serializeBinaryToWriter
    );
  }
  f = message.getWipekey();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      BasicTypes_pb.Key.serializeBinaryToWriter
    );
  }
  f = message.getSupplykey();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      BasicTypes_pb.Key.serializeBinaryToWriter
    );
  }
  f = message.getFreezedefault();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getExpiry();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      Timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getAutorenewaccount();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      BasicTypes_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getAutorenewperiod();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      Duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.proto.TokenCreateTransactionBody.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.proto.TokenCreateTransactionBody.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 decimals = 3;
 * @return {number}
 */
proto.proto.TokenCreateTransactionBody.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 initialSupply = 4;
 * @return {number}
 */
proto.proto.TokenCreateTransactionBody.prototype.getInitialsupply = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.setInitialsupply = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional AccountID treasury = 5;
 * @return {?proto.proto.AccountID}
 */
proto.proto.TokenCreateTransactionBody.prototype.getTreasury = function() {
  return /** @type{?proto.proto.AccountID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.AccountID, 5));
};


/**
 * @param {?proto.proto.AccountID|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setTreasury = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearTreasury = function() {
  return this.setTreasury(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasTreasury = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Key adminKey = 6;
 * @return {?proto.proto.Key}
 */
proto.proto.TokenCreateTransactionBody.prototype.getAdminkey = function() {
  return /** @type{?proto.proto.Key} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.Key, 6));
};


/**
 * @param {?proto.proto.Key|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setAdminkey = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearAdminkey = function() {
  return this.setAdminkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasAdminkey = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Key kycKey = 7;
 * @return {?proto.proto.Key}
 */
proto.proto.TokenCreateTransactionBody.prototype.getKyckey = function() {
  return /** @type{?proto.proto.Key} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.Key, 7));
};


/**
 * @param {?proto.proto.Key|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setKyckey = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearKyckey = function() {
  return this.setKyckey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasKyckey = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Key freezeKey = 8;
 * @return {?proto.proto.Key}
 */
proto.proto.TokenCreateTransactionBody.prototype.getFreezekey = function() {
  return /** @type{?proto.proto.Key} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.Key, 8));
};


/**
 * @param {?proto.proto.Key|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setFreezekey = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearFreezekey = function() {
  return this.setFreezekey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasFreezekey = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Key wipeKey = 9;
 * @return {?proto.proto.Key}
 */
proto.proto.TokenCreateTransactionBody.prototype.getWipekey = function() {
  return /** @type{?proto.proto.Key} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.Key, 9));
};


/**
 * @param {?proto.proto.Key|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setWipekey = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearWipekey = function() {
  return this.setWipekey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasWipekey = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Key supplyKey = 10;
 * @return {?proto.proto.Key}
 */
proto.proto.TokenCreateTransactionBody.prototype.getSupplykey = function() {
  return /** @type{?proto.proto.Key} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.Key, 10));
};


/**
 * @param {?proto.proto.Key|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setSupplykey = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearSupplykey = function() {
  return this.setSupplykey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasSupplykey = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional bool freezeDefault = 11;
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.getFreezedefault = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.setFreezedefault = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional Timestamp expiry = 13;
 * @return {?proto.proto.Timestamp}
 */
proto.proto.TokenCreateTransactionBody.prototype.getExpiry = function() {
  return /** @type{?proto.proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, Timestamp_pb.Timestamp, 13));
};


/**
 * @param {?proto.proto.Timestamp|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setExpiry = function(value) {
  return jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearExpiry = function() {
  return this.setExpiry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasExpiry = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional AccountID autoRenewAccount = 14;
 * @return {?proto.proto.AccountID}
 */
proto.proto.TokenCreateTransactionBody.prototype.getAutorenewaccount = function() {
  return /** @type{?proto.proto.AccountID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.AccountID, 14));
};


/**
 * @param {?proto.proto.AccountID|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setAutorenewaccount = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearAutorenewaccount = function() {
  return this.setAutorenewaccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasAutorenewaccount = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Duration autoRenewPeriod = 15;
 * @return {?proto.proto.Duration}
 */
proto.proto.TokenCreateTransactionBody.prototype.getAutorenewperiod = function() {
  return /** @type{?proto.proto.Duration} */ (
    jspb.Message.getWrapperField(this, Duration_pb.Duration, 15));
};


/**
 * @param {?proto.proto.Duration|undefined} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
*/
proto.proto.TokenCreateTransactionBody.prototype.setAutorenewperiod = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.clearAutorenewperiod = function() {
  return this.setAutorenewperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.TokenCreateTransactionBody.prototype.hasAutorenewperiod = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string memo = 16;
 * @return {string}
 */
proto.proto.TokenCreateTransactionBody.prototype.getMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.TokenCreateTransactionBody} returns this
 */
proto.proto.TokenCreateTransactionBody.prototype.setMemo = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


goog.object.extend(exports, proto.proto);
