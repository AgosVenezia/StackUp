export function ConsensusService(): void;
export namespace ConsensusService {
    namespace subscribeTopic {
        export const methodName: string;
        export { ConsensusService as service };
        export const requestStream: boolean;
        export const responseStream: boolean;
        export const requestType: typeof MirrorConsensusService_pb.ConsensusTopicQuery;
        export const responseType: typeof MirrorConsensusService_pb.ConsensusTopicResponse;
    }
}
export function ConsensusServiceClient(serviceHost: any, options: any): void;
export class ConsensusServiceClient {
    constructor(serviceHost: any, options: any);
    serviceHost: any;
    options: any;
    subscribeTopic(requestMessage: any, metadata: any): {
        on: (type: any, handler: any) => any;
        cancel: () => void;
    };
}
import MirrorConsensusService_pb = require("./MirrorConsensusService_pb");
