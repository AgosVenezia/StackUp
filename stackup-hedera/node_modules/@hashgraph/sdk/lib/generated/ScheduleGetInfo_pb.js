// source: ScheduleGetInfo.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var BasicTypes_pb = require('./BasicTypes_pb.js');
goog.object.extend(proto, BasicTypes_pb);
var Timestamp_pb = require('./Timestamp_pb.js');
goog.object.extend(proto, Timestamp_pb);
var QueryHeader_pb = require('./QueryHeader_pb.js');
goog.object.extend(proto, QueryHeader_pb);
var ResponseHeader_pb = require('./ResponseHeader_pb.js');
goog.object.extend(proto, ResponseHeader_pb);
var SchedulableTransactionBody_pb = require('./SchedulableTransactionBody_pb.js');
goog.object.extend(proto, SchedulableTransactionBody_pb);
goog.exportSymbol('proto.proto.ScheduleGetInfoQuery', null, global);
goog.exportSymbol('proto.proto.ScheduleGetInfoResponse', null, global);
goog.exportSymbol('proto.proto.ScheduleInfo', null, global);
goog.exportSymbol('proto.proto.ScheduleInfo.DataCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ScheduleGetInfoQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ScheduleGetInfoQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ScheduleGetInfoQuery.displayName = 'proto.proto.ScheduleGetInfoQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ScheduleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.proto.ScheduleInfo.oneofGroups_);
};
goog.inherits(proto.proto.ScheduleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ScheduleInfo.displayName = 'proto.proto.ScheduleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.ScheduleGetInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.ScheduleGetInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.proto.ScheduleGetInfoResponse.displayName = 'proto.proto.ScheduleGetInfoResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ScheduleGetInfoQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ScheduleGetInfoQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ScheduleGetInfoQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ScheduleGetInfoQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && QueryHeader_pb.QueryHeader.toObject(includeInstance, f),
    scheduleid: (f = msg.getScheduleid()) && BasicTypes_pb.ScheduleID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ScheduleGetInfoQuery}
 */
proto.proto.ScheduleGetInfoQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ScheduleGetInfoQuery;
  return proto.proto.ScheduleGetInfoQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ScheduleGetInfoQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ScheduleGetInfoQuery}
 */
proto.proto.ScheduleGetInfoQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new QueryHeader_pb.QueryHeader;
      reader.readMessage(value,QueryHeader_pb.QueryHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new BasicTypes_pb.ScheduleID;
      reader.readMessage(value,BasicTypes_pb.ScheduleID.deserializeBinaryFromReader);
      msg.setScheduleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ScheduleGetInfoQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ScheduleGetInfoQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ScheduleGetInfoQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ScheduleGetInfoQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      QueryHeader_pb.QueryHeader.serializeBinaryToWriter
    );
  }
  f = message.getScheduleid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      BasicTypes_pb.ScheduleID.serializeBinaryToWriter
    );
  }
};


/**
 * optional QueryHeader header = 1;
 * @return {?proto.proto.QueryHeader}
 */
proto.proto.ScheduleGetInfoQuery.prototype.getHeader = function() {
  return /** @type{?proto.proto.QueryHeader} */ (
    jspb.Message.getWrapperField(this, QueryHeader_pb.QueryHeader, 1));
};


/**
 * @param {?proto.proto.QueryHeader|undefined} value
 * @return {!proto.proto.ScheduleGetInfoQuery} returns this
*/
proto.proto.ScheduleGetInfoQuery.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleGetInfoQuery} returns this
 */
proto.proto.ScheduleGetInfoQuery.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleGetInfoQuery.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ScheduleID scheduleID = 2;
 * @return {?proto.proto.ScheduleID}
 */
proto.proto.ScheduleGetInfoQuery.prototype.getScheduleid = function() {
  return /** @type{?proto.proto.ScheduleID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.ScheduleID, 2));
};


/**
 * @param {?proto.proto.ScheduleID|undefined} value
 * @return {!proto.proto.ScheduleGetInfoQuery} returns this
*/
proto.proto.ScheduleGetInfoQuery.prototype.setScheduleid = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleGetInfoQuery} returns this
 */
proto.proto.ScheduleGetInfoQuery.prototype.clearScheduleid = function() {
  return this.setScheduleid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleGetInfoQuery.prototype.hasScheduleid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.ScheduleInfo.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.proto.ScheduleInfo.DataCase = {
  DATA_NOT_SET: 0,
  DELETION_TIME: 2,
  EXECUTION_TIME: 3
};

/**
 * @return {proto.proto.ScheduleInfo.DataCase}
 */
proto.proto.ScheduleInfo.prototype.getDataCase = function() {
  return /** @type {proto.proto.ScheduleInfo.DataCase} */(jspb.Message.computeOneofCase(this, proto.proto.ScheduleInfo.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ScheduleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ScheduleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ScheduleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ScheduleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    scheduleid: (f = msg.getScheduleid()) && BasicTypes_pb.ScheduleID.toObject(includeInstance, f),
    deletionTime: (f = msg.getDeletionTime()) && Timestamp_pb.Timestamp.toObject(includeInstance, f),
    executionTime: (f = msg.getExecutionTime()) && Timestamp_pb.Timestamp.toObject(includeInstance, f),
    expirationtime: (f = msg.getExpirationtime()) && Timestamp_pb.Timestamp.toObject(includeInstance, f),
    scheduledtransactionbody: (f = msg.getScheduledtransactionbody()) && SchedulableTransactionBody_pb.SchedulableTransactionBody.toObject(includeInstance, f),
    memo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    adminkey: (f = msg.getAdminkey()) && BasicTypes_pb.Key.toObject(includeInstance, f),
    signers: (f = msg.getSigners()) && BasicTypes_pb.KeyList.toObject(includeInstance, f),
    creatoraccountid: (f = msg.getCreatoraccountid()) && BasicTypes_pb.AccountID.toObject(includeInstance, f),
    payeraccountid: (f = msg.getPayeraccountid()) && BasicTypes_pb.AccountID.toObject(includeInstance, f),
    scheduledtransactionid: (f = msg.getScheduledtransactionid()) && BasicTypes_pb.TransactionID.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ScheduleInfo}
 */
proto.proto.ScheduleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ScheduleInfo;
  return proto.proto.ScheduleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ScheduleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ScheduleInfo}
 */
proto.proto.ScheduleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new BasicTypes_pb.ScheduleID;
      reader.readMessage(value,BasicTypes_pb.ScheduleID.deserializeBinaryFromReader);
      msg.setScheduleid(value);
      break;
    case 2:
      var value = new Timestamp_pb.Timestamp;
      reader.readMessage(value,Timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setDeletionTime(value);
      break;
    case 3:
      var value = new Timestamp_pb.Timestamp;
      reader.readMessage(value,Timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExecutionTime(value);
      break;
    case 4:
      var value = new Timestamp_pb.Timestamp;
      reader.readMessage(value,Timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpirationtime(value);
      break;
    case 5:
      var value = new SchedulableTransactionBody_pb.SchedulableTransactionBody;
      reader.readMessage(value,SchedulableTransactionBody_pb.SchedulableTransactionBody.deserializeBinaryFromReader);
      msg.setScheduledtransactionbody(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    case 7:
      var value = new BasicTypes_pb.Key;
      reader.readMessage(value,BasicTypes_pb.Key.deserializeBinaryFromReader);
      msg.setAdminkey(value);
      break;
    case 8:
      var value = new BasicTypes_pb.KeyList;
      reader.readMessage(value,BasicTypes_pb.KeyList.deserializeBinaryFromReader);
      msg.setSigners(value);
      break;
    case 9:
      var value = new BasicTypes_pb.AccountID;
      reader.readMessage(value,BasicTypes_pb.AccountID.deserializeBinaryFromReader);
      msg.setCreatoraccountid(value);
      break;
    case 10:
      var value = new BasicTypes_pb.AccountID;
      reader.readMessage(value,BasicTypes_pb.AccountID.deserializeBinaryFromReader);
      msg.setPayeraccountid(value);
      break;
    case 11:
      var value = new BasicTypes_pb.TransactionID;
      reader.readMessage(value,BasicTypes_pb.TransactionID.deserializeBinaryFromReader);
      msg.setScheduledtransactionid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ScheduleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ScheduleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ScheduleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ScheduleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScheduleid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      BasicTypes_pb.ScheduleID.serializeBinaryToWriter
    );
  }
  f = message.getDeletionTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      Timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExecutionTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      Timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getExpirationtime();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      Timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getScheduledtransactionbody();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      SchedulableTransactionBody_pb.SchedulableTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAdminkey();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      BasicTypes_pb.Key.serializeBinaryToWriter
    );
  }
  f = message.getSigners();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      BasicTypes_pb.KeyList.serializeBinaryToWriter
    );
  }
  f = message.getCreatoraccountid();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      BasicTypes_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getPayeraccountid();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      BasicTypes_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getScheduledtransactionid();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      BasicTypes_pb.TransactionID.serializeBinaryToWriter
    );
  }
};


/**
 * optional ScheduleID scheduleID = 1;
 * @return {?proto.proto.ScheduleID}
 */
proto.proto.ScheduleInfo.prototype.getScheduleid = function() {
  return /** @type{?proto.proto.ScheduleID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.ScheduleID, 1));
};


/**
 * @param {?proto.proto.ScheduleID|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setScheduleid = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearScheduleid = function() {
  return this.setScheduleid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasScheduleid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Timestamp deletion_time = 2;
 * @return {?proto.proto.Timestamp}
 */
proto.proto.ScheduleInfo.prototype.getDeletionTime = function() {
  return /** @type{?proto.proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, Timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.proto.Timestamp|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setDeletionTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.proto.ScheduleInfo.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearDeletionTime = function() {
  return this.setDeletionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasDeletionTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Timestamp execution_time = 3;
 * @return {?proto.proto.Timestamp}
 */
proto.proto.ScheduleInfo.prototype.getExecutionTime = function() {
  return /** @type{?proto.proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, Timestamp_pb.Timestamp, 3));
};


/**
 * @param {?proto.proto.Timestamp|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setExecutionTime = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.proto.ScheduleInfo.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearExecutionTime = function() {
  return this.setExecutionTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasExecutionTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Timestamp expirationTime = 4;
 * @return {?proto.proto.Timestamp}
 */
proto.proto.ScheduleInfo.prototype.getExpirationtime = function() {
  return /** @type{?proto.proto.Timestamp} */ (
    jspb.Message.getWrapperField(this, Timestamp_pb.Timestamp, 4));
};


/**
 * @param {?proto.proto.Timestamp|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setExpirationtime = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearExpirationtime = function() {
  return this.setExpirationtime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasExpirationtime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional SchedulableTransactionBody scheduledTransactionBody = 5;
 * @return {?proto.proto.SchedulableTransactionBody}
 */
proto.proto.ScheduleInfo.prototype.getScheduledtransactionbody = function() {
  return /** @type{?proto.proto.SchedulableTransactionBody} */ (
    jspb.Message.getWrapperField(this, SchedulableTransactionBody_pb.SchedulableTransactionBody, 5));
};


/**
 * @param {?proto.proto.SchedulableTransactionBody|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setScheduledtransactionbody = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearScheduledtransactionbody = function() {
  return this.setScheduledtransactionbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasScheduledtransactionbody = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string memo = 6;
 * @return {string}
 */
proto.proto.ScheduleInfo.prototype.getMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.setMemo = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional Key adminKey = 7;
 * @return {?proto.proto.Key}
 */
proto.proto.ScheduleInfo.prototype.getAdminkey = function() {
  return /** @type{?proto.proto.Key} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.Key, 7));
};


/**
 * @param {?proto.proto.Key|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setAdminkey = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearAdminkey = function() {
  return this.setAdminkey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasAdminkey = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional KeyList signers = 8;
 * @return {?proto.proto.KeyList}
 */
proto.proto.ScheduleInfo.prototype.getSigners = function() {
  return /** @type{?proto.proto.KeyList} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.KeyList, 8));
};


/**
 * @param {?proto.proto.KeyList|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setSigners = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearSigners = function() {
  return this.setSigners(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasSigners = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional AccountID creatorAccountID = 9;
 * @return {?proto.proto.AccountID}
 */
proto.proto.ScheduleInfo.prototype.getCreatoraccountid = function() {
  return /** @type{?proto.proto.AccountID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.AccountID, 9));
};


/**
 * @param {?proto.proto.AccountID|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setCreatoraccountid = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearCreatoraccountid = function() {
  return this.setCreatoraccountid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasCreatoraccountid = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional AccountID payerAccountID = 10;
 * @return {?proto.proto.AccountID}
 */
proto.proto.ScheduleInfo.prototype.getPayeraccountid = function() {
  return /** @type{?proto.proto.AccountID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.AccountID, 10));
};


/**
 * @param {?proto.proto.AccountID|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setPayeraccountid = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearPayeraccountid = function() {
  return this.setPayeraccountid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasPayeraccountid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional TransactionID scheduledTransactionID = 11;
 * @return {?proto.proto.TransactionID}
 */
proto.proto.ScheduleInfo.prototype.getScheduledtransactionid = function() {
  return /** @type{?proto.proto.TransactionID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.TransactionID, 11));
};


/**
 * @param {?proto.proto.TransactionID|undefined} value
 * @return {!proto.proto.ScheduleInfo} returns this
*/
proto.proto.ScheduleInfo.prototype.setScheduledtransactionid = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleInfo} returns this
 */
proto.proto.ScheduleInfo.prototype.clearScheduledtransactionid = function() {
  return this.setScheduledtransactionid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleInfo.prototype.hasScheduledtransactionid = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.ScheduleGetInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.ScheduleGetInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.ScheduleGetInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ScheduleGetInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    header: (f = msg.getHeader()) && ResponseHeader_pb.ResponseHeader.toObject(includeInstance, f),
    scheduleinfo: (f = msg.getScheduleinfo()) && proto.proto.ScheduleInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.ScheduleGetInfoResponse}
 */
proto.proto.ScheduleGetInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.ScheduleGetInfoResponse;
  return proto.proto.ScheduleGetInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.ScheduleGetInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.ScheduleGetInfoResponse}
 */
proto.proto.ScheduleGetInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new ResponseHeader_pb.ResponseHeader;
      reader.readMessage(value,ResponseHeader_pb.ResponseHeader.deserializeBinaryFromReader);
      msg.setHeader(value);
      break;
    case 2:
      var value = new proto.proto.ScheduleInfo;
      reader.readMessage(value,proto.proto.ScheduleInfo.deserializeBinaryFromReader);
      msg.setScheduleinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.ScheduleGetInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.ScheduleGetInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.ScheduleGetInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.ScheduleGetInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeader();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      ResponseHeader_pb.ResponseHeader.serializeBinaryToWriter
    );
  }
  f = message.getScheduleinfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.proto.ScheduleInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional ResponseHeader header = 1;
 * @return {?proto.proto.ResponseHeader}
 */
proto.proto.ScheduleGetInfoResponse.prototype.getHeader = function() {
  return /** @type{?proto.proto.ResponseHeader} */ (
    jspb.Message.getWrapperField(this, ResponseHeader_pb.ResponseHeader, 1));
};


/**
 * @param {?proto.proto.ResponseHeader|undefined} value
 * @return {!proto.proto.ScheduleGetInfoResponse} returns this
*/
proto.proto.ScheduleGetInfoResponse.prototype.setHeader = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleGetInfoResponse} returns this
 */
proto.proto.ScheduleGetInfoResponse.prototype.clearHeader = function() {
  return this.setHeader(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleGetInfoResponse.prototype.hasHeader = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ScheduleInfo scheduleInfo = 2;
 * @return {?proto.proto.ScheduleInfo}
 */
proto.proto.ScheduleGetInfoResponse.prototype.getScheduleinfo = function() {
  return /** @type{?proto.proto.ScheduleInfo} */ (
    jspb.Message.getWrapperField(this, proto.proto.ScheduleInfo, 2));
};


/**
 * @param {?proto.proto.ScheduleInfo|undefined} value
 * @return {!proto.proto.ScheduleGetInfoResponse} returns this
*/
proto.proto.ScheduleGetInfoResponse.prototype.setScheduleinfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.proto.ScheduleGetInfoResponse} returns this
 */
proto.proto.ScheduleGetInfoResponse.prototype.clearScheduleinfo = function() {
  return this.setScheduleinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.ScheduleGetInfoResponse.prototype.hasScheduleinfo = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.proto);
