export function NetworkService(): void;
export namespace NetworkService {
    namespace getVersionInfo {
        export const methodName: string;
        export { NetworkService as service };
        export const requestStream: boolean;
        export const responseStream: boolean;
        export const requestType: typeof Query_pb.Query;
        export const responseType: typeof Response_pb.Response;
    }
    namespace uncheckedSubmit {
        const methodName_1: string;
        export { methodName_1 as methodName };
        export { NetworkService as service };
        const requestStream_1: boolean;
        export { requestStream_1 as requestStream };
        const responseStream_1: boolean;
        export { responseStream_1 as responseStream };
        const requestType_1: typeof Transaction_pb.Transaction;
        export { requestType_1 as requestType };
        const responseType_1: typeof TransactionResponse_pb.TransactionResponse;
        export { responseType_1 as responseType };
    }
}
export function NetworkServiceClient(serviceHost: any, options: any): void;
export class NetworkServiceClient {
    constructor(serviceHost: any, options: any);
    serviceHost: any;
    options: any;
    getVersionInfo(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    uncheckedSubmit(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
}
import Query_pb = require("./Query_pb");
import Response_pb = require("./Response_pb");
import Transaction_pb = require("./Transaction_pb");
import TransactionResponse_pb = require("./TransactionResponse_pb");
