export function FileService(): void;
export namespace FileService {
    namespace createFile {
        export const methodName: string;
        export { FileService as service };
        export const requestStream: boolean;
        export const responseStream: boolean;
        export const requestType: typeof Transaction_pb.Transaction;
        export const responseType: typeof TransactionResponse_pb.TransactionResponse;
    }
    namespace updateFile {
        const methodName_1: string;
        export { methodName_1 as methodName };
        export { FileService as service };
        const requestStream_1: boolean;
        export { requestStream_1 as requestStream };
        const responseStream_1: boolean;
        export { responseStream_1 as responseStream };
        const requestType_1: typeof Transaction_pb.Transaction;
        export { requestType_1 as requestType };
        const responseType_1: typeof TransactionResponse_pb.TransactionResponse;
        export { responseType_1 as responseType };
    }
    namespace deleteFile {
        const methodName_2: string;
        export { methodName_2 as methodName };
        export { FileService as service };
        const requestStream_2: boolean;
        export { requestStream_2 as requestStream };
        const responseStream_2: boolean;
        export { responseStream_2 as responseStream };
        const requestType_2: typeof Transaction_pb.Transaction;
        export { requestType_2 as requestType };
        const responseType_2: typeof TransactionResponse_pb.TransactionResponse;
        export { responseType_2 as responseType };
    }
    namespace appendContent {
        const methodName_3: string;
        export { methodName_3 as methodName };
        export { FileService as service };
        const requestStream_3: boolean;
        export { requestStream_3 as requestStream };
        const responseStream_3: boolean;
        export { responseStream_3 as responseStream };
        const requestType_3: typeof Transaction_pb.Transaction;
        export { requestType_3 as requestType };
        const responseType_3: typeof TransactionResponse_pb.TransactionResponse;
        export { responseType_3 as responseType };
    }
    namespace getFileContent {
        const methodName_4: string;
        export { methodName_4 as methodName };
        export { FileService as service };
        const requestStream_4: boolean;
        export { requestStream_4 as requestStream };
        const responseStream_4: boolean;
        export { responseStream_4 as responseStream };
        const requestType_4: typeof Query_pb.Query;
        export { requestType_4 as requestType };
        const responseType_4: typeof Response_pb.Response;
        export { responseType_4 as responseType };
    }
    namespace getFileInfo {
        const methodName_5: string;
        export { methodName_5 as methodName };
        export { FileService as service };
        const requestStream_5: boolean;
        export { requestStream_5 as requestStream };
        const responseStream_5: boolean;
        export { responseStream_5 as responseStream };
        const requestType_5: typeof Query_pb.Query;
        export { requestType_5 as requestType };
        const responseType_5: typeof Response_pb.Response;
        export { responseType_5 as responseType };
    }
    namespace systemDelete {
        const methodName_6: string;
        export { methodName_6 as methodName };
        export { FileService as service };
        const requestStream_6: boolean;
        export { requestStream_6 as requestStream };
        const responseStream_6: boolean;
        export { responseStream_6 as responseStream };
        const requestType_6: typeof Transaction_pb.Transaction;
        export { requestType_6 as requestType };
        const responseType_6: typeof TransactionResponse_pb.TransactionResponse;
        export { responseType_6 as responseType };
    }
    namespace systemUndelete {
        const methodName_7: string;
        export { methodName_7 as methodName };
        export { FileService as service };
        const requestStream_7: boolean;
        export { requestStream_7 as requestStream };
        const responseStream_7: boolean;
        export { responseStream_7 as responseStream };
        const requestType_7: typeof Transaction_pb.Transaction;
        export { requestType_7 as requestType };
        const responseType_7: typeof TransactionResponse_pb.TransactionResponse;
        export { responseType_7 as responseType };
    }
}
export function FileServiceClient(serviceHost: any, options: any): void;
export class FileServiceClient {
    constructor(serviceHost: any, options: any);
    serviceHost: any;
    options: any;
    createFile(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    updateFile(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    deleteFile(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    appendContent(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    getFileContent(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    getFileInfo(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    systemDelete(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
    systemUndelete(requestMessage: any, metadata: any, callback: any, ...args: any[]): {
        cancel: () => void;
    };
}
import Transaction_pb = require("./Transaction_pb");
import TransactionResponse_pb = require("./TransactionResponse_pb");
import Query_pb = require("./Query_pb");
import Response_pb = require("./Response_pb");
