/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").proto.ITimestamp} HashgraphProto.proto.ITimestamp
 */
/**
 * @namespace com
 * @typedef {import("@hashgraph/proto").com.hedera.mirror.api.proto.IConsensusTopicResponse} com.hedera.mirror.api.proto.IConsensusTopicResponse
 */
export default class TopicMessage {
    /**
     * @internal
     * @param {com.hedera.mirror.api.proto.IConsensusTopicResponse} response
     * @returns {TopicMessage}
     */
    static _ofSingle(response: com.hedera.mirror.api.proto.IConsensusTopicResponse): TopicMessage;
    /**
     * @internal
     * @param {com.hedera.mirror.api.proto.IConsensusTopicResponse[]} responses
     * @returns {TopicMessage}
     */
    static _ofMany(responses: com.hedera.mirror.api.proto.IConsensusTopicResponse[]): TopicMessage;
    /**
     * @private
     * @param {object} props
     * @param {Timestamp} props.consensusTimestamp
     * @param {Uint8Array} props.contents
     * @param {Uint8Array} props.runningHash
     * @param {Long} props.sequenceNumber
     * @param {?TransactionId} props.initialTransactionId
     * @param {TopicMessageChunk[]} props.chunks
     */
    private constructor();
    /** @readonly */
    readonly consensusTimestamp: Timestamp;
    /** @readonly */
    readonly contents: Uint8Array;
    /** @readonly */
    readonly runningHash: Uint8Array;
    /** @readonly */
    readonly sequenceNumber: Long.Long;
    /** @readonly */
    readonly chunks: TopicMessageChunk[];
    /** @readonly */
    readonly initialTransactionId: TransactionId | null;
}
export namespace HashgraphProto {
    namespace proto {
        type ITimestamp = import("@hashgraph/proto").proto.ITimestamp;
    }
}
export namespace com {
    namespace hedera {
        namespace mirror {
            namespace api {
                namespace proto {
                    type IConsensusTopicResponse = import("@hashgraph/proto").com.hedera.mirror.api.proto.IConsensusTopicResponse;
                }
            }
        }
    }
}
import Timestamp from "../Timestamp.js";
import Long from "long";
import TopicMessageChunk from "./TopicMessageChunk.js";
import TransactionId from "../transaction/TransactionId.js";
