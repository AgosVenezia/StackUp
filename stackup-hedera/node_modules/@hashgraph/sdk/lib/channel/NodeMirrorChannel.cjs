"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var grpc = _interopRequireWildcard(require("@grpc/grpc-js"));
var _MirrorChannel = _interopRequireDefault(require("./MirrorChannel.cjs"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }
function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }
/*-
 * ‌
 * Hedera JavaScript SDK
 * ​
 * Copyright (C) 2020 - 2022 Hedera Hashgraph, LLC
 * ​
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ‍
 */

/**
 * @typedef {import("../channel/Channel.js").default} Channel
 * @typedef {import("./MirrorChannel.js").MirrorError} MirrorError
 */

/**
 * @internal
 */
class NodeMirrorChannel extends _MirrorChannel.default {
  /**
   * @internal
   * @param {string} address
   */
  constructor(address) {
    super();

    /**
     * @type {grpc.Client}
     * @private
     */
    this._client = new grpc.Client(address, address.endsWith(":50212") || address.endsWith(":443") ? grpc.credentials.createSsl() : grpc.credentials.createInsecure());
  }

  /**
   * @override
   * @returns {void}
   */
  close() {
    this._client.close();
  }

  /**
   * @override
   * @internal
   * @param {string} serviceName
   * @param {string} methodName
   * @param {Uint8Array} requestData
   * @param {(data: Uint8Array) => void} callback
   * @param {(error: MirrorError | Error) => void} error
   * @param {() => void} end
   * @returns {() => void}
   */
  makeServerStreamRequest(serviceName, methodName, requestData, callback, error, end) {
    const stream = this._client.makeServerStreamRequest(`/com.hedera.mirror.api.proto.${serviceName}/${methodName}`, value => value, value => value, Buffer.from(requestData)).on("data", ( /** @type {Uint8Array} */data) => {
      callback(data);
    }).on("status", ( /** @type {grpc.StatusObject} */status) => {
      if (status.code == 0) {
        end();
      } else {
        error(status);
      }
    })
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    .on("error", ( /** @type {grpc.StatusObject} */_) => {
      // Do nothing
    });
    return () => {
      stream.cancel();
    };
  }
}
exports.default = NodeMirrorChannel;