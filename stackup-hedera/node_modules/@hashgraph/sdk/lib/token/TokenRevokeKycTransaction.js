"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TokenRevokeKycTransaction = void 0;
const TransactionBuilder_1 = require("../TransactionBuilder");
const TokenRevokeKyc_pb_1 = require("../generated/TokenRevokeKyc_pb");
const TokenService_pb_service_1 = require("../generated/TokenService_pb_service");
const TokenId_1 = require("./TokenId");
const AccountId_1 = require("../account/AccountId");
/**
 * Revokes KYC to the account for the given token. Must be signed by the Token's kycKey.
 * If the provided account is not found, the transaction will resolve to INVALID_ACCOUNT_ID.
 * If the provided account has been deleted, the transaction will resolve to ACCOUNT_DELETED.
 * If the provided token is not found, the transaction will resolve to INVALID_TOKEN_ID.
 * If the provided token has been deleted, the transaction will resolve to TOKEN_WAS_DELETED.
 * If an Association between the provided token and account is not found, the transaction will resolve to
 * TOKEN_NOT_ASSOCIATED_TO_ACCOUNT.
 * If no KYC Key is defined, the transaction will resolve to TOKEN_HAS_NO_KYC_KEY.
 * Once executed the Account is marked as KYC Revokeed.
 */
class TokenRevokeKycTransaction extends TransactionBuilder_1.SingleTransactionBuilder {
    constructor() {
        super();
        this._body = new TokenRevokeKyc_pb_1.TokenRevokeKycTransactionBody();
        this._inner.setTokenrevokekyc(this._body);
    }
    /**
     * The token for which this account will get his KYC revoked. If token does not exist, transaction results in
     * INVALID_TOKEN_ID
     */
    setTokenId(id) {
        this._body.setToken(new TokenId_1.TokenId(id)._toProto());
        return this;
    }
    /**
     * The account to be KYC Revoked
     */
    setAccountId(id) {
        this._body.setAccount(new AccountId_1.AccountId(id)._toProto());
        return this;
    }
    get _method() {
        return TokenService_pb_service_1.TokenService.revokeKycFromTokenAccount;
    }
    _doValidate(_) { }
}
exports.TokenRevokeKycTransaction = TokenRevokeKycTransaction;
