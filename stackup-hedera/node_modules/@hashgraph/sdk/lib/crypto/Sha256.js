"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sha256 = void 0;
const crypto = require("crypto");
const StableLibSha256 = require("@stablelib/sha256");
class Sha256 {
    static hash(data) {
        return __awaiter(this, void 0, void 0, function* () {
            if (typeof window !== "undefined") {
                // Try SubtleCrypto if it exists, otherwise fallback to @stablelibs/sha256
                try {
                    const digest = yield window.crypto.subtle.digest("SHA-256", data);
                    return new Uint8Array(digest);
                }
                catch (_a) {
                    return StableLibSha256.hash(data);
                }
            }
            const hasher = crypto.createHash("sha256");
            hasher.update(data);
            return hasher.digest();
        });
    }
}
exports.Sha256 = Sha256;
