Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
function astFromType(type) {
    if (graphql_1.isNonNullType(type)) {
        var innerType = astFromType(type.ofType);
        if (innerType.kind === graphql_1.Kind.NON_NULL_TYPE) {
            throw new Error("Invalid type node " + JSON.stringify(type) + ". Inner type of non-null type cannot be a non-null type.");
        }
        return {
            kind: graphql_1.Kind.NON_NULL_TYPE,
            type: innerType,
        };
    }
    else if (graphql_1.isListType(type)) {
        return {
            kind: graphql_1.Kind.LIST_TYPE,
            type: astFromType(type.ofType),
        };
    }
    return {
        kind: graphql_1.Kind.NAMED_TYPE,
        name: {
            kind: graphql_1.Kind.NAME,
            value: type.name,
        },
    };
}
exports.astFromType = astFromType;
//# sourceMappingURL=astFromType.js.map