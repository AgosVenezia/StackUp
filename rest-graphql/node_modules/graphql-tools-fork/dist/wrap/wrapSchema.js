Object.defineProperty(exports, "__esModule", { value: true });
var index_1 = require("../generate/index");
var Interfaces_1 = require("../Interfaces");
var index_2 = require("../utils/index");
var resolvers_1 = require("./resolvers");
var transforms_1 = require("./transforms");
function wrapSchema(subschemaOrSubschemaConfig, transforms) {
    var subschemaConfig = Interfaces_1.isSubschemaConfig(subschemaOrSubschemaConfig)
        ? subschemaOrSubschemaConfig
        : { schema: subschemaOrSubschemaConfig };
    var schema = index_2.cloneSchema(subschemaConfig.schema);
    resolvers_1.stripResolvers(schema);
    index_1.addResolversToSchema({
        schema: schema,
        resolvers: resolvers_1.generateProxyingResolvers({ subschemaConfig: subschemaConfig, transforms: transforms }),
        resolverValidationOptions: {
            allowResolversNotInSchema: true,
        },
    });
    var schemaTransforms = [];
    if (subschemaConfig.transforms != null) {
        schemaTransforms = schemaTransforms.concat(subschemaConfig.transforms);
    }
    if (transforms != null) {
        schemaTransforms = schemaTransforms.concat(transforms);
    }
    return transforms_1.applySchemaTransforms(schema, schemaTransforms);
}
exports.wrapSchema = wrapSchema;
//# sourceMappingURL=wrapSchema.js.map