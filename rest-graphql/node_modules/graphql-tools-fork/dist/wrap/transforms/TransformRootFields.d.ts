import { GraphQLSchema, GraphQLField, GraphQLFieldConfig } from 'graphql';
import { Transform, Request, FieldNodeTransformer } from '../../Interfaces';
export declare type RootTransformer = (operation: 'Query' | 'Mutation' | 'Subscription', fieldName: string, field: GraphQLField<any, any>) => GraphQLFieldConfig<any, any> | RenamedField | null | undefined;
declare type RenamedField = {
    name: string;
    field?: GraphQLFieldConfig<any, any>;
};
export default class TransformRootFields implements Transform {
    private readonly transformer;
    constructor(rootFieldTransformer: RootTransformer, fieldNodeTransformer?: FieldNodeTransformer);
    transformSchema(originalSchema: GraphQLSchema): GraphQLSchema;
    transformRequest(originalRequest: Request): Request;
}
export {};
