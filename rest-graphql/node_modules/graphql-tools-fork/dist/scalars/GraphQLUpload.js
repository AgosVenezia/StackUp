Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
/**
 * A scalar that supports file uploads with support for schema proxying.
 */
var GraphQLUpload = new graphql_1.GraphQLScalarType({
    name: 'Upload',
    description: 'The `Upload` scalar type represents a file upload.',
    parseValue: function (value) {
        if (value != null && value.promise instanceof Promise) {
            // graphql-upload v10
            return value.promise;
        }
        else if (value instanceof Promise) {
            // graphql-upload v9
            return value;
        }
        throw new graphql_1.GraphQLError('Upload value invalid.');
    },
    // serialization requires to support schema stitching
    serialize: function (value) { return value; },
    parseLiteral: function (ast) {
        throw new graphql_1.GraphQLError('Upload literal unsupported.', ast);
    },
});
exports.GraphQLUpload = GraphQLUpload;
//# sourceMappingURL=GraphQLUpload.js.map