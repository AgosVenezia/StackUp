var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var graphql_1 = require("graphql");
var defaultMergedResolver_1 = __importDefault(require("./defaultMergedResolver"));
var resolveFromParentTypename_1 = __importDefault(require("./resolveFromParentTypename"));
function makeMergedType(type) {
    if (graphql_1.isObjectType(type)) {
        type.isTypeOf = undefined;
        var fieldMap_1 = type.getFields();
        Object.keys(fieldMap_1).forEach(function (fieldName) {
            fieldMap_1[fieldName].resolve = defaultMergedResolver_1.default;
            fieldMap_1[fieldName].subscribe = null;
        });
    }
    else if (graphql_1.isAbstractType(type)) {
        type.resolveType = function (parent) { return resolveFromParentTypename_1.default(parent); };
    }
}
exports.makeMergedType = makeMergedType;
//# sourceMappingURL=makeMergedType.js.map