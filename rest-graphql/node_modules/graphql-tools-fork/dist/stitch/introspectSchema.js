var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var apollo_link_1 = require("apollo-link");
var graphql_1 = require("graphql");
var errors_1 = require("./errors");
var linkToFetcher_1 = __importDefault(require("./linkToFetcher"));
var parsedIntrospectionQuery = graphql_1.parse(graphql_1.getIntrospectionQuery());
function introspectSchema(linkOrFetcher, linkContext) {
    var fetcher = linkOrFetcher instanceof apollo_link_1.ApolloLink
        ? linkToFetcher_1.default(linkOrFetcher)
        : linkOrFetcher;
    return fetcher({
        query: parsedIntrospectionQuery,
        context: linkContext,
    }).then(function (introspectionResult) {
        if ((Array.isArray(introspectionResult.errors) &&
            introspectionResult.errors.length) ||
            !introspectionResult.data.__schema) {
            if (Array.isArray(introspectionResult.errors)) {
                var combinedError = errors_1.combineErrors(introspectionResult.errors);
                throw combinedError;
            }
            else {
                throw new Error('Could not obtain introspection result, received: ' +
                    JSON.stringify(introspectionResult));
            }
        }
        else {
            var schema = graphql_1.buildClientSchema(introspectionResult.data);
            return schema;
        }
    });
}
exports.default = introspectSchema;
//# sourceMappingURL=introspectSchema.js.map