{
	"id": "a4081a26bc40bfdee52615785e0844a1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.21",
	"solcLongVersion": "0.8.21+commit.d9974bed",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyNFT.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.13;\r\n\r\nimport \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n\r\ncontract MyNFT is ERC721URIStorage {\r\n  constructor() ERC721(\"Stack NFTs\", \"SNFT\") {}\r\n\r\n  uint256 public nextTokenId;\r\n\r\n  function mint (\r\n    address _to,\r\n    string calldata _uri\r\n   ) external {\r\n     _mint(_to, nextTokenId);\r\n     _setTokenURI(nextTokenId, _uri);\r\n     nextTokenId++;\r\n  }\r\n}"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        if (_ownerOf(tokenId) == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_update}. When burning, this override will additionally check if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {\n        address previousOwner = super._update(to, tokenId, auth);\n\n        if (to == address(0) && bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n\n        return previousOwner;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireMinted(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not\n     * verify this assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` has not approval for all assets of the provided `owner` nor the actual owner approved the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function relies on {_isAuthorized}, so it doesn't check whether `owner` is the\n     * actual owner of `tokenId`.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            delete _tokenApprovals[tokenId];\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address owner = ownerOf(tokenId);\n\n        // We do not use _isAuthorized because single-token approvals should not be able to call approve\n        if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n            revert ERC721InvalidApprover(auth);\n        }\n\n        _tokenApprovals[tokenId] = to;\n        emit Approval(owner, to, tokenId);\n\n        return owner;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        if (_ownerOf(tokenId) == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyNFT.sol": {
				"MyNFT": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTokenId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyNFT.sol\":198:497  contract MyNFT is ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MyNFT.sol\":238:283  constructor() ERC721(\"Stack NFTs\", \"SNFT\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x537461636b204e46547300000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  0x534e465400000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MyNFT.sol\":198:497  contract MyNFT is ERC721URIStorage {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:106   */\ntag_10:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_11:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_12:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_13:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_35\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_35:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_36\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_37\n  tag_12\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":714:798   */\ntag_36:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_14:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_15:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_16:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_17:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_42\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_16\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1429:1468   */\n  tag_43\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_16\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_18:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_19:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_20:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_47\n    /* \"#utility.yul\":1818:1852   */\n  tag_48\n    /* \"#utility.yul\":1827:1851   */\n  tag_49\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_18\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1818:1852   */\n  tag_19\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1800:1853   */\n  tag_18\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_21:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_22:\n    /* \"#utility.yul\":2056:2095   */\n  tag_52\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_20\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":2117:2208   */\n  tag_53\n    /* \"#utility.yul\":2166:2207   */\n  tag_54\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_23:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_24:\n    /* \"#utility.yul\":2377:2409   */\n  tag_57\n  tag_23\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":2418:2483   */\n  tag_58\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_22\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_25:\n    /* \"#utility.yul\":2555:2675   */\ntag_60:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_24\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_60)\ntag_62:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_26:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_66\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_14\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2906:2935   */\n  tag_67\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_15\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_68:\n    /* \"#utility.yul\":3133:3213   */\n  tag_69\n    /* \"#utility.yul\":3189:3211   */\n  tag_70\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_15\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_25\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_65:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_27:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_28:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_73\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_27\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_29:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_75\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_6:\n    /* \"#utility.yul\":3950:3987   */\n  tag_77\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_10\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_79\n  tag_11\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":4038:4094   */\ntag_78:\n    /* \"#utility.yul\":4118:4156   */\n  tag_80\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_13\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":4203:4270   */\n  tag_81\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_26\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_83\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_84:\n    /* \"#utility.yul\":5144:5211   */\n  tag_85\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_29\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_82)\n    /* \"#utility.yul\":4365:4983   */\ntag_83:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_86\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_14\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_87:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_91\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_28\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_90:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_82:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/MyNFT.sol\":198:497  contract MyNFT is ERC721URIStorage {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyNFT.sol\":198:497  contract MyNFT is ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xd0def521\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x75794a3c\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x095ea7b3\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":683:888  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_3:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2577  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3621:3776  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3447:3560  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_6:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4268:4846  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4912:5044  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_8:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2185:2426  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_9:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT.sol\":289:315  uint256 public nextTokenId */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2641:2734  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3843:3987  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5110:5318  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":954:1548  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/MyNFT.sol\":322:494  function mint (... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4053:4206  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":683:888  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_24:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":785:789  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":830:840  0x49064906 */\n      0x49064906\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":823:841  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":808:841  interfaceId == bytes4(0x49064906) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":808:819  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":808:841  interfaceId == bytes4(0x49064906) */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":808:881  interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId) */\n      dup1\n      tag_86\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":845:881  super.supportsInterface(interfaceId) */\n      tag_87\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":869:880  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":845:868  super.supportsInterface */\n      tag_88\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":845:881  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_87:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":808:881  interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId) */\n    tag_86:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":801:881  return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":683:888  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2577  function name() public view virtual returns (string memory) {... */\n    tag_28:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2533:2546  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2565:2570  _name */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2558:2570  return _name */\n      dup1\n      sload\n      tag_90\n      swap1\n      tag_91\n      jump\t// in\n    tag_90:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_92\n      swap1\n      tag_91\n      jump\t// in\n    tag_92:\n      dup1\n      iszero\n      tag_93\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_94\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_93)\n    tag_94:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_95:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_95\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2488:2577  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3621:3776  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_34:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3688:3695  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3707:3730  _requireMinted(tokenId) */\n      tag_97\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3722:3729  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3707:3721  _requireMinted */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3707:3730  _requireMinted(tokenId) */\n      jump\t// in\n    tag_97:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3748:3769  _getApproved(tokenId) */\n      tag_99\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3761:3768  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3748:3760  _getApproved */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3748:3769  _getApproved(tokenId) */\n      jump\t// in\n    tag_99:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3741:3769  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3621:3776  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3447:3560  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_40:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3518:3553  _approve(to, tokenId, _msgSender()) */\n      tag_102\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3527:3529  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3531:3538  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3540:3552  _msgSender() */\n      tag_103\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3540:3550  _msgSender */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3540:3552  _msgSender() */\n      jump\t// in\n    tag_103:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3518:3526  _approve */\n      tag_105\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3518:3553  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_102:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3447:3560  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4268:4846  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_44:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4376:4377  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4362:4378  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4362:4364  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4362:4378  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4358:4445  if (to == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4431:4432  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4401:4434  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4358:4445  if (to == address(0)) {... */\n    tag_107:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4663:4684  address previousOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4687:4721  _update(to, tokenId, _msgSender()) */\n      tag_109\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4695:4697  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4699:4706  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4708:4720  _msgSender() */\n      tag_110\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4708:4718  _msgSender */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4708:4720  _msgSender() */\n      jump\t// in\n    tag_110:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4687:4694  _update */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4687:4721  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_109:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4663:4721  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4752:4756  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4735:4756  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4735:4748  previousOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4735:4756  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4731:4840  if (previousOwner != from) {... */\n      tag_112\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4800:4804  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4806:4813  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4815:4828  previousOwner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4779:4829  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_113\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4731:4840  if (previousOwner != from) {... */\n    tag_112:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4348:4846  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4268:4846  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4912:5044  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_47:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4998:5037  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_116\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5015:5019  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5021:5023  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5025:5032  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4998:5037  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4998:5014  safeTransferFrom */\n      tag_71\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4998:5037  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_116:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4912:5044  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2185:2426  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_50:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2267:2280  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2283:2300  _ownerOf(tokenId) */\n      tag_118\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2292:2299  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2283:2291  _ownerOf */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2283:2300  _ownerOf(tokenId) */\n      jump\t// in\n    tag_118:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2267:2300  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2331:2332  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2314:2333  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2314:2319  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2314:2333  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2310:2398  if (owner == address(0)) {... */\n      tag_120\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2379:2386  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2356:2387  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2310:2398  if (owner == address(0)) {... */\n    tag_120:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2414:2419  owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2407:2419  return owner */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2185:2426  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_55:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_123\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_123:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT.sol\":289:315  uint256 public nextTokenId */\n    tag_59:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2641:2734  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2688:2701  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2720:2727  _symbol */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2713:2727  return _symbol */\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_91\n      jump\t// in\n    tag_126:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_127\n      swap1\n      tag_91\n      jump\t// in\n    tag_127:\n      dup1\n      iszero\n      tag_128\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_129\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_128)\n    tag_129:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_130:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_130\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2641:2734  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3843:3987  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_67:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3928:3980  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_132\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3947:3959  _msgSender() */\n      tag_133\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3947:3957  _msgSender */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3947:3959  _msgSender() */\n      jump\t// in\n    tag_133:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3961:3969  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3971:3979  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3928:3946  _setApprovalForAll */\n      tag_134\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3928:3980  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_132:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3843:3987  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5110:5318  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_71:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5223:5254  transferFrom(from, to, tokenId) */\n      tag_136\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5236:5240  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5242:5244  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5246:5253  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5223:5235  transferFrom */\n      tag_44\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5223:5254  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_136:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5264:5311  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_137\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5287:5291  from */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5293:5295  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5297:5304  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5306:5310  data */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5264:5286  _checkOnERC721Received */\n      tag_138\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5264:5311  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_137:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5110:5318  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":954:1548  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_74:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1027:1040  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1052:1075  _requireMinted(tokenId) */\n      tag_140\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1067:1074  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1052:1066  _requireMinted */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1052:1075  _requireMinted(tokenId) */\n      jump\t// in\n    tag_140:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1086:1109  string memory _tokenURI */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1112:1122  _tokenURIs */\n      0x06\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1112:1131  _tokenURIs[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1123:1130  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1112:1131  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1086:1131  string memory _tokenURI = _tokenURIs[tokenId] */\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_91\n      jump\t// in\n    tag_141:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_142\n      swap1\n      tag_91\n      jump\t// in\n    tag_142:\n      dup1\n      iszero\n      tag_143\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_144\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_143)\n    tag_144:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_145:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_145\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_143:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1141:1159  string memory base */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1162:1172  _baseURI() */\n      tag_146\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1162:1170  _baseURI */\n      tag_147\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1162:1172  _baseURI() */\n      jump\t// in\n    tag_146:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1141:1172  string memory base = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1267:1268  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1251:1255  base */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1245:1263  bytes(base).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1245:1268  bytes(base).length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1241:1311  if (bytes(base).length == 0) {... */\n      tag_148\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1291:1300  _tokenURI */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1284:1300  return _tokenURI */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_139)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1241:1311  if (bytes(base).length == 0) {... */\n    tag_148:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1436:1437  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1416:1425  _tokenURI */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1410:1433  bytes(_tokenURI).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1410:1437  bytes(_tokenURI).length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1406:1501  if (bytes(_tokenURI).length > 0) {... */\n      iszero\n      tag_149\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1474:1478  base */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1480:1489  _tokenURI */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1460:1490  string.concat(base, _tokenURI) */\n      add(0x20, mload(0x40))\n      tag_150\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1453:1490  return string.concat(base, _tokenURI) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_139)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1406:1501  if (bytes(_tokenURI).length > 0) {... */\n    tag_149:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1518:1541  super.tokenURI(tokenId) */\n      tag_152\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1533:1540  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1518:1532  super.tokenURI */\n      tag_153\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1518:1541  super.tokenURI(tokenId) */\n      jump\t// in\n    tag_152:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1511:1541  return super.tokenURI(tokenId) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":954:1548  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_139:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/MyNFT.sol\":322:494  function mint (... */\n    tag_79:\n        /* \"contracts/MyNFT.sol\":405:428  _mint(_to, nextTokenId) */\n      tag_155\n        /* \"contracts/MyNFT.sol\":411:414  _to */\n      dup4\n        /* \"contracts/MyNFT.sol\":416:427  nextTokenId */\n      sload(0x07)\n        /* \"contracts/MyNFT.sol\":405:410  _mint */\n      tag_156\n        /* \"contracts/MyNFT.sol\":405:428  _mint(_to, nextTokenId) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/MyNFT.sol\":436:467  _setTokenURI(nextTokenId, _uri) */\n      tag_157\n        /* \"contracts/MyNFT.sol\":449:460  nextTokenId */\n      sload(0x07)\n        /* \"contracts/MyNFT.sol\":462:466  _uri */\n      dup4\n      dup4\n        /* \"contracts/MyNFT.sol\":436:467  _setTokenURI(nextTokenId, _uri) */\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/MyNFT.sol\":436:448  _setTokenURI */\n      tag_158\n        /* \"contracts/MyNFT.sol\":436:467  _setTokenURI(nextTokenId, _uri) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/MyNFT.sol\":475:486  nextTokenId */\n      0x07\n      0x00\n        /* \"contracts/MyNFT.sol\":475:488  nextTokenId++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/MyNFT.sol\":322:494  function mint (... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4053:4206  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_83:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4141:4145  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4164:4182  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4164:4189  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4183:4188  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4164:4189  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4164:4199  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4190:4198  operator */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4164:4199  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4157:4199  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":4053:4206  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_88:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_163\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_163:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_164\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_165\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_166\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_165:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_164:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15428:15607  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_98:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15534:15535  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15505:15536  _ownerOf(tokenId) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15505:15522  _ownerOf(tokenId) */\n      tag_168\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15514:15521  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15505:15513  _ownerOf */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15505:15522  _ownerOf(tokenId) */\n      jump\t// in\n    tag_168:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15505:15536  _ownerOf(tokenId) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15501:15601  if (_ownerOf(tokenId) == address(0)) {... */\n      tag_169\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15582:15589  tokenId */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15559:15590  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15501:15601  if (_ownerOf(tokenId) == address(0)) {... */\n    tag_169:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15428:15607  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6063:6190  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_100:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6133:6140  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6159:6174  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6159:6183  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6175:6182  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6159:6183  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6152:6183  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6063:6190  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n    tag_104:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":694:701  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":720:730  msg.sender */\n      caller\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":713:730  return msg.sender */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":641:737  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14323:14823  function _approve(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_105:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14410:14417  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14429:14442  address owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14445:14461  ownerOf(tokenId) */\n      tag_174\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14453:14460  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14445:14452  ownerOf */\n      tag_50\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14445:14461  ownerOf(tokenId) */\n      jump\t// in\n    tag_174:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14429:14461  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14597:14598  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14581:14599  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14581:14585  auth */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14581:14599  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14581:14616  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14612:14616  auth */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14603:14616  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14603:14608  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14603:14616  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14581:14616  auth != address(0) && owner != auth */\n    tag_175:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14581:14650  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_176\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14621:14650  isApprovedForAll(owner, auth) */\n      tag_177\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14638:14643  owner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14645:14649  auth */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14621:14637  isApprovedForAll */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14621:14650  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_177:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14620:14650  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14581:14650  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_176:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14577:14711  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14695:14699  auth */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14673:14700  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14577:14711  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_178:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14748:14750  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14721:14736  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14721:14745  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14737:14744  tokenId */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14721:14745  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14721:14750  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14785:14792  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14781:14783  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14765:14793  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14774:14779  owner */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14765:14793  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14811:14816  owner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14804:14816  return owner */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":14323:14823  function _approve(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2241:2574  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n    tag_111:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2336:2343  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2355:2376  address previousOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2379:2411  super._update(to, tokenId, auth) */\n      tag_181\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2393:2395  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2397:2404  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2406:2410  auth */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2379:2392  super._update */\n      tag_182\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2379:2411  super._update(to, tokenId, auth) */\n      jump\t// in\n    tag_181:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2355:2411  address previousOwner = super._update(to, tokenId, auth) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2440:2441  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2426:2442  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2426:2428  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2426:2442  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2426:2484  to == address(0) && bytes(_tokenURIs[tokenId]).length != 0 */\n      dup1\n      iszero\n      tag_183\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2483:2484  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2452:2462  _tokenURIs */\n      0x06\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2452:2471  _tokenURIs[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2463:2470  tokenId */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2452:2471  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2446:2479  bytes(_tokenURIs[tokenId]).length */\n      dup1\n      sload\n      tag_184\n      swap1\n      tag_91\n      jump\t// in\n    tag_184:\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2446:2484  bytes(_tokenURIs[tokenId]).length != 0 */\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2426:2484  to == address(0) && bytes(_tokenURIs[tokenId]).length != 0 */\n    tag_183:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2422:2537  if (to == address(0) && bytes(_tokenURIs[tokenId]).length != 0) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2507:2517  _tokenURIs */\n      0x06\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2507:2526  _tokenURIs[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2518:2525  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2507:2526  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2500:2526  delete _tokenURIs[tokenId] */\n      tag_186\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2422:2537  if (to == address(0) && bytes(_tokenURIs[tokenId]).length != 0) {... */\n    tag_185:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2554:2567  previousOwner */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2547:2567  return previousOwner */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":2241:2574  function _update(address to, uint256 tokenId, address auth) internal virtual override returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5832:5947  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_119:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5898:5905  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5924:5931  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5924:5940  _owners[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5932:5939  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5924:5940  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5917:5940  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":5832:5947  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15032:15344  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_134:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15159:15160  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15139:15161  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15139:15147  operator */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15139:15161  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15135:15226  if (operator == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15206:15214  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15184:15215  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15135:15226  if (operator == address(0)) {... */\n    tag_190:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15273:15281  approved */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15235:15253  _operatorApprovals */\n      0x05\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15235:15260  _operatorApprovals[owner] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15254:15259  owner */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15235:15260  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15235:15270  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15261:15269  operator */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15235:15270  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15235:15281  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15318:15326  operator */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15296:15337  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15311:15316  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15296:15337  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15328:15336  approved */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15296:15337  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_192\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":15032:15344  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16146:16928  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_138:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16279:16280  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16262:16264  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16262:16276  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16262:16280  to.code.length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16258:16922  if (to.code.length > 0) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16316:16318  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16300:16336  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16337:16349  _msgSender() */\n      tag_195\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16337:16347  _msgSender */\n      tag_104\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16337:16349  _msgSender() */\n      jump\t// in\n    tag_195:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16351:16355  from */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16357:16364  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16366:16370  data */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16300:16371  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_196\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_199\n      swap2\n      swap1\n      tag_200\n      jump\t// in\n    tag_199:\n      0x01\n    tag_198:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16296:16912  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_201\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_206\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_205)\n    tag_206:\n      0x60\n      swap2\n      pop\n    tag_205:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16626:16627  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16609:16615  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16609:16622  reason.length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16609:16627  reason.length == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16605:16898  if (reason.length == 0) {... */\n      tag_207\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16680:16682  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16658:16683  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_208\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_208:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16605:16898  if (reason.length == 0) {... */\n    tag_207:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16850:16856  reason */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16844:16857  mload(reason) */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16835:16841  reason */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16831:16833  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16827:16842  add(32, reason) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16820:16858  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16296:16912  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_201:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16428:16469  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16418:16469  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16418:16424  retval */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16418:16469  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16414:16544  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_211\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16522:16524  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16500:16525  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16414:16544  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_211:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16372:16558  returns (bytes4 retval) {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16258:16922  if (to.code.length > 0) {... */\n    tag_194:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":16146:16928  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3298:3390  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_147:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3349:3362  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3374:3383  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3298:3390  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2800:3056  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n    tag_153:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2864:2877  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2889:2912  _requireMinted(tokenId) */\n      tag_215\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2904:2911  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2889:2903  _requireMinted */\n      tag_98\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2889:2912  _requireMinted(tokenId) */\n      jump\t// in\n    tag_215:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2923:2944  string memory baseURI */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2947:2957  _baseURI() */\n      tag_216\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2947:2955  _baseURI */\n      tag_147\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2947:2957  _baseURI() */\n      jump\t// in\n    tag_216:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2923:2957  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2998:2999  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2980:2987  baseURI */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2974:2995  bytes(baseURI).length */\n      mload\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2974:2999  bytes(baseURI).length > 0 */\n      gt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2974:3049  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      tag_217\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_218)\n    tag_217:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3016:3023  baseURI */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3025:3043  tokenId.toString() */\n      tag_219\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3025:3032  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3025:3041  tokenId.toString */\n      tag_220\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3025:3043  tokenId.toString() */\n      jump\t// in\n    tag_219:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":3002:3044  string.concat(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_221\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_221:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2974:3049  bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n    tag_218:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2967:3049  return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\" */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":2800:3056  function tokenURI(uint256 tokenId) public view virtual returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9974:10301  function _mint(address to, uint256 tokenId) internal {... */\n    tag_156:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10055:10056  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10041:10057  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10041:10043  to */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10041:10057  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10037:10124  if (to == address(0)) {... */\n      tag_223\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10110:10111  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10080:10113  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10037:10124  if (to == address(0)) {... */\n    tag_223:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10133:10154  address previousOwner */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10157:10189  _update(to, tokenId, address(0)) */\n      tag_225\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10165:10167  to */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10169:10176  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10186:10187  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10157:10164  _update */\n      tag_111\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10157:10189  _update(to, tokenId, address(0)) */\n      jump\t// in\n    tag_225:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10133:10189  address previousOwner = _update(to, tokenId, address(0)) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10228:10229  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10203:10230  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10203:10216  previousOwner */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10203:10230  previousOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10199:10295  if (previousOwner != address(0)) {... */\n      tag_226\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10281:10282  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10253:10284  ERC721InvalidSender(address(0)) */\n      mload(0x40)\n      0x73c6ac6e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_227\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_227:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10199:10295  if (previousOwner != address(0)) {... */\n    tag_226:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":10027:10301  {... */\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9974:10301  function _mint(address to, uint256 tokenId) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1733:2010  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n    tag_158:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1857:1858  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1828:1859  _ownerOf(tokenId) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1828:1845  _ownerOf(tokenId) */\n      tag_229\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1837:1844  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1828:1836  _ownerOf */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1828:1845  _ownerOf(tokenId) */\n      jump\t// in\n    tag_229:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1828:1859  _ownerOf(tokenId) == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1824:1924  if (_ownerOf(tokenId) == address(0)) {... */\n      tag_230\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1905:1912  tokenId */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1882:1913  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1824:1924  if (_ownerOf(tokenId) == address(0)) {... */\n    tag_230:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1955:1964  _tokenURI */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1933:1943  _tokenURIs */\n      0x06\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1933:1952  _tokenURIs[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1944:1951  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1933:1952  _tokenURIs[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1933:1964  _tokenURIs[tokenId] = _tokenURI */\n      swap1\n      dup2\n      tag_232\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1980:2003  MetadataUpdate(tokenId) */\n      0xf8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1995:2002  tokenId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1980:2003  MetadataUpdate(tokenId) */\n      mload(0x40)\n      tag_234\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1733:2010  function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":747:893  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_166:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":823:827  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":861:886  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":846:886  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":846:857  interfaceId */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":846:886  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":839:886  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":747:893  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8957:9652  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_182:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9043:9050  address */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9062:9074  address from */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9077:9094  _ownerOf(tokenId) */\n      tag_237\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9086:9093  tokenId */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9077:9085  _ownerOf */\n      tag_119\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9077:9094  _ownerOf(tokenId) */\n      jump\t// in\n    tag_237:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9062:9094  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9170:9171  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9154:9172  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9154:9158  auth */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9154:9172  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9150:9236  if (auth != address(0)) {... */\n      tag_238\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9188:9225  _checkAuthorized(from, auth, tokenId) */\n      tag_239\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9205:9209  from */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9211:9215  auth */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9217:9224  tokenId */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9188:9204  _checkAuthorized */\n      tag_240\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9188:9225  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_239:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9150:9236  if (auth != address(0)) {... */\n    tag_238:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9296:9297  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9280:9298  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9280:9284  from */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9280:9298  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9276:9432  if (from != address(0)) {... */\n      tag_241\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9321:9336  _tokenApprovals */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9321:9345  _tokenApprovals[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9337:9344  tokenId */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9321:9345  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9314:9345  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9406:9407  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9387:9396  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9387:9402  _balances[from] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9397:9401  from */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9387:9402  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9387:9407  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9276:9432  if (from != address(0)) {... */\n    tag_241:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9460:9461  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9446:9462  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9446:9448  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9446:9462  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9442:9549  if (to != address(0)) {... */\n      tag_242\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9523:9524  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9506:9515  _balances */\n      0x03\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9506:9519  _balances[to] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9516:9518  to */\n      dup8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9506:9519  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9506:9524  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9442:9549  if (to != address(0)) {... */\n    tag_242:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9578:9580  to */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9559:9566  _owners */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9559:9575  _owners[tokenId] */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9567:9574  tokenId */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9559:9575  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9559:9580  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9615:9622  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9611:9613  to */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9596:9623  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9605:9609  from */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9596:9623  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9641:9645  from */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":9634:9645  return from */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":8957:9652  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":639:1338  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_220:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":695:708  string memory */\n      0x60\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":744:758  uint256 length */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":781:782  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":761:778  Math.log10(value) */\n      tag_244\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":772:777  value */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":761:771  Math.log10 */\n      tag_245\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":761:778  Math.log10(value) */\n      jump\t// in\n    tag_244:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":761:782  Math.log10(value) + 1 */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":744:782  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":796:816  string memory buffer */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":830:836  length */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":819:837  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_246\n      jumpi\n      tag_247\n      tag_248\n      jump\t// in\n    tag_247:\n    tag_246:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_249\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_249:\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":796:837  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":851:862  uint256 ptr */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":977:983  length */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":973:975  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":969:984  add(32, length) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":961:967  buffer */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":957:985  add(buffer, add(32, length)) */\n      add\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":950:985  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1012:1295  while (true) {... */\n    tag_250:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1019:1023  true */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1012:1295  while (true) {... */\n      iszero\n      tag_251\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1043:1048  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1182:1193  _HEX_DIGITS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1177:1179  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1170:1175  value */\n      dup7\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1166:1180  mod(value, 10) */\n      mod\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1161:1194  byte(mod(value, 10), _HEX_DIGITS) */\n      byte\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1156:1159  ptr */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1148:1195  mstore8(ptr, byte(mod(value, 10), _HEX_DIGITS)) */\n      mstore8\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1239:1241  10 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1230:1241  value /= 10 */\n      dup6\n      dup2\n      tag_252\n      jumpi\n      tag_253\n      tag_254\n      jump\t// in\n    tag_253:\n    tag_252:\n      div\n      swap5\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1272:1273  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1263:1268  value */\n      dup6\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1263:1273  value == 0 */\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1012:1295  while (true) {... */\n      tag_250\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1259:1280  if (value == 0) break */\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1012:1295  while (true) {... */\n    tag_251:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1315:1321  buffer */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":1308:1321  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":639:1338  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7201:7569  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_240:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7313:7351  _isAuthorized(owner, spender, tokenId) */\n      tag_257\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7327:7332  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7334:7341  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7343:7350  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7313:7326  _isAuthorized */\n      tag_258\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7313:7351  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_257:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7308:7563  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_259\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7388:7389  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7371:7390  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7371:7376  owner */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7371:7390  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7367:7553  if (owner == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7440:7447  tokenId */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7417:7448  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7367:7553  if (owner == address(0)) {... */\n    tag_260:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7521:7528  spender */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7530:7537  tokenId */\n      dup2\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7494:7538  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap3\n      swap2\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7308:7563  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_259:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":7201:7569  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12206:13122  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_245:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12259:12266  uint256 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12278:12292  uint256 result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12295:12296  0 */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12278:12296  uint256 result = 0 */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12343:12351  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12334:12339  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12334:12351  value >= 10 ** 64 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12330:12433  if (value >= 10 ** 64) {... */\n      tag_266\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12380:12388  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12371:12388  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_267\n      jumpi\n      tag_268\n      tag_254\n      jump\t// in\n    tag_268:\n    tag_267:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12416:12418  64 */\n      0x40\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12406:12418  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12330:12433  if (value >= 10 ** 64) {... */\n    tag_266:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12459:12467  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12450:12455  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12450:12467  value >= 10 ** 32 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12446:12549  if (value >= 10 ** 32) {... */\n      tag_269\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12496:12504  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12487:12504  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_270\n      jumpi\n      tag_271\n      tag_254\n      jump\t// in\n    tag_271:\n    tag_270:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12532:12534  32 */\n      0x20\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12522:12534  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12446:12549  if (value >= 10 ** 32) {... */\n    tag_269:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12575:12583  10 ** 16 */\n      0x2386f26fc10000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12566:12571  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12566:12583  value >= 10 ** 16 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12562:12665  if (value >= 10 ** 16) {... */\n      tag_272\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12612:12620  10 ** 16 */\n      0x2386f26fc10000\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12603:12620  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_273\n      jumpi\n      tag_274\n      tag_254\n      jump\t// in\n    tag_274:\n    tag_273:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12648:12650  16 */\n      0x10\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12638:12650  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12562:12665  if (value >= 10 ** 16) {... */\n    tag_272:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12691:12698  10 ** 8 */\n      0x05f5e100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12682:12687  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12682:12698  value >= 10 ** 8 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12678:12778  if (value >= 10 ** 8) {... */\n      tag_275\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12727:12734  10 ** 8 */\n      0x05f5e100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12718:12734  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_276\n      jumpi\n      tag_277\n      tag_254\n      jump\t// in\n    tag_277:\n    tag_276:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12762:12763  8 */\n      0x08\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12752:12763  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12678:12778  if (value >= 10 ** 8) {... */\n    tag_275:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12804:12811  10 ** 4 */\n      0x2710\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12795:12800  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12795:12811  value >= 10 ** 4 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12791:12891  if (value >= 10 ** 4) {... */\n      tag_278\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12840:12847  10 ** 4 */\n      0x2710\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12831:12847  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_279\n      jumpi\n      tag_280\n      tag_254\n      jump\t// in\n    tag_280:\n    tag_279:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12875:12876  4 */\n      0x04\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12865:12876  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12791:12891  if (value >= 10 ** 4) {... */\n    tag_278:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12917:12924  10 ** 2 */\n      0x64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12908:12913  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12908:12924  value >= 10 ** 2 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12904:13004  if (value >= 10 ** 2) {... */\n      tag_281\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12953:12960  10 ** 2 */\n      0x64\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12944:12960  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_282\n      jumpi\n      tag_283\n      tag_254\n      jump\t// in\n    tag_283:\n    tag_282:\n      div\n      swap3\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12988:12989  2 */\n      0x02\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12978:12989  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12904:13004  if (value >= 10 ** 2) {... */\n    tag_281:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13030:13037  10 ** 1 */\n      0x0a\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13021:13026  value */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13021:13037  value >= 10 ** 1 */\n      lt\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13017:13083  if (value >= 10 ** 1) {... */\n      tag_284\n      jumpi\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13067:13068  1 */\n      0x01\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13057:13068  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13017:13083  if (value >= 10 ** 1) {... */\n    tag_284:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13109:13115  result */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":13102:13115  return result */\n      swap2\n      pop\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":12206:13122  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6501:6773  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_258:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6604:6608  bool */\n      0x00\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6658:6659  0 */\n      dup1\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6639:6660  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6639:6646  spender */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6639:6660  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6639:6766  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_286\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6686:6693  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6677:6693  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6677:6682  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6677:6693  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6677:6729  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_287\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6697:6729  isApprovedForAll(owner, spender) */\n      tag_288\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6714:6719  owner */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6721:6728  spender */\n      dup5\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6697:6713  isApprovedForAll */\n      tag_83\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6697:6729  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_288:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6677:6729  owner == spender || isApprovedForAll(owner, spender) */\n    tag_287:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6677:6765  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_289\n      jumpi\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6758:6765  spender */\n      dup3\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6733:6765  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6733:6754  _getApproved(tokenId) */\n      tag_290\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6746:6753  tokenId */\n      dup4\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6733:6745  _getApproved */\n      tag_100\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6733:6754  _getApproved(tokenId) */\n      jump\t// in\n    tag_290:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6733:6765  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6677:6765  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_289:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6639:6766  spender != address(0) &&... */\n    tag_286:\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6620:6766  return... */\n      swap1\n      pop\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":6501:6773  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_187:\n      pop\n      dup1\n      sload\n      tag_291\n      swap1\n      tag_91\n      jump\t// in\n    tag_291:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_293\n      jumpi\n      pop\n      jump(tag_292)\n    tag_293:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n    tag_292:\n      pop\n      jump\t// out\n    tag_295:\n    tag_296:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_297\n      jumpi\n      0x00\n      dup2\n      0x00\n      swap1\n      sstore\n      pop\n      0x01\n      add\n      jump(tag_296)\n    tag_297:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_298:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_299:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_300:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_301:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_302:\n        /* \"#utility.yul\":561:584   */\n      tag_362\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_301\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_363:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_303:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_365\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_302\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_23:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_368\n      tag_299\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":833:952   */\n    tag_367:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_369\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_303\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_304:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_305:\n        /* \"#utility.yul\":1268:1289   */\n      tag_372\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_304\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_26:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_374\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_305\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_306:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_307:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_308:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_378:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_378)\n    tag_380:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_309:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_310:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_383\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_306\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2329:2400   */\n      tag_384\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_307\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_385\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_308\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":2499:2528   */\n      tag_386\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_309\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_30:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_388\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_310\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_311:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_312:\n        /* \"#utility.yul\":3016:3040   */\n      tag_391\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_311\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_392\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_392:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_313:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_394\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_312\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_33:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_397\n      tag_299\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":3292:3411   */\n    tag_396:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_398\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_313\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_314:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_315:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_401\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_314\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_316:\n        /* \"#utility.yul\":3872:3896   */\n      tag_403\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_315\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_36:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_405\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_316\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_317:\n        /* \"#utility.yul\":4210:4234   */\n      tag_407\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_315\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_408\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_408:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_318:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_410\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_317\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_39:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_413\n      tag_299\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":4503:4622   */\n    tag_412:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_414\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_318\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_415\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_313\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_43:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_418\n      tag_299\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":5000:5119   */\n    tag_417:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_419\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_318\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_420\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_318\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_421\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_313\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_54:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_424\n      tag_299\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":5591:5710   */\n    tag_423:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_425\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_318\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_319:\n        /* \"#utility.yul\":5937:5961   */\n      tag_427\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_311\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_57:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_429\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_319\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_320:\n        /* \"#utility.yul\":6272:6293   */\n      tag_431\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_304\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_432\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_432:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_321:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_434\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_320\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_66:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_437\n      tag_299\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":6553:6672   */\n    tag_436:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_438\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_318\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_439\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_321\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_322:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_323:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_248:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_324:\n        /* \"#utility.yul\":7452:7479   */\n      tag_444\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_309\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_446\n      tag_248\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":7525:7613   */\n    tag_445:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_325:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_448\n      tag_298\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_449\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_324\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_326:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_452\n      tag_248\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":7928:7984   */\n    tag_451:\n        /* \"#utility.yul\":8002:8031   */\n      tag_453\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_309\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_327:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_328:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_456\n        /* \"#utility.yul\":8374:8422   */\n      tag_457\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_326\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":8358:8423   */\n      tag_325\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_459\n      tag_323\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":8498:8610   */\n    tag_458:\n        /* \"#utility.yul\":8619:8673   */\n      tag_460\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_327\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_329:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_463\n      tag_322\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":8769:8891   */\n    tag_462:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_464\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_328\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_70:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_467\n      tag_299\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":9178:9298   */\n    tag_466:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_468\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_318\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_469\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_318\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_470\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_313\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_472\n      tag_300\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":9765:9882   */\n    tag_471:\n        /* \"#utility.yul\":9906:9968   */\n      tag_473\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_329\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10108   */\n    tag_330:\n        /* \"#utility.yul\":10100:10101   */\n      0x00\n        /* \"#utility.yul\":10097:10098   */\n      dup1\n        /* \"#utility.yul\":10090:10102   */\n      revert\n        /* \"#utility.yul\":10114:10231   */\n    tag_331:\n        /* \"#utility.yul\":10223:10224   */\n      0x00\n        /* \"#utility.yul\":10220:10221   */\n      dup1\n        /* \"#utility.yul\":10213:10225   */\n      revert\n        /* \"#utility.yul\":10251:10804   */\n    tag_332:\n        /* \"#utility.yul\":10309:10317   */\n      0x00\n        /* \"#utility.yul\":10319:10325   */\n      dup1\n        /* \"#utility.yul\":10369:10372   */\n      dup4\n        /* \"#utility.yul\":10362:10366   */\n      0x1f\n        /* \"#utility.yul\":10354:10360   */\n      dup5\n        /* \"#utility.yul\":10350:10367   */\n      add\n        /* \"#utility.yul\":10346:10373   */\n      slt\n        /* \"#utility.yul\":10336:10458   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":10377:10456   */\n      tag_478\n      tag_322\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":10336:10458   */\n    tag_477:\n        /* \"#utility.yul\":10490:10496   */\n      dup3\n        /* \"#utility.yul\":10477:10497   */\n      calldataload\n        /* \"#utility.yul\":10467:10497   */\n      swap1\n      pop\n        /* \"#utility.yul\":10520:10538   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10512:10518   */\n      dup2\n        /* \"#utility.yul\":10509:10539   */\n      gt\n        /* \"#utility.yul\":10506:10623   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":10542:10621   */\n      tag_480\n      tag_330\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":10506:10623   */\n    tag_479:\n        /* \"#utility.yul\":10656:10660   */\n      0x20\n        /* \"#utility.yul\":10648:10654   */\n      dup4\n        /* \"#utility.yul\":10644:10661   */\n      add\n        /* \"#utility.yul\":10632:10661   */\n      swap2\n      pop\n        /* \"#utility.yul\":10710:10713   */\n      dup4\n        /* \"#utility.yul\":10702:10706   */\n      0x01\n        /* \"#utility.yul\":10694:10700   */\n      dup3\n        /* \"#utility.yul\":10690:10707   */\n      mul\n        /* \"#utility.yul\":10680:10688   */\n      dup4\n        /* \"#utility.yul\":10676:10708   */\n      add\n        /* \"#utility.yul\":10673:10714   */\n      gt\n        /* \"#utility.yul\":10670:10798   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":10717:10796   */\n      tag_482\n      tag_331\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":10670:10798   */\n    tag_481:\n        /* \"#utility.yul\":10251:10804   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10810:11484   */\n    tag_78:\n        /* \"#utility.yul\":10890:10896   */\n      0x00\n        /* \"#utility.yul\":10898:10904   */\n      dup1\n        /* \"#utility.yul\":10906:10912   */\n      0x00\n        /* \"#utility.yul\":10955:10957   */\n      0x40\n        /* \"#utility.yul\":10943:10952   */\n      dup5\n        /* \"#utility.yul\":10934:10941   */\n      dup7\n        /* \"#utility.yul\":10930:10953   */\n      sub\n        /* \"#utility.yul\":10926:10958   */\n      slt\n        /* \"#utility.yul\":10923:11042   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":10961:11040   */\n      tag_485\n      tag_299\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":10923:11042   */\n    tag_484:\n        /* \"#utility.yul\":11081:11082   */\n      0x00\n        /* \"#utility.yul\":11106:11159   */\n      tag_486\n        /* \"#utility.yul\":11151:11158   */\n      dup7\n        /* \"#utility.yul\":11142:11148   */\n      dup3\n        /* \"#utility.yul\":11131:11140   */\n      dup8\n        /* \"#utility.yul\":11127:11149   */\n      add\n        /* \"#utility.yul\":11106:11159   */\n      tag_318\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":11096:11159   */\n      swap4\n      pop\n        /* \"#utility.yul\":11052:11169   */\n      pop\n        /* \"#utility.yul\":11236:11238   */\n      0x20\n        /* \"#utility.yul\":11225:11234   */\n      dup5\n        /* \"#utility.yul\":11221:11239   */\n      add\n        /* \"#utility.yul\":11208:11240   */\n      calldataload\n        /* \"#utility.yul\":11267:11285   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11259:11265   */\n      dup2\n        /* \"#utility.yul\":11256:11286   */\n      gt\n        /* \"#utility.yul\":11253:11370   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":11289:11368   */\n      tag_488\n      tag_300\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":11253:11370   */\n    tag_487:\n        /* \"#utility.yul\":11402:11467   */\n      tag_489\n        /* \"#utility.yul\":11459:11466   */\n      dup7\n        /* \"#utility.yul\":11450:11456   */\n      dup3\n        /* \"#utility.yul\":11439:11448   */\n      dup8\n        /* \"#utility.yul\":11435:11457   */\n      add\n        /* \"#utility.yul\":11402:11467   */\n      tag_332\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":11384:11467   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":11179:11477   */\n      pop\n        /* \"#utility.yul\":10810:11484   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11490:11964   */\n    tag_82:\n        /* \"#utility.yul\":11558:11564   */\n      0x00\n        /* \"#utility.yul\":11566:11572   */\n      dup1\n        /* \"#utility.yul\":11615:11617   */\n      0x40\n        /* \"#utility.yul\":11603:11612   */\n      dup4\n        /* \"#utility.yul\":11594:11601   */\n      dup6\n        /* \"#utility.yul\":11590:11613   */\n      sub\n        /* \"#utility.yul\":11586:11618   */\n      slt\n        /* \"#utility.yul\":11583:11702   */\n      iszero\n      tag_491\n      jumpi\n        /* \"#utility.yul\":11621:11700   */\n      tag_492\n      tag_299\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":11583:11702   */\n    tag_491:\n        /* \"#utility.yul\":11741:11742   */\n      0x00\n        /* \"#utility.yul\":11766:11819   */\n      tag_493\n        /* \"#utility.yul\":11811:11818   */\n      dup6\n        /* \"#utility.yul\":11802:11808   */\n      dup3\n        /* \"#utility.yul\":11791:11800   */\n      dup7\n        /* \"#utility.yul\":11787:11809   */\n      add\n        /* \"#utility.yul\":11766:11819   */\n      tag_318\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":11756:11819   */\n      swap3\n      pop\n        /* \"#utility.yul\":11712:11829   */\n      pop\n        /* \"#utility.yul\":11868:11870   */\n      0x20\n        /* \"#utility.yul\":11894:11947   */\n      tag_494\n        /* \"#utility.yul\":11939:11946   */\n      dup6\n        /* \"#utility.yul\":11930:11936   */\n      dup3\n        /* \"#utility.yul\":11919:11928   */\n      dup7\n        /* \"#utility.yul\":11915:11937   */\n      add\n        /* \"#utility.yul\":11894:11947   */\n      tag_318\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":11884:11947   */\n      swap2\n      pop\n        /* \"#utility.yul\":11839:11957   */\n      pop\n        /* \"#utility.yul\":11490:11964   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11970:12150   */\n    tag_333:\n        /* \"#utility.yul\":12018:12095   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12015:12016   */\n      0x00\n        /* \"#utility.yul\":12008:12096   */\n      mstore\n        /* \"#utility.yul\":12115:12119   */\n      0x22\n        /* \"#utility.yul\":12112:12113   */\n      0x04\n        /* \"#utility.yul\":12105:12120   */\n      mstore\n        /* \"#utility.yul\":12139:12143   */\n      0x24\n        /* \"#utility.yul\":12136:12137   */\n      0x00\n        /* \"#utility.yul\":12129:12144   */\n      revert\n        /* \"#utility.yul\":12156:12476   */\n    tag_91:\n        /* \"#utility.yul\":12200:12206   */\n      0x00\n        /* \"#utility.yul\":12237:12238   */\n      0x02\n        /* \"#utility.yul\":12231:12235   */\n      dup3\n        /* \"#utility.yul\":12227:12239   */\n      div\n        /* \"#utility.yul\":12217:12239   */\n      swap1\n      pop\n        /* \"#utility.yul\":12284:12285   */\n      0x01\n        /* \"#utility.yul\":12278:12282   */\n      dup3\n        /* \"#utility.yul\":12274:12286   */\n      and\n        /* \"#utility.yul\":12305:12323   */\n      dup1\n        /* \"#utility.yul\":12295:12376   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":12361:12365   */\n      0x7f\n        /* \"#utility.yul\":12353:12359   */\n      dup3\n        /* \"#utility.yul\":12349:12366   */\n      and\n        /* \"#utility.yul\":12339:12366   */\n      swap2\n      pop\n        /* \"#utility.yul\":12295:12376   */\n    tag_497:\n        /* \"#utility.yul\":12423:12425   */\n      0x20\n        /* \"#utility.yul\":12415:12421   */\n      dup3\n        /* \"#utility.yul\":12412:12426   */\n      lt\n        /* \"#utility.yul\":12392:12410   */\n      dup2\n        /* \"#utility.yul\":12389:12427   */\n      sub\n        /* \"#utility.yul\":12386:12470   */\n      tag_498\n      jumpi\n        /* \"#utility.yul\":12442:12460   */\n      tag_499\n      tag_333\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":12386:12470   */\n    tag_498:\n        /* \"#utility.yul\":12207:12476   */\n      pop\n        /* \"#utility.yul\":12156:12476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12482:12924   */\n    tag_114:\n        /* \"#utility.yul\":12631:12635   */\n      0x00\n        /* \"#utility.yul\":12669:12671   */\n      0x60\n        /* \"#utility.yul\":12658:12667   */\n      dup3\n        /* \"#utility.yul\":12654:12672   */\n      add\n        /* \"#utility.yul\":12646:12672   */\n      swap1\n      pop\n        /* \"#utility.yul\":12682:12753   */\n      tag_501\n        /* \"#utility.yul\":12750:12751   */\n      0x00\n        /* \"#utility.yul\":12739:12748   */\n      dup4\n        /* \"#utility.yul\":12735:12752   */\n      add\n        /* \"#utility.yul\":12726:12732   */\n      dup7\n        /* \"#utility.yul\":12682:12753   */\n      tag_316\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":12763:12835   */\n      tag_502\n        /* \"#utility.yul\":12831:12833   */\n      0x20\n        /* \"#utility.yul\":12820:12829   */\n      dup4\n        /* \"#utility.yul\":12816:12834   */\n      add\n        /* \"#utility.yul\":12807:12813   */\n      dup6\n        /* \"#utility.yul\":12763:12835   */\n      tag_319\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":12845:12917   */\n      tag_503\n        /* \"#utility.yul\":12913:12915   */\n      0x40\n        /* \"#utility.yul\":12902:12911   */\n      dup4\n        /* \"#utility.yul\":12898:12916   */\n      add\n        /* \"#utility.yul\":12889:12895   */\n      dup5\n        /* \"#utility.yul\":12845:12917   */\n      tag_316\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":12482:12924   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12930:13078   */\n    tag_334:\n        /* \"#utility.yul\":13032:13043   */\n      0x00\n        /* \"#utility.yul\":13069:13072   */\n      dup2\n        /* \"#utility.yul\":13054:13072   */\n      swap1\n      pop\n        /* \"#utility.yul\":12930:13078   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13084:13474   */\n    tag_335:\n        /* \"#utility.yul\":13190:13193   */\n      0x00\n        /* \"#utility.yul\":13218:13257   */\n      tag_506\n        /* \"#utility.yul\":13251:13256   */\n      dup3\n        /* \"#utility.yul\":13218:13257   */\n      tag_306\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":13273:13362   */\n      tag_507\n        /* \"#utility.yul\":13355:13361   */\n      dup2\n        /* \"#utility.yul\":13350:13353   */\n      dup6\n        /* \"#utility.yul\":13273:13362   */\n      tag_334\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13266:13362   */\n      swap4\n      pop\n        /* \"#utility.yul\":13371:13436   */\n      tag_508\n        /* \"#utility.yul\":13429:13435   */\n      dup2\n        /* \"#utility.yul\":13424:13427   */\n      dup6\n        /* \"#utility.yul\":13417:13421   */\n      0x20\n        /* \"#utility.yul\":13410:13415   */\n      dup7\n        /* \"#utility.yul\":13406:13422   */\n      add\n        /* \"#utility.yul\":13371:13436   */\n      tag_308\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":13461:13467   */\n      dup1\n        /* \"#utility.yul\":13456:13459   */\n      dup5\n        /* \"#utility.yul\":13452:13468   */\n      add\n        /* \"#utility.yul\":13445:13468   */\n      swap2\n      pop\n        /* \"#utility.yul\":13194:13474   */\n      pop\n        /* \"#utility.yul\":13084:13474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13480:13915   */\n    tag_151:\n        /* \"#utility.yul\":13660:13663   */\n      0x00\n        /* \"#utility.yul\":13682:13777   */\n      tag_510\n        /* \"#utility.yul\":13773:13776   */\n      dup3\n        /* \"#utility.yul\":13764:13770   */\n      dup6\n        /* \"#utility.yul\":13682:13777   */\n      tag_335\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13675:13777   */\n      swap2\n      pop\n        /* \"#utility.yul\":13794:13889   */\n      tag_511\n        /* \"#utility.yul\":13885:13888   */\n      dup3\n        /* \"#utility.yul\":13876:13882   */\n      dup5\n        /* \"#utility.yul\":13794:13889   */\n      tag_335\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":13787:13889   */\n      swap2\n      pop\n        /* \"#utility.yul\":13906:13909   */\n      dup2\n        /* \"#utility.yul\":13899:13909   */\n      swap1\n      pop\n        /* \"#utility.yul\":13480:13915   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13921:14101   */\n    tag_336:\n        /* \"#utility.yul\":13969:14046   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13966:13967   */\n      0x00\n        /* \"#utility.yul\":13959:14047   */\n      mstore\n        /* \"#utility.yul\":14066:14070   */\n      0x11\n        /* \"#utility.yul\":14063:14064   */\n      0x04\n        /* \"#utility.yul\":14056:14071   */\n      mstore\n        /* \"#utility.yul\":14090:14094   */\n      0x24\n        /* \"#utility.yul\":14087:14088   */\n      0x00\n        /* \"#utility.yul\":14080:14095   */\n      revert\n        /* \"#utility.yul\":14107:14340   */\n    tag_160:\n        /* \"#utility.yul\":14146:14149   */\n      0x00\n        /* \"#utility.yul\":14169:14193   */\n      tag_514\n        /* \"#utility.yul\":14187:14192   */\n      dup3\n        /* \"#utility.yul\":14169:14193   */\n      tag_311\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":14160:14193   */\n      swap2\n      pop\n        /* \"#utility.yul\":14215:14281   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14208:14213   */\n      dup3\n        /* \"#utility.yul\":14205:14282   */\n      sub\n        /* \"#utility.yul\":14202:14305   */\n      tag_515\n      jumpi\n        /* \"#utility.yul\":14285:14303   */\n      tag_516\n      tag_336\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":14202:14305   */\n    tag_515:\n        /* \"#utility.yul\":14332:14333   */\n      0x01\n        /* \"#utility.yul\":14325:14330   */\n      dup3\n        /* \"#utility.yul\":14321:14334   */\n      add\n        /* \"#utility.yul\":14314:14334   */\n      swap1\n      pop\n        /* \"#utility.yul\":14107:14340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14346:14444   */\n    tag_337:\n        /* \"#utility.yul\":14397:14403   */\n      0x00\n        /* \"#utility.yul\":14431:14436   */\n      dup2\n        /* \"#utility.yul\":14425:14437   */\n      mload\n        /* \"#utility.yul\":14415:14437   */\n      swap1\n      pop\n        /* \"#utility.yul\":14346:14444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14450:14618   */\n    tag_338:\n        /* \"#utility.yul\":14533:14544   */\n      0x00\n        /* \"#utility.yul\":14567:14573   */\n      dup3\n        /* \"#utility.yul\":14562:14565   */\n      dup3\n        /* \"#utility.yul\":14555:14574   */\n      mstore\n        /* \"#utility.yul\":14607:14611   */\n      0x20\n        /* \"#utility.yul\":14602:14605   */\n      dup3\n        /* \"#utility.yul\":14598:14612   */\n      add\n        /* \"#utility.yul\":14583:14612   */\n      swap1\n      pop\n        /* \"#utility.yul\":14450:14618   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14624:14997   */\n    tag_339:\n        /* \"#utility.yul\":14710:14713   */\n      0x00\n        /* \"#utility.yul\":14738:14776   */\n      tag_520\n        /* \"#utility.yul\":14770:14775   */\n      dup3\n        /* \"#utility.yul\":14738:14776   */\n      tag_337\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":14792:14862   */\n      tag_521\n        /* \"#utility.yul\":14855:14861   */\n      dup2\n        /* \"#utility.yul\":14850:14853   */\n      dup6\n        /* \"#utility.yul\":14792:14862   */\n      tag_338\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":14785:14862   */\n      swap4\n      pop\n        /* \"#utility.yul\":14871:14936   */\n      tag_522\n        /* \"#utility.yul\":14929:14935   */\n      dup2\n        /* \"#utility.yul\":14924:14927   */\n      dup6\n        /* \"#utility.yul\":14917:14921   */\n      0x20\n        /* \"#utility.yul\":14910:14915   */\n      dup7\n        /* \"#utility.yul\":14906:14922   */\n      add\n        /* \"#utility.yul\":14871:14936   */\n      tag_308\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":14961:14990   */\n      tag_523\n        /* \"#utility.yul\":14983:14989   */\n      dup2\n        /* \"#utility.yul\":14961:14990   */\n      tag_309\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":14956:14959   */\n      dup5\n        /* \"#utility.yul\":14952:14991   */\n      add\n        /* \"#utility.yul\":14945:14991   */\n      swap2\n      pop\n        /* \"#utility.yul\":14714:14997   */\n      pop\n        /* \"#utility.yul\":14624:14997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15003:15643   */\n    tag_197:\n        /* \"#utility.yul\":15198:15202   */\n      0x00\n        /* \"#utility.yul\":15236:15239   */\n      0x80\n        /* \"#utility.yul\":15225:15234   */\n      dup3\n        /* \"#utility.yul\":15221:15240   */\n      add\n        /* \"#utility.yul\":15213:15240   */\n      swap1\n      pop\n        /* \"#utility.yul\":15250:15321   */\n      tag_525\n        /* \"#utility.yul\":15318:15319   */\n      0x00\n        /* \"#utility.yul\":15307:15316   */\n      dup4\n        /* \"#utility.yul\":15303:15320   */\n      add\n        /* \"#utility.yul\":15294:15300   */\n      dup8\n        /* \"#utility.yul\":15250:15321   */\n      tag_316\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":15331:15403   */\n      tag_526\n        /* \"#utility.yul\":15399:15401   */\n      0x20\n        /* \"#utility.yul\":15388:15397   */\n      dup4\n        /* \"#utility.yul\":15384:15402   */\n      add\n        /* \"#utility.yul\":15375:15381   */\n      dup7\n        /* \"#utility.yul\":15331:15403   */\n      tag_316\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":15413:15485   */\n      tag_527\n        /* \"#utility.yul\":15481:15483   */\n      0x40\n        /* \"#utility.yul\":15470:15479   */\n      dup4\n        /* \"#utility.yul\":15466:15484   */\n      add\n        /* \"#utility.yul\":15457:15463   */\n      dup6\n        /* \"#utility.yul\":15413:15485   */\n      tag_319\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":15532:15541   */\n      dup2\n        /* \"#utility.yul\":15526:15530   */\n      dup2\n        /* \"#utility.yul\":15522:15542   */\n      sub\n        /* \"#utility.yul\":15517:15519   */\n      0x60\n        /* \"#utility.yul\":15506:15515   */\n      dup4\n        /* \"#utility.yul\":15502:15520   */\n      add\n        /* \"#utility.yul\":15495:15543   */\n      mstore\n        /* \"#utility.yul\":15560:15636   */\n      tag_528\n        /* \"#utility.yul\":15631:15635   */\n      dup2\n        /* \"#utility.yul\":15622:15628   */\n      dup5\n        /* \"#utility.yul\":15560:15636   */\n      tag_339\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":15552:15636   */\n      swap1\n      pop\n        /* \"#utility.yul\":15003:15643   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15649:15790   */\n    tag_340:\n        /* \"#utility.yul\":15705:15710   */\n      0x00\n        /* \"#utility.yul\":15736:15742   */\n      dup2\n        /* \"#utility.yul\":15730:15743   */\n      mload\n        /* \"#utility.yul\":15721:15743   */\n      swap1\n      pop\n        /* \"#utility.yul\":15752:15784   */\n      tag_530\n        /* \"#utility.yul\":15778:15783   */\n      dup2\n        /* \"#utility.yul\":15752:15784   */\n      tag_302\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":15649:15790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15796:16145   */\n    tag_200:\n        /* \"#utility.yul\":15865:15871   */\n      0x00\n        /* \"#utility.yul\":15914:15916   */\n      0x20\n        /* \"#utility.yul\":15902:15911   */\n      dup3\n        /* \"#utility.yul\":15893:15900   */\n      dup5\n        /* \"#utility.yul\":15889:15912   */\n      sub\n        /* \"#utility.yul\":15885:15917   */\n      slt\n        /* \"#utility.yul\":15882:16001   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":15920:15999   */\n      tag_533\n      tag_299\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":15882:16001   */\n    tag_532:\n        /* \"#utility.yul\":16040:16041   */\n      0x00\n        /* \"#utility.yul\":16065:16128   */\n      tag_534\n        /* \"#utility.yul\":16120:16127   */\n      dup5\n        /* \"#utility.yul\":16111:16117   */\n      dup3\n        /* \"#utility.yul\":16100:16109   */\n      dup6\n        /* \"#utility.yul\":16096:16118   */\n      add\n        /* \"#utility.yul\":16065:16128   */\n      tag_340\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":16055:16128   */\n      swap2\n      pop\n        /* \"#utility.yul\":16011:16138   */\n      pop\n        /* \"#utility.yul\":15796:16145   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16151:16292   */\n    tag_341:\n        /* \"#utility.yul\":16200:16204   */\n      0x00\n        /* \"#utility.yul\":16223:16226   */\n      dup2\n        /* \"#utility.yul\":16215:16226   */\n      swap1\n      pop\n        /* \"#utility.yul\":16246:16249   */\n      dup2\n        /* \"#utility.yul\":16243:16244   */\n      0x00\n        /* \"#utility.yul\":16236:16250   */\n      mstore\n        /* \"#utility.yul\":16280:16284   */\n      0x20\n        /* \"#utility.yul\":16277:16278   */\n      0x00\n        /* \"#utility.yul\":16267:16285   */\n      keccak256\n        /* \"#utility.yul\":16259:16285   */\n      swap1\n      pop\n        /* \"#utility.yul\":16151:16292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16298:16391   */\n    tag_342:\n        /* \"#utility.yul\":16335:16341   */\n      0x00\n        /* \"#utility.yul\":16382:16384   */\n      0x20\n        /* \"#utility.yul\":16377:16379   */\n      0x1f\n        /* \"#utility.yul\":16370:16375   */\n      dup4\n        /* \"#utility.yul\":16366:16380   */\n      add\n        /* \"#utility.yul\":16362:16385   */\n      div\n        /* \"#utility.yul\":16352:16385   */\n      swap1\n      pop\n        /* \"#utility.yul\":16298:16391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16397:16504   */\n    tag_343:\n        /* \"#utility.yul\":16441:16449   */\n      0x00\n        /* \"#utility.yul\":16491:16496   */\n      dup3\n        /* \"#utility.yul\":16485:16489   */\n      dup3\n        /* \"#utility.yul\":16481:16497   */\n      shl\n        /* \"#utility.yul\":16460:16497   */\n      swap1\n      pop\n        /* \"#utility.yul\":16397:16504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16510:16903   */\n    tag_344:\n        /* \"#utility.yul\":16579:16585   */\n      0x00\n        /* \"#utility.yul\":16629:16630   */\n      0x08\n        /* \"#utility.yul\":16617:16627   */\n      dup4\n        /* \"#utility.yul\":16613:16631   */\n      mul\n        /* \"#utility.yul\":16652:16749   */\n      tag_539\n        /* \"#utility.yul\":16682:16748   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16671:16680   */\n      dup3\n        /* \"#utility.yul\":16652:16749   */\n      tag_343\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":16770:16809   */\n      tag_540\n        /* \"#utility.yul\":16800:16808   */\n      dup7\n        /* \"#utility.yul\":16789:16798   */\n      dup4\n        /* \"#utility.yul\":16770:16809   */\n      tag_343\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":16758:16809   */\n      swap6\n      pop\n        /* \"#utility.yul\":16842:16846   */\n      dup1\n        /* \"#utility.yul\":16838:16847   */\n      not\n        /* \"#utility.yul\":16831:16836   */\n      dup5\n        /* \"#utility.yul\":16827:16848   */\n      and\n        /* \"#utility.yul\":16818:16848   */\n      swap4\n      pop\n        /* \"#utility.yul\":16891:16895   */\n      dup1\n        /* \"#utility.yul\":16881:16889   */\n      dup7\n        /* \"#utility.yul\":16877:16896   */\n      and\n        /* \"#utility.yul\":16870:16875   */\n      dup5\n        /* \"#utility.yul\":16867:16897   */\n      or\n        /* \"#utility.yul\":16857:16897   */\n      swap3\n      pop\n        /* \"#utility.yul\":16586:16903   */\n      pop\n      pop\n        /* \"#utility.yul\":16510:16903   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16909:16969   */\n    tag_345:\n        /* \"#utility.yul\":16937:16940   */\n      0x00\n        /* \"#utility.yul\":16958:16963   */\n      dup2\n        /* \"#utility.yul\":16951:16963   */\n      swap1\n      pop\n        /* \"#utility.yul\":16909:16969   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16975:17117   */\n    tag_346:\n        /* \"#utility.yul\":17025:17034   */\n      0x00\n        /* \"#utility.yul\":17058:17111   */\n      tag_543\n        /* \"#utility.yul\":17076:17110   */\n      tag_544\n        /* \"#utility.yul\":17085:17109   */\n      tag_545\n        /* \"#utility.yul\":17103:17108   */\n      dup5\n        /* \"#utility.yul\":17085:17109   */\n      tag_311\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":17076:17110   */\n      tag_345\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":17058:17111   */\n      tag_311\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":17045:17111   */\n      swap1\n      pop\n        /* \"#utility.yul\":16975:17117   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17123:17198   */\n    tag_347:\n        /* \"#utility.yul\":17166:17169   */\n      0x00\n        /* \"#utility.yul\":17187:17192   */\n      dup2\n        /* \"#utility.yul\":17180:17192   */\n      swap1\n      pop\n        /* \"#utility.yul\":17123:17198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17204:17473   */\n    tag_348:\n        /* \"#utility.yul\":17314:17353   */\n      tag_548\n        /* \"#utility.yul\":17345:17352   */\n      dup4\n        /* \"#utility.yul\":17314:17353   */\n      tag_346\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":17375:17466   */\n      tag_549\n        /* \"#utility.yul\":17424:17465   */\n      tag_550\n        /* \"#utility.yul\":17448:17464   */\n      dup3\n        /* \"#utility.yul\":17424:17465   */\n      tag_347\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":17416:17422   */\n      dup5\n        /* \"#utility.yul\":17409:17413   */\n      dup5\n        /* \"#utility.yul\":17403:17414   */\n      sload\n        /* \"#utility.yul\":17375:17466   */\n      tag_344\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":17369:17373   */\n      dup3\n        /* \"#utility.yul\":17362:17467   */\n      sstore\n        /* \"#utility.yul\":17280:17473   */\n      pop\n        /* \"#utility.yul\":17204:17473   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17479:17552   */\n    tag_349:\n        /* \"#utility.yul\":17524:17527   */\n      0x00\n        /* \"#utility.yul\":17479:17552   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":17558:17747   */\n    tag_350:\n        /* \"#utility.yul\":17635:17667   */\n      tag_553\n      tag_349\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":17676:17741   */\n      tag_554\n        /* \"#utility.yul\":17734:17740   */\n      dup2\n        /* \"#utility.yul\":17726:17732   */\n      dup5\n        /* \"#utility.yul\":17720:17724   */\n      dup5\n        /* \"#utility.yul\":17676:17741   */\n      tag_348\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":17611:17747   */\n      pop\n        /* \"#utility.yul\":17558:17747   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17753:17939   */\n    tag_351:\n        /* \"#utility.yul\":17813:17933   */\n    tag_556:\n        /* \"#utility.yul\":17830:17833   */\n      dup2\n        /* \"#utility.yul\":17823:17828   */\n      dup2\n        /* \"#utility.yul\":17820:17834   */\n      lt\n        /* \"#utility.yul\":17813:17933   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":17884:17923   */\n      tag_559\n        /* \"#utility.yul\":17921:17922   */\n      0x00\n        /* \"#utility.yul\":17914:17919   */\n      dup3\n        /* \"#utility.yul\":17884:17923   */\n      tag_350\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":17857:17858   */\n      0x01\n        /* \"#utility.yul\":17850:17855   */\n      dup2\n        /* \"#utility.yul\":17846:17859   */\n      add\n        /* \"#utility.yul\":17837:17859   */\n      swap1\n      pop\n        /* \"#utility.yul\":17813:17933   */\n      jump(tag_556)\n    tag_558:\n        /* \"#utility.yul\":17753:17939   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17945:18488   */\n    tag_352:\n        /* \"#utility.yul\":18046:18048   */\n      0x1f\n        /* \"#utility.yul\":18041:18044   */\n      dup3\n        /* \"#utility.yul\":18038:18049   */\n      gt\n        /* \"#utility.yul\":18035:18481   */\n      iszero\n      tag_561\n      jumpi\n        /* \"#utility.yul\":18080:18118   */\n      tag_562\n        /* \"#utility.yul\":18112:18117   */\n      dup2\n        /* \"#utility.yul\":18080:18118   */\n      tag_341\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":18164:18193   */\n      tag_563\n        /* \"#utility.yul\":18182:18192   */\n      dup5\n        /* \"#utility.yul\":18164:18193   */\n      tag_342\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":18154:18162   */\n      dup2\n        /* \"#utility.yul\":18150:18194   */\n      add\n        /* \"#utility.yul\":18347:18349   */\n      0x20\n        /* \"#utility.yul\":18335:18345   */\n      dup6\n        /* \"#utility.yul\":18332:18350   */\n      lt\n        /* \"#utility.yul\":18329:18378   */\n      iszero\n      tag_564\n      jumpi\n        /* \"#utility.yul\":18368:18376   */\n      dup2\n        /* \"#utility.yul\":18353:18376   */\n      swap1\n      pop\n        /* \"#utility.yul\":18329:18378   */\n    tag_564:\n        /* \"#utility.yul\":18391:18471   */\n      tag_565\n        /* \"#utility.yul\":18447:18469   */\n      tag_566\n        /* \"#utility.yul\":18465:18468   */\n      dup6\n        /* \"#utility.yul\":18447:18469   */\n      tag_342\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":18437:18445   */\n      dup4\n        /* \"#utility.yul\":18433:18470   */\n      add\n        /* \"#utility.yul\":18420:18431   */\n      dup3\n        /* \"#utility.yul\":18391:18471   */\n      tag_351\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":18050:18481   */\n      pop\n      pop\n        /* \"#utility.yul\":18035:18481   */\n    tag_561:\n        /* \"#utility.yul\":17945:18488   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18494:18611   */\n    tag_353:\n        /* \"#utility.yul\":18548:18556   */\n      0x00\n        /* \"#utility.yul\":18598:18603   */\n      dup3\n        /* \"#utility.yul\":18592:18596   */\n      dup3\n        /* \"#utility.yul\":18588:18604   */\n      shr\n        /* \"#utility.yul\":18567:18604   */\n      swap1\n      pop\n        /* \"#utility.yul\":18494:18611   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18617:18786   */\n    tag_354:\n        /* \"#utility.yul\":18661:18667   */\n      0x00\n        /* \"#utility.yul\":18694:18745   */\n      tag_569\n        /* \"#utility.yul\":18742:18743   */\n      0x00\n        /* \"#utility.yul\":18738:18744   */\n      not\n        /* \"#utility.yul\":18730:18735   */\n      dup5\n        /* \"#utility.yul\":18727:18728   */\n      0x08\n        /* \"#utility.yul\":18723:18736   */\n      mul\n        /* \"#utility.yul\":18694:18745   */\n      tag_353\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":18690:18746   */\n      not\n        /* \"#utility.yul\":18775:18779   */\n      dup1\n        /* \"#utility.yul\":18769:18773   */\n      dup4\n        /* \"#utility.yul\":18765:18780   */\n      and\n        /* \"#utility.yul\":18755:18780   */\n      swap2\n      pop\n        /* \"#utility.yul\":18668:18786   */\n      pop\n        /* \"#utility.yul\":18617:18786   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18791:19086   */\n    tag_355:\n        /* \"#utility.yul\":18867:18871   */\n      0x00\n        /* \"#utility.yul\":19013:19042   */\n      tag_571\n        /* \"#utility.yul\":19038:19041   */\n      dup4\n        /* \"#utility.yul\":19032:19036   */\n      dup4\n        /* \"#utility.yul\":19013:19042   */\n      tag_354\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":19005:19042   */\n      swap2\n      pop\n        /* \"#utility.yul\":19075:19078   */\n      dup3\n        /* \"#utility.yul\":19072:19073   */\n      0x02\n        /* \"#utility.yul\":19068:19079   */\n      mul\n        /* \"#utility.yul\":19062:19066   */\n      dup3\n        /* \"#utility.yul\":19059:19080   */\n      or\n        /* \"#utility.yul\":19051:19080   */\n      swap1\n      pop\n        /* \"#utility.yul\":18791:19086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19091:20486   */\n    tag_233:\n        /* \"#utility.yul\":19208:19245   */\n      tag_573\n        /* \"#utility.yul\":19241:19244   */\n      dup3\n        /* \"#utility.yul\":19208:19245   */\n      tag_306\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":19310:19328   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19302:19308   */\n      dup2\n        /* \"#utility.yul\":19299:19329   */\n      gt\n        /* \"#utility.yul\":19296:19352   */\n      iszero\n      tag_574\n      jumpi\n        /* \"#utility.yul\":19332:19350   */\n      tag_575\n      tag_248\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":19296:19352   */\n    tag_574:\n        /* \"#utility.yul\":19376:19414   */\n      tag_576\n        /* \"#utility.yul\":19408:19412   */\n      dup3\n        /* \"#utility.yul\":19402:19413   */\n      sload\n        /* \"#utility.yul\":19376:19414   */\n      tag_91\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":19461:19528   */\n      tag_577\n        /* \"#utility.yul\":19521:19527   */\n      dup3\n        /* \"#utility.yul\":19513:19519   */\n      dup3\n        /* \"#utility.yul\":19507:19511   */\n      dup6\n        /* \"#utility.yul\":19461:19528   */\n      tag_352\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":19555:19556   */\n      0x00\n        /* \"#utility.yul\":19579:19583   */\n      0x20\n        /* \"#utility.yul\":19566:19583   */\n      swap1\n      pop\n        /* \"#utility.yul\":19611:19613   */\n      0x1f\n        /* \"#utility.yul\":19603:19609   */\n      dup4\n        /* \"#utility.yul\":19600:19614   */\n      gt\n        /* \"#utility.yul\":19628:19629   */\n      0x01\n        /* \"#utility.yul\":19623:20241   */\n      dup2\n      eq\n      tag_579\n      jumpi\n        /* \"#utility.yul\":20285:20286   */\n      0x00\n        /* \"#utility.yul\":20302:20308   */\n      dup5\n        /* \"#utility.yul\":20299:20376   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":20351:20360   */\n      dup3\n        /* \"#utility.yul\":20346:20349   */\n      dup8\n        /* \"#utility.yul\":20342:20361   */\n      add\n        /* \"#utility.yul\":20336:20362   */\n      mload\n        /* \"#utility.yul\":20327:20362   */\n      swap1\n      pop\n        /* \"#utility.yul\":20299:20376   */\n    tag_580:\n        /* \"#utility.yul\":20402:20469   */\n      tag_581\n        /* \"#utility.yul\":20462:20468   */\n      dup6\n        /* \"#utility.yul\":20455:20460   */\n      dup3\n        /* \"#utility.yul\":20402:20469   */\n      tag_355\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":20396:20400   */\n      dup7\n        /* \"#utility.yul\":20389:20470   */\n      sstore\n        /* \"#utility.yul\":20258:20480   */\n      pop\n        /* \"#utility.yul\":19593:20480   */\n      jump(tag_578)\n        /* \"#utility.yul\":19623:20241   */\n    tag_579:\n        /* \"#utility.yul\":19675:19679   */\n      0x1f\n        /* \"#utility.yul\":19671:19680   */\n      not\n        /* \"#utility.yul\":19663:19669   */\n      dup5\n        /* \"#utility.yul\":19659:19681   */\n      and\n        /* \"#utility.yul\":19709:19746   */\n      tag_582\n        /* \"#utility.yul\":19741:19745   */\n      dup7\n        /* \"#utility.yul\":19709:19746   */\n      tag_341\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":19768:19769   */\n      0x00\n        /* \"#utility.yul\":19782:19990   */\n    tag_583:\n        /* \"#utility.yul\":19796:19803   */\n      dup3\n        /* \"#utility.yul\":19793:19794   */\n      dup2\n        /* \"#utility.yul\":19790:19804   */\n      lt\n        /* \"#utility.yul\":19782:19990   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":19875:19884   */\n      dup5\n        /* \"#utility.yul\":19870:19873   */\n      dup10\n        /* \"#utility.yul\":19866:19885   */\n      add\n        /* \"#utility.yul\":19860:19886   */\n      mload\n        /* \"#utility.yul\":19852:19858   */\n      dup3\n        /* \"#utility.yul\":19845:19887   */\n      sstore\n        /* \"#utility.yul\":19926:19927   */\n      0x01\n        /* \"#utility.yul\":19918:19924   */\n      dup3\n        /* \"#utility.yul\":19914:19928   */\n      add\n        /* \"#utility.yul\":19904:19928   */\n      swap2\n      pop\n        /* \"#utility.yul\":19973:19975   */\n      0x20\n        /* \"#utility.yul\":19962:19971   */\n      dup6\n        /* \"#utility.yul\":19958:19976   */\n      add\n        /* \"#utility.yul\":19945:19976   */\n      swap5\n      pop\n        /* \"#utility.yul\":19819:19823   */\n      0x20\n        /* \"#utility.yul\":19816:19817   */\n      dup2\n        /* \"#utility.yul\":19812:19824   */\n      add\n        /* \"#utility.yul\":19807:19824   */\n      swap1\n      pop\n        /* \"#utility.yul\":19782:19990   */\n      jump(tag_583)\n    tag_585:\n        /* \"#utility.yul\":20018:20024   */\n      dup7\n        /* \"#utility.yul\":20009:20016   */\n      dup4\n        /* \"#utility.yul\":20006:20025   */\n      lt\n        /* \"#utility.yul\":20003:20182   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":20076:20085   */\n      dup5\n        /* \"#utility.yul\":20071:20074   */\n      dup10\n        /* \"#utility.yul\":20067:20086   */\n      add\n        /* \"#utility.yul\":20061:20087   */\n      mload\n        /* \"#utility.yul\":20119:20167   */\n      tag_587\n        /* \"#utility.yul\":20161:20165   */\n      0x1f\n        /* \"#utility.yul\":20153:20159   */\n      dup10\n        /* \"#utility.yul\":20149:20166   */\n      and\n        /* \"#utility.yul\":20138:20147   */\n      dup3\n        /* \"#utility.yul\":20119:20167   */\n      tag_354\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":20111:20117   */\n      dup4\n        /* \"#utility.yul\":20104:20168   */\n      sstore\n        /* \"#utility.yul\":20026:20182   */\n      pop\n        /* \"#utility.yul\":20003:20182   */\n    tag_586:\n        /* \"#utility.yul\":20228:20229   */\n      0x01\n        /* \"#utility.yul\":20224:20225   */\n      0x02\n        /* \"#utility.yul\":20216:20222   */\n      dup9\n        /* \"#utility.yul\":20212:20226   */\n      mul\n        /* \"#utility.yul\":20208:20230   */\n      add\n        /* \"#utility.yul\":20202:20206   */\n      dup9\n        /* \"#utility.yul\":20195:20231   */\n      sstore\n        /* \"#utility.yul\":19630:20241   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19593:20480   */\n    tag_578:\n      pop\n        /* \"#utility.yul\":19183:20486   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19091:20486   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20492:20672   */\n    tag_254:\n        /* \"#utility.yul\":20540:20617   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20537:20538   */\n      0x00\n        /* \"#utility.yul\":20530:20618   */\n      mstore\n        /* \"#utility.yul\":20637:20641   */\n      0x12\n        /* \"#utility.yul\":20634:20635   */\n      0x04\n        /* \"#utility.yul\":20627:20642   */\n      mstore\n        /* \"#utility.yul\":20661:20665   */\n      0x24\n        /* \"#utility.yul\":20658:20659   */\n      0x00\n        /* \"#utility.yul\":20651:20666   */\n      revert\n        /* \"#utility.yul\":20678:21010   */\n    tag_264:\n        /* \"#utility.yul\":20799:20803   */\n      0x00\n        /* \"#utility.yul\":20837:20839   */\n      0x40\n        /* \"#utility.yul\":20826:20835   */\n      dup3\n        /* \"#utility.yul\":20822:20840   */\n      add\n        /* \"#utility.yul\":20814:20840   */\n      swap1\n      pop\n        /* \"#utility.yul\":20850:20921   */\n      tag_590\n        /* \"#utility.yul\":20918:20919   */\n      0x00\n        /* \"#utility.yul\":20907:20916   */\n      dup4\n        /* \"#utility.yul\":20903:20920   */\n      add\n        /* \"#utility.yul\":20894:20900   */\n      dup6\n        /* \"#utility.yul\":20850:20921   */\n      tag_316\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":20931:21003   */\n      tag_591\n        /* \"#utility.yul\":20999:21001   */\n      0x20\n        /* \"#utility.yul\":20988:20997   */\n      dup4\n        /* \"#utility.yul\":20984:21002   */\n      add\n        /* \"#utility.yul\":20975:20981   */\n      dup5\n        /* \"#utility.yul\":20931:21003   */\n      tag_319\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":20678:21010   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122010fc9cf3ab007018ddfb8702372bc8cd6bca3520ed02791d802f03749430a0a164736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_275": {
									"entryPoint": null,
									"id": 275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 629,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 450,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 468,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 459,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 721,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 223,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 709,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 365,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 516,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 559,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5231:16",
										"nodeType": "YulBlock",
										"src": "0:5231:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:16",
													"nodeType": "YulBlock",
													"src": "66:40:16",
													"statements": [
														{
															"nativeSrc": "77:22:16",
															"nodeType": "YulAssignment",
															"src": "77:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:16"
																},
																"nativeSrc": "87:12:16",
																"nodeType": "YulFunctionCall",
																"src": "87:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:16",
														"nodeType": "YulTypedName",
														"src": "49:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:16",
														"nodeType": "YulTypedName",
														"src": "59:6:16",
														"type": ""
													}
												],
												"src": "7:99:16"
											},
											{
												"body": {
													"nativeSrc": "140:152:16",
													"nodeType": "YulBlock",
													"src": "140:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:16",
																		"nodeType": "YulLiteral",
																		"src": "157:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:16",
																		"nodeType": "YulLiteral",
																		"src": "160:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:16"
																},
																"nativeSrc": "150:88:16",
																"nodeType": "YulFunctionCall",
																"src": "150:88:16"
															},
															"nativeSrc": "150:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:16",
																		"nodeType": "YulLiteral",
																		"src": "254:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:16",
																		"nodeType": "YulLiteral",
																		"src": "257:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:16"
																},
																"nativeSrc": "247:15:16",
																"nodeType": "YulFunctionCall",
																"src": "247:15:16"
															},
															"nativeSrc": "247:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:16",
																		"nodeType": "YulLiteral",
																		"src": "278:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:16",
																		"nodeType": "YulLiteral",
																		"src": "281:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:16"
																},
																"nativeSrc": "271:15:16",
																"nodeType": "YulFunctionCall",
																"src": "271:15:16"
															},
															"nativeSrc": "271:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:16"
											},
											{
												"body": {
													"nativeSrc": "326:152:16",
													"nodeType": "YulBlock",
													"src": "326:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:16",
																		"nodeType": "YulLiteral",
																		"src": "343:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:16",
																		"nodeType": "YulLiteral",
																		"src": "346:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:16"
																},
																"nativeSrc": "336:88:16",
																"nodeType": "YulFunctionCall",
																"src": "336:88:16"
															},
															"nativeSrc": "336:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:16",
																		"nodeType": "YulLiteral",
																		"src": "440:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:16",
																		"nodeType": "YulLiteral",
																		"src": "443:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:16"
																},
																"nativeSrc": "433:15:16",
																"nodeType": "YulFunctionCall",
																"src": "433:15:16"
															},
															"nativeSrc": "433:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:16",
																		"nodeType": "YulLiteral",
																		"src": "464:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:16",
																		"nodeType": "YulLiteral",
																		"src": "467:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:16"
																},
																"nativeSrc": "457:15:16",
																"nodeType": "YulFunctionCall",
																"src": "457:15:16"
															},
															"nativeSrc": "457:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:16"
											},
											{
												"body": {
													"nativeSrc": "535:269:16",
													"nodeType": "YulBlock",
													"src": "535:269:16",
													"statements": [
														{
															"nativeSrc": "545:22:16",
															"nodeType": "YulAssignment",
															"src": "545:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:16",
																		"nodeType": "YulLiteral",
																		"src": "565:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:16"
																},
																"nativeSrc": "555:12:16",
																"nodeType": "YulFunctionCall",
																"src": "555:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:16"
																}
															]
														},
														{
															"nativeSrc": "576:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:16",
																		"nodeType": "YulLiteral",
																		"src": "612:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:16"
																},
																"nativeSrc": "602:12:16",
																"nodeType": "YulFunctionCall",
																"src": "602:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:16",
																	"nodeType": "YulTypedName",
																	"src": "580:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:16",
																"nodeType": "YulBlock",
																"src": "653:51:16",
																"statements": [
																	{
																		"nativeSrc": "667:27:16",
																		"nodeType": "YulAssignment",
																		"src": "667:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:16",
																					"nodeType": "YulLiteral",
																					"src": "689:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:16"
																			},
																			"nativeSrc": "677:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:16"
																},
																"nativeSrc": "626:26:16",
																"nodeType": "YulFunctionCall",
																"src": "626:26:16"
															},
															"nativeSrc": "623:81:16",
															"nodeType": "YulIf",
															"src": "623:81:16"
														},
														{
															"body": {
																"nativeSrc": "756:42:16",
																"nodeType": "YulBlock",
																"src": "756:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:16"
																			},
																			"nativeSrc": "770:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:16"
																		},
																		"nativeSrc": "770:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:16",
																				"nodeType": "YulLiteral",
																				"src": "751:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:16"
																		},
																		"nativeSrc": "740:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:16"
																},
																"nativeSrc": "717:38:16",
																"nodeType": "YulFunctionCall",
																"src": "717:38:16"
															},
															"nativeSrc": "714:84:16",
															"nodeType": "YulIf",
															"src": "714:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:16",
														"nodeType": "YulTypedName",
														"src": "519:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:16",
														"nodeType": "YulTypedName",
														"src": "528:6:16",
														"type": ""
													}
												],
												"src": "484:320:16"
											},
											{
												"body": {
													"nativeSrc": "864:87:16",
													"nodeType": "YulBlock",
													"src": "864:87:16",
													"statements": [
														{
															"nativeSrc": "874:11:16",
															"nodeType": "YulAssignment",
															"src": "874:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:16",
																"nodeType": "YulIdentifier",
																"src": "882:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:16",
																		"nodeType": "YulLiteral",
																		"src": "902:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:16"
																},
																"nativeSrc": "895:14:16",
																"nodeType": "YulFunctionCall",
																"src": "895:14:16"
															},
															"nativeSrc": "895:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:16"
														},
														{
															"nativeSrc": "918:26:16",
															"nodeType": "YulAssignment",
															"src": "918:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:16",
																		"nodeType": "YulLiteral",
																		"src": "936:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:16",
																		"nodeType": "YulLiteral",
																		"src": "939:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:16"
																},
																"nativeSrc": "926:18:16",
																"nodeType": "YulFunctionCall",
																"src": "926:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:16",
														"nodeType": "YulTypedName",
														"src": "851:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:16",
														"nodeType": "YulTypedName",
														"src": "859:4:16",
														"type": ""
													}
												],
												"src": "810:141:16"
											},
											{
												"body": {
													"nativeSrc": "1001:49:16",
													"nodeType": "YulBlock",
													"src": "1001:49:16",
													"statements": [
														{
															"nativeSrc": "1011:33:16",
															"nodeType": "YulAssignment",
															"src": "1011:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:16",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:16"
																		},
																		"nativeSrc": "1025:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:16"
																},
																"nativeSrc": "1021:23:16",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:16",
														"nodeType": "YulTypedName",
														"src": "984:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:16",
														"nodeType": "YulTypedName",
														"src": "994:6:16",
														"type": ""
													}
												],
												"src": "957:93:16"
											},
											{
												"body": {
													"nativeSrc": "1109:54:16",
													"nodeType": "YulBlock",
													"src": "1109:54:16",
													"statements": [
														{
															"nativeSrc": "1119:37:16",
															"nodeType": "YulAssignment",
															"src": "1119:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:16"
																},
																"nativeSrc": "1140:16:16",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:16",
														"nodeType": "YulTypedName",
														"src": "1084:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:16",
														"nodeType": "YulTypedName",
														"src": "1090:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:16",
														"nodeType": "YulTypedName",
														"src": "1100:8:16",
														"type": ""
													}
												],
												"src": "1056:107:16"
											},
											{
												"body": {
													"nativeSrc": "1245:317:16",
													"nodeType": "YulBlock",
													"src": "1245:317:16",
													"statements": [
														{
															"nativeSrc": "1255:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:16"
																},
																"nativeSrc": "1272:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:16",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:16",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:16"
																},
																"nativeSrc": "1311:97:16",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:16",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:16",
															"nodeType": "YulAssignment",
															"src": "1417:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:16"
																},
																"nativeSrc": "1429:39:16",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:16"
																}
															]
														},
														{
															"nativeSrc": "1477:30:16",
															"nodeType": "YulAssignment",
															"src": "1477:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:16"
																		},
																		"nativeSrc": "1497:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:16"
																},
																"nativeSrc": "1486:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:16"
																}
															]
														},
														{
															"nativeSrc": "1516:40:16",
															"nodeType": "YulAssignment",
															"src": "1516:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:16"
																		},
																		"nativeSrc": "1536:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:16"
																},
																"nativeSrc": "1526:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:16",
														"nodeType": "YulTypedName",
														"src": "1206:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:16",
														"nodeType": "YulTypedName",
														"src": "1213:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:16",
														"nodeType": "YulTypedName",
														"src": "1225:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:16",
														"nodeType": "YulTypedName",
														"src": "1238:6:16",
														"type": ""
													}
												],
												"src": "1169:393:16"
											},
											{
												"body": {
													"nativeSrc": "1613:32:16",
													"nodeType": "YulBlock",
													"src": "1613:32:16",
													"statements": [
														{
															"nativeSrc": "1623:16:16",
															"nodeType": "YulAssignment",
															"src": "1623:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:16",
																"nodeType": "YulIdentifier",
																"src": "1634:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:16",
														"nodeType": "YulTypedName",
														"src": "1595:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:16",
														"nodeType": "YulTypedName",
														"src": "1605:7:16",
														"type": ""
													}
												],
												"src": "1568:77:16"
											},
											{
												"body": {
													"nativeSrc": "1683:28:16",
													"nodeType": "YulBlock",
													"src": "1683:28:16",
													"statements": [
														{
															"nativeSrc": "1693:12:16",
															"nodeType": "YulAssignment",
															"src": "1693:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:16",
																"nodeType": "YulIdentifier",
																"src": "1700:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:16",
														"nodeType": "YulTypedName",
														"src": "1669:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:16",
														"nodeType": "YulTypedName",
														"src": "1679:3:16",
														"type": ""
													}
												],
												"src": "1651:60:16"
											},
											{
												"body": {
													"nativeSrc": "1777:82:16",
													"nodeType": "YulBlock",
													"src": "1777:82:16",
													"statements": [
														{
															"nativeSrc": "1787:66:16",
															"nodeType": "YulAssignment",
															"src": "1787:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:16"
																				},
																				"nativeSrc": "1827:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:16"
																		},
																		"nativeSrc": "1818:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:16"
																},
																"nativeSrc": "1800:53:16",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:16",
														"nodeType": "YulTypedName",
														"src": "1757:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:16",
														"nodeType": "YulTypedName",
														"src": "1767:9:16",
														"type": ""
													}
												],
												"src": "1717:142:16"
											},
											{
												"body": {
													"nativeSrc": "1912:28:16",
													"nodeType": "YulBlock",
													"src": "1912:28:16",
													"statements": [
														{
															"nativeSrc": "1922:12:16",
															"nodeType": "YulAssignment",
															"src": "1922:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:16",
																"nodeType": "YulIdentifier",
																"src": "1929:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:16",
														"nodeType": "YulTypedName",
														"src": "1898:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:16",
														"nodeType": "YulTypedName",
														"src": "1908:3:16",
														"type": ""
													}
												],
												"src": "1865:75:16"
											},
											{
												"body": {
													"nativeSrc": "2022:193:16",
													"nodeType": "YulBlock",
													"src": "2022:193:16",
													"statements": [
														{
															"nativeSrc": "2032:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:16"
																},
																"nativeSrc": "2056:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:16",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:16"
																				},
																				"nativeSrc": "2145:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:16"
																				},
																				"nativeSrc": "2166:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:16"
																		},
																		"nativeSrc": "2117:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:16"
																},
																"nativeSrc": "2104:105:16",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:16"
															},
															"nativeSrc": "2104:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:16",
														"nodeType": "YulTypedName",
														"src": "1999:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:16",
														"nodeType": "YulTypedName",
														"src": "2005:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:16",
														"nodeType": "YulTypedName",
														"src": "2013:7:16",
														"type": ""
													}
												],
												"src": "1946:269:16"
											},
											{
												"body": {
													"nativeSrc": "2270:24:16",
													"nodeType": "YulBlock",
													"src": "2270:24:16",
													"statements": [
														{
															"nativeSrc": "2280:8:16",
															"nodeType": "YulAssignment",
															"src": "2280:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:16",
																"nodeType": "YulLiteral",
																"src": "2287:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:16",
														"nodeType": "YulTypedName",
														"src": "2266:3:16",
														"type": ""
													}
												],
												"src": "2221:73:16"
											},
											{
												"body": {
													"nativeSrc": "2353:136:16",
													"nodeType": "YulBlock",
													"src": "2353:136:16",
													"statements": [
														{
															"nativeSrc": "2363:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:16"
																},
																"nativeSrc": "2377:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:16"
																},
																"nativeSrc": "2418:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:16"
															},
															"nativeSrc": "2418:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:16",
														"nodeType": "YulTypedName",
														"src": "2339:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:16",
														"nodeType": "YulTypedName",
														"src": "2345:6:16",
														"type": ""
													}
												],
												"src": "2300:189:16"
											},
											{
												"body": {
													"nativeSrc": "2545:136:16",
													"nodeType": "YulBlock",
													"src": "2545:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:16",
																"nodeType": "YulBlock",
																"src": "2612:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:16"
																			},
																			"nativeSrc": "2626:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:16"
																		},
																		"nativeSrc": "2626:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:16"
																},
																"nativeSrc": "2562:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:16"
															},
															"nativeSrc": "2555:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:16",
																"nodeType": "YulBlock",
																"src": "2577:26:16",
																"statements": [
																	{
																		"nativeSrc": "2579:22:16",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:16"
																			},
																			"nativeSrc": "2588:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:16",
																"nodeType": "YulBlock",
																"src": "2559:2:16",
																"statements": []
															},
															"src": "2555:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:16",
														"nodeType": "YulTypedName",
														"src": "2533:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:16",
														"nodeType": "YulTypedName",
														"src": "2540:3:16",
														"type": ""
													}
												],
												"src": "2495:186:16"
											},
											{
												"body": {
													"nativeSrc": "2766:464:16",
													"nodeType": "YulBlock",
													"src": "2766:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:16",
																"nodeType": "YulBlock",
																"src": "2792:431:16",
																"statements": [
																	{
																		"nativeSrc": "2806:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:16"
																			},
																			"nativeSrc": "2822:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:16",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:16"
																					},
																					"nativeSrc": "2906:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:16"
																			},
																			"nativeSrc": "2892:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:16",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:16",
																			"nodeType": "YulBlock",
																			"src": "3093:27:16",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:16",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:16",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:16"
																			},
																			"nativeSrc": "3074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:16"
																		},
																		"nativeSrc": "3071:49:16",
																		"nodeType": "YulIf",
																		"src": "3071:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:16"
																							},
																							"nativeSrc": "3189:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:16"
																					},
																					"nativeSrc": "3175:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:16"
																			},
																			"nativeSrc": "3133:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:16"
																		},
																		"nativeSrc": "3133:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:16"
																},
																"nativeSrc": "2780:11:16",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:16"
															},
															"nativeSrc": "2777:446:16",
															"nodeType": "YulIf",
															"src": "2777:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:16",
														"nodeType": "YulTypedName",
														"src": "2742:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:16",
														"nodeType": "YulTypedName",
														"src": "2749:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:16",
														"nodeType": "YulTypedName",
														"src": "2754:10:16",
														"type": ""
													}
												],
												"src": "2687:543:16"
											},
											{
												"body": {
													"nativeSrc": "3299:54:16",
													"nodeType": "YulBlock",
													"src": "3299:54:16",
													"statements": [
														{
															"nativeSrc": "3309:37:16",
															"nodeType": "YulAssignment",
															"src": "3309:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:16"
																},
																"nativeSrc": "3330:16:16",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:16",
														"nodeType": "YulTypedName",
														"src": "3274:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:16",
														"nodeType": "YulTypedName",
														"src": "3280:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:16",
														"nodeType": "YulTypedName",
														"src": "3290:8:16",
														"type": ""
													}
												],
												"src": "3236:117:16"
											},
											{
												"body": {
													"nativeSrc": "3410:118:16",
													"nodeType": "YulBlock",
													"src": "3410:118:16",
													"statements": [
														{
															"nativeSrc": "3420:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:16"
																				},
																				"nativeSrc": "3465:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:16",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:16"
																				},
																				"nativeSrc": "3480:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:16"
																		},
																		"nativeSrc": "3436:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:16"
																},
																"nativeSrc": "3432:56:16",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:16",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:16",
															"nodeType": "YulAssignment",
															"src": "3497:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:16"
																},
																"nativeSrc": "3507:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:16",
														"nodeType": "YulTypedName",
														"src": "3387:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:16",
														"nodeType": "YulTypedName",
														"src": "3393:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:16",
														"nodeType": "YulTypedName",
														"src": "3403:6:16",
														"type": ""
													}
												],
												"src": "3359:169:16"
											},
											{
												"body": {
													"nativeSrc": "3614:214:16",
													"nodeType": "YulBlock",
													"src": "3614:214:16",
													"statements": [
														{
															"nativeSrc": "3747:37:16",
															"nodeType": "YulAssignment",
															"src": "3747:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:16"
																},
																"nativeSrc": "3755:29:16",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:16"
																}
															]
														},
														{
															"nativeSrc": "3793:29:16",
															"nodeType": "YulAssignment",
															"src": "3793:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:16"
																		},
																		"nativeSrc": "3810:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:16"
																},
																"nativeSrc": "3801:21:16",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:16",
														"nodeType": "YulTypedName",
														"src": "3595:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:16",
														"nodeType": "YulTypedName",
														"src": "3601:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:16",
														"nodeType": "YulTypedName",
														"src": "3609:4:16",
														"type": ""
													}
												],
												"src": "3533:295:16"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:16",
													"nodeType": "YulBlock",
													"src": "3925:1303:16",
													"statements": [
														{
															"nativeSrc": "3936:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:16"
																},
																"nativeSrc": "3950:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:16",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:16",
																"nodeType": "YulBlock",
																"src": "4072:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:16"
																			},
																			"nativeSrc": "4074:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:16"
																		},
																		"nativeSrc": "4074:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:16",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:16"
																},
																"nativeSrc": "4041:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:16"
															},
															"nativeSrc": "4038:56:16",
															"nodeType": "YulIf",
															"src": "4038:56:16"
														},
														{
															"nativeSrc": "4104:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:16"
																		},
																		"nativeSrc": "4144:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:16"
																},
																"nativeSrc": "4118:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:16",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:16"
																},
																"nativeSrc": "4203:67:16",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:16"
															},
															"nativeSrc": "4203:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:16"
														},
														{
															"nativeSrc": "4280:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:16",
																"nodeType": "YulLiteral",
																"src": "4297:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:16",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:16",
															"nodeType": "YulAssignment",
															"src": "4308:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:16",
																"nodeType": "YulLiteral",
																"src": "4321:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:16",
																		"nodeType": "YulBlock",
																		"src": "4372:611:16",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:16",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:16"
																							},
																							"nativeSrc": "4413:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:16"
																					},
																					"nativeSrc": "4401:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:16",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:16"
																					},
																					"nativeSrc": "4451:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:16",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:16",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:16",
																					"nodeType": "YulBlock",
																					"src": "4569:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:16"
																												},
																												"nativeSrc": "4608:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:16"
																										},
																										"nativeSrc": "4602:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:16"
																								},
																								"nativeSrc": "4587:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:16"
																							},
																							"nativeSrc": "4587:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:16"
																						},
																						{
																							"nativeSrc": "4646:24:16",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:16",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:16"
																								},
																								"nativeSrc": "4656:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:16",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:16",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:16"
																								},
																								"nativeSrc": "4700:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:16"
																					},
																					"nativeSrc": "4532:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:16"
																				},
																				"nativeSrc": "4524:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:16",
																					"nodeType": "YulBlock",
																					"src": "4547:21:16",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:16",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:16",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:16"
																								},
																								"nativeSrc": "4554:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:16",
																					"nodeType": "YulBlock",
																					"src": "4528:3:16",
																					"statements": []
																				},
																				"src": "4524:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:16",
																					"nodeType": "YulBlock",
																					"src": "4768:156:16",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:16"
																										},
																										"nativeSrc": "4809:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:16"
																								},
																								"nativeSrc": "4803:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:16",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:16",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:16"
																												},
																												"nativeSrc": "4891:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:16"
																										},
																										"nativeSrc": "4861:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:16"
																								},
																								"nativeSrc": "4846:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:16"
																							},
																							"nativeSrc": "4846:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:16"
																					},
																					"nativeSrc": "4748:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:16"
																				},
																				"nativeSrc": "4745:179:16",
																				"nodeType": "YulIf",
																				"src": "4745:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:16",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:16"
																									},
																									"nativeSrc": "4954:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:16",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:16"
																							},
																							"nativeSrc": "4950:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:16"
																					},
																					"nativeSrc": "4937:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:16"
																				},
																				"nativeSrc": "4937:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:16"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:16",
																	"nodeType": "YulCase",
																	"src": "4365:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:16",
																		"nodeType": "YulBlock",
																		"src": "5000:222:16",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:16",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:16",
																					"nodeType": "YulBlock",
																					"src": "5051:67:16",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:16",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:16"
																										},
																										"nativeSrc": "5084:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:16"
																								},
																								"nativeSrc": "5078:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:16"
																				},
																				"nativeSrc": "5041:77:16",
																				"nodeType": "YulIf",
																				"src": "5041:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:16"
																							},
																							"nativeSrc": "5144:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:16"
																					},
																					"nativeSrc": "5131:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:16"
																				},
																				"nativeSrc": "5131:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:16"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:16",
																	"nodeType": "YulCase",
																	"src": "4992:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:16"
																},
																"nativeSrc": "4342:14:16",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:16"
															},
															"nativeSrc": "4335:887:16",
															"nodeType": "YulSwitch",
															"src": "4335:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:16",
														"nodeType": "YulTypedName",
														"src": "3914:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:16",
														"nodeType": "YulTypedName",
														"src": "3920:3:16",
														"type": ""
													}
												],
												"src": "3833:1395:16"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b506040518060400160405280600a81526020017f537461636b204e465473000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f534e465400000000000000000000000000000000000000000000000000000000815250815f90816200008d91906200030c565b5080600190816200009f91906200030c565b505050620003f0565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200012457607f821691505b6020821081036200013a5762000139620000df565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026200019e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000161565b620001aa868362000161565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f620001f4620001ee620001e884620001c2565b620001cb565b620001c2565b9050919050565b5f819050919050565b6200020f83620001d4565b620002276200021e82620001fb565b8484546200016d565b825550505050565b5f90565b6200023d6200022f565b6200024a81848462000204565b505050565b5b818110156200027157620002655f8262000233565b60018101905062000250565b5050565b601f821115620002c0576200028a8162000140565b620002958462000152565b81016020851015620002a5578190505b620002bd620002b48562000152565b8301826200024f565b50505b505050565b5f82821c905092915050565b5f620002e25f1984600802620002c5565b1980831691505092915050565b5f620002fc8383620002d1565b9150826002028217905092915050565b6200031782620000a8565b67ffffffffffffffff811115620003335762000332620000b2565b5b6200033f82546200010c565b6200034c82828562000275565b5f60209050601f83116001811462000382575f84156200036d578287015190505b620003798582620002ef565b865550620003e8565b601f198416620003928662000140565b5f5b82811015620003bb5784890151825560018201915060208501945060208101905062000394565b86831015620003db5784890151620003d7601f891682620002d1565b8355505b6001600288020188555050505b505050505050565b6124ae80620003fe5f395ff3fe608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806370a0823111610095578063b88d4fde11610064578063b88d4fde14610281578063c87b56dd1461029d578063d0def521146102cd578063e985e9c5146102e9576100f3565b806370a08231146101f957806375794a3c1461022957806395d89b4114610247578063a22cb46514610265576100f3565b8063095ea7b3116100d1578063095ea7b31461017557806323b872dd1461019157806342842e0e146101ad5780636352211e146101c9576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c91906119a5565b610319565b60405161011e91906119ea565b60405180910390f35b61012f610379565b60405161013c9190611a8d565b60405180910390f35b61015f600480360381019061015a9190611ae0565b610408565b60405161016c9190611b4a565b60405180910390f35b61018f600480360381019061018a9190611b8d565b610422565b005b6101ab60048036038101906101a69190611bcb565b610439565b005b6101c760048036038101906101c29190611bcb565b610538565b005b6101e360048036038101906101de9190611ae0565b610557565b6040516101f09190611b4a565b60405180910390f35b610213600480360381019061020e9190611c1b565b6105dd565b6040516102209190611c55565b60405180910390f35b610231610693565b60405161023e9190611c55565b60405180910390f35b61024f610699565b60405161025c9190611a8d565b60405180910390f35b61027f600480360381019061027a9190611c98565b610729565b005b61029b60048036038101906102969190611e02565b61073f565b005b6102b760048036038101906102b29190611ae0565b61075c565b6040516102c49190611a8d565b60405180910390f35b6102e760048036038101906102e29190611edf565b610866565b005b61030360048036038101906102fe9190611f3c565b6108dd565b60405161031091906119ea565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037257506103718261096b565b5b9050919050565b60605f805461038790611fa7565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390611fa7565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b5050505050905090565b5f61041282610a4c565b61041b82610ac7565b9050919050565b610434828261042f610b00565b610b07565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104a09190611b4a565b60405180910390fd5b5f6104bc83836104b7610b00565b610c86565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610532578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052993929190611fd7565b60405180910390fd5b50505050565b61055283838360405180602001604052805f81525061073f565b505050565b5f8061056283610d1a565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105d457826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016105cb9190611c55565b60405180910390fd5b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361064e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106459190611b4a565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b6060600180546106a890611fa7565b80601f01602080910402602001604051908101604052809291908181526020018280546106d490611fa7565b801561071f5780601f106106f65761010080835404028352916020019161071f565b820191905f5260205f20905b81548152906001019060200180831161070257829003601f168201915b5050505050905090565b61073b610734610b00565b8383610d53565b5050565b61074a848484610439565b61075684848484610ebc565b50505050565b606061076782610a4c565b5f60065f8481526020019081526020015f20805461078490611fa7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b090611fa7565b80156107fb5780601f106107d2576101008083540402835291602001916107fb565b820191905f5260205f20905b8154815290600101906020018083116107de57829003601f168201915b505050505090505f61080b61106e565b90505f81510361081f578192505050610861565b5f8251111561085357808260405160200161083b929190612046565b60405160208183030381529060405292505050610861565b61085c84611084565b925050505b919050565b610872836007546110e9565b6108c160075483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050506111dc565b60075f8154809291906108d390612096565b9190505550505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a3557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a455750610a44826112ae565b5b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff16610a6c82610d1a565b73ffffffffffffffffffffffffffffffffffffffff1603610ac457806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610abb9190611c55565b60405180910390fd5b50565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b5f80610b1284610557565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610b7c57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015610b8f5750610b8d81846108dd565b155b15610bd157826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401610bc89190611b4a565b60405180910390fd5b8460045f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4809150509392505050565b5f80610c93858585611317565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610ced57505f60065f8681526020019081526020015f208054610ce890611fa7565b905014155b15610d0f5760065f8581526020019081526020015f205f610d0e91906118e7565b5b809150509392505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc357816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610dba9190611b4a565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610eaf91906119ea565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611068578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610eff610b00565b8685856040518563ffffffff1660e01b8152600401610f21949392919061212f565b6020604051808303815f875af1925050508015610f5c57506040513d601f19601f82011682018060405250810190610f59919061218d565b60015b610fdd573d805f8114610f8a576040519150601f19603f3d011682016040523d82523d5f602084013e610f8f565b606091505b505f815103610fd557836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fcc9190611b4a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461106657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161105d9190611b4a565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061108f82610a4c565b5f61109861106e565b90505f8151116110b65760405180602001604052805f8152506110e1565b806110c084611549565b6040516020016110d1929190612046565b6040516020818303038152906040525b915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611159575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111509190611b4a565b60405180910390fd5b5f61116583835f610c86565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111d7575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016111ce9190611b4a565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff166111fc83610d1a565b73ffffffffffffffffffffffffffffffffffffffff160361125457816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161124b9190611c55565b60405180910390fd5b8060065f8481526020019081526020015f2090816112729190612355565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516112a29190611c55565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061132284610d1a565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461136357611362818486611613565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114155760045f8581526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461149457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60605f6001611557846116d6565b0190505f8167ffffffffffffffff81111561157557611574611cde565b5b6040519080825280601f01601f1916602001820160405280156115a75781602001600182028036833780820191505090505b5090505f82602001820190505b600115611608578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816115fd576115fc612424565b5b0494505f85036115b4575b819350505050919050565b61161e838383611827565b6116d1575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361169257806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116899190611c55565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016116c8929190612451565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611732577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161172857611727612424565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061176f576d04ee2d6d415b85acef8100000000838161176557611764612424565b5b0492506020810190505b662386f26fc10000831061179e57662386f26fc10000838161179457611793612424565b5b0492506010810190505b6305f5e10083106117c7576305f5e10083816117bd576117bc612424565b5b0492506008810190505b61271083106117ec5761271083816117e2576117e1612424565b5b0492506004810190505b6064831061180f576064838161180557611804612424565b5b0492506002810190505b600a831061181e576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118de57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061189f575061189e84846108dd565b5b806118dd57508273ffffffffffffffffffffffffffffffffffffffff166118c583610ac7565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5080546118f390611fa7565b5f825580601f106119045750611921565b601f0160209004905f5260205f20908101906119209190611924565b5b50565b5b8082111561193b575f815f905550600101611925565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61198481611950565b811461198e575f80fd5b50565b5f8135905061199f8161197b565b92915050565b5f602082840312156119ba576119b9611948565b5b5f6119c784828501611991565b91505092915050565b5f8115159050919050565b6119e4816119d0565b82525050565b5f6020820190506119fd5f8301846119db565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611a3a578082015181840152602081019050611a1f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611a5f82611a03565b611a698185611a0d565b9350611a79818560208601611a1d565b611a8281611a45565b840191505092915050565b5f6020820190508181035f830152611aa58184611a55565b905092915050565b5f819050919050565b611abf81611aad565b8114611ac9575f80fd5b50565b5f81359050611ada81611ab6565b92915050565b5f60208284031215611af557611af4611948565b5b5f611b0284828501611acc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b3482611b0b565b9050919050565b611b4481611b2a565b82525050565b5f602082019050611b5d5f830184611b3b565b92915050565b611b6c81611b2a565b8114611b76575f80fd5b50565b5f81359050611b8781611b63565b92915050565b5f8060408385031215611ba357611ba2611948565b5b5f611bb085828601611b79565b9250506020611bc185828601611acc565b9150509250929050565b5f805f60608486031215611be257611be1611948565b5b5f611bef86828701611b79565b9350506020611c0086828701611b79565b9250506040611c1186828701611acc565b9150509250925092565b5f60208284031215611c3057611c2f611948565b5b5f611c3d84828501611b79565b91505092915050565b611c4f81611aad565b82525050565b5f602082019050611c685f830184611c46565b92915050565b611c77816119d0565b8114611c81575f80fd5b50565b5f81359050611c9281611c6e565b92915050565b5f8060408385031215611cae57611cad611948565b5b5f611cbb85828601611b79565b9250506020611ccc85828601611c84565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611d1482611a45565b810181811067ffffffffffffffff82111715611d3357611d32611cde565b5b80604052505050565b5f611d4561193f565b9050611d518282611d0b565b919050565b5f67ffffffffffffffff821115611d7057611d6f611cde565b5b611d7982611a45565b9050602081019050919050565b828183375f83830152505050565b5f611da6611da184611d56565b611d3c565b905082815260208101848484011115611dc257611dc1611cda565b5b611dcd848285611d86565b509392505050565b5f82601f830112611de957611de8611cd6565b5b8135611df9848260208601611d94565b91505092915050565b5f805f8060808587031215611e1a57611e19611948565b5b5f611e2787828801611b79565b9450506020611e3887828801611b79565b9350506040611e4987828801611acc565b925050606085013567ffffffffffffffff811115611e6a57611e6961194c565b5b611e7687828801611dd5565b91505092959194509250565b5f80fd5b5f80fd5b5f8083601f840112611e9f57611e9e611cd6565b5b8235905067ffffffffffffffff811115611ebc57611ebb611e82565b5b602083019150836001820283011115611ed857611ed7611e86565b5b9250929050565b5f805f60408486031215611ef657611ef5611948565b5b5f611f0386828701611b79565b935050602084013567ffffffffffffffff811115611f2457611f2361194c565b5b611f3086828701611e8a565b92509250509250925092565b5f8060408385031215611f5257611f51611948565b5b5f611f5f85828601611b79565b9250506020611f7085828601611b79565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611fbe57607f821691505b602082108103611fd157611fd0611f7a565b5b50919050565b5f606082019050611fea5f830186611b3b565b611ff76020830185611c46565b6120046040830184611b3b565b949350505050565b5f81905092915050565b5f61202082611a03565b61202a818561200c565b935061203a818560208601611a1d565b80840191505092915050565b5f6120518285612016565b915061205d8284612016565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6120a082611aad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120d2576120d1612069565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612101826120dd565b61210b81856120e7565b935061211b818560208601611a1d565b61212481611a45565b840191505092915050565b5f6080820190506121425f830187611b3b565b61214f6020830186611b3b565b61215c6040830185611c46565b818103606083015261216e81846120f7565b905095945050505050565b5f815190506121878161197b565b92915050565b5f602082840312156121a2576121a1611948565b5b5f6121af84828501612179565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826121d9565b61221e86836121d9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61225961225461224f84611aad565b612236565b611aad565b9050919050565b5f819050919050565b6122728361223f565b61228661227e82612260565b8484546121e5565b825550505050565b5f90565b61229a61228e565b6122a5818484612269565b505050565b5b818110156122c8576122bd5f82612292565b6001810190506122ab565b5050565b601f82111561230d576122de816121b8565b6122e7846121ca565b810160208510156122f6578190505b61230a612302856121ca565b8301826122aa565b50505b505050565b5f82821c905092915050565b5f61232d5f1984600802612312565b1980831691505092915050565b5f612345838361231e565b9150826002028217905092915050565b61235e82611a03565b67ffffffffffffffff81111561237757612376611cde565b5b6123818254611fa7565b61238c8282856122cc565b5f60209050601f8311600181146123bd575f84156123ab578287015190505b6123b5858261233a565b86555061241c565b601f1984166123cb866121b8565b5f5b828110156123f2578489015182556001820191506020850194506020810190506123cd565b8683101561240f578489015161240b601f89168261231e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506124645f830185611b3b565b6124716020830184611c46565b939250505056fea264697066735822122010fc9cf3ab007018ddfb8702372bc8cd6bca3520ed02791d802f03749430a0a164736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x537461636B204E46547300000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x534E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x8D SWAP2 SWAP1 PUSH3 0x30C JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x9F SWAP2 SWAP1 PUSH3 0x30C JUMP JUMPDEST POP POP POP PUSH3 0x3F0 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x124 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x13A JUMPI PUSH3 0x139 PUSH3 0xDF JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x19E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x161 JUMP JUMPDEST PUSH3 0x1AA DUP7 DUP4 PUSH3 0x161 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x1F4 PUSH3 0x1EE PUSH3 0x1E8 DUP5 PUSH3 0x1C2 JUMP JUMPDEST PUSH3 0x1CB JUMP JUMPDEST PUSH3 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x20F DUP4 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x227 PUSH3 0x21E DUP3 PUSH3 0x1FB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x16D JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x23D PUSH3 0x22F JUMP JUMPDEST PUSH3 0x24A DUP2 DUP5 DUP5 PUSH3 0x204 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x271 JUMPI PUSH3 0x265 PUSH0 DUP3 PUSH3 0x233 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x250 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2C0 JUMPI PUSH3 0x28A DUP2 PUSH3 0x140 JUMP JUMPDEST PUSH3 0x295 DUP5 PUSH3 0x152 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x2A5 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x2BD PUSH3 0x2B4 DUP6 PUSH3 0x152 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x24F JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2E2 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x2C5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x2FC DUP4 DUP4 PUSH3 0x2D1 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x317 DUP3 PUSH3 0xA8 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x333 JUMPI PUSH3 0x332 PUSH3 0xB2 JUMP JUMPDEST JUMPDEST PUSH3 0x33F DUP3 SLOAD PUSH3 0x10C JUMP JUMPDEST PUSH3 0x34C DUP3 DUP3 DUP6 PUSH3 0x275 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x382 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x36D JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x379 DUP6 DUP3 PUSH3 0x2EF JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x392 DUP7 PUSH3 0x140 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x3BB JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x394 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x3DB JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x3D7 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x2D1 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x24AE DUP1 PUSH3 0x3FE PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x265 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x372 JUMPI POP PUSH2 0x371 DUP3 PUSH2 0x96B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x412 DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x41B DUP3 PUSH2 0xAC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x434 DUP3 DUP3 PUSH2 0x42F PUSH2 0xB00 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x4B7 PUSH2 0xB00 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x532 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x73F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x562 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D4 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x64E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D4 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x702 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73B PUSH2 0x734 PUSH2 0xB00 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x74A DUP5 DUP5 DUP5 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x756 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEBC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x767 DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x784 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B0 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x80B PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x81F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x853 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x83B SWAP3 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH2 0x85C DUP5 PUSH2 0x1084 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x872 DUP4 PUSH1 0x7 SLOAD PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x8C1 PUSH1 0x7 SLOAD DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x8D3 SWAP1 PUSH2 0x2096 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA35 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xA45 JUMPI POP PUSH2 0xA44 DUP3 PUSH2 0x12AE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6C DUP3 PUSH2 0xD1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB12 DUP5 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xB8F JUMPI POP PUSH2 0xB8D DUP2 DUP5 PUSH2 0x8DD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xBD1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x4 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC93 DUP6 DUP6 DUP6 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xCED JUMPI POP PUSH0 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xCE8 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST SWAP1 POP EQ ISZERO JUMPDEST ISZERO PUSH2 0xD0F JUMPI PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1068 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEFF PUSH2 0xB00 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFDD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF8A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFD5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1066 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x108F DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH0 PUSH2 0x1098 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x10E1 JUMP JUMPDEST DUP1 PUSH2 0x10C0 DUP5 PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10D1 SWAP3 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1159 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1165 DUP4 DUP4 PUSH0 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11FC DUP4 PUSH2 0xD1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1254 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x2355 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12A2 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1322 DUP5 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1363 JUMPI PUSH2 0x1362 DUP2 DUP5 DUP7 PUSH2 0x1613 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1415 JUMPI PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1494 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1557 DUP5 PUSH2 0x16D6 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1575 JUMPI PUSH2 0x1574 PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1608 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x15B4 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161E DUP4 DUP4 DUP4 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x16D1 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1692 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1689 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1732 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x176F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1765 JUMPI PUSH2 0x1764 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x179E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1794 JUMPI PUSH2 0x1793 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x17C7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x17BD JUMPI PUSH2 0x17BC PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x17EC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x180F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x181E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18DE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x189F JUMPI POP PUSH2 0x189E DUP5 DUP5 PUSH2 0x8DD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x18DD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18C5 DUP4 PUSH2 0xAC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x18F3 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1904 JUMPI POP PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1920 SWAP2 SWAP1 PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x193B JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1925 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1984 DUP2 PUSH2 0x1950 JUMP JUMPDEST DUP2 EQ PUSH2 0x198E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x199F DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BA JUMPI PUSH2 0x19B9 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19C7 DUP5 DUP3 DUP6 ADD PUSH2 0x1991 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E4 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FD PUSH0 DUP4 ADD DUP5 PUSH2 0x19DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A3A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A1F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5F DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x1A69 DUP2 DUP6 PUSH2 0x1A0D JUMP JUMPDEST SWAP4 POP PUSH2 0x1A79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x1A82 DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA5 DUP2 DUP5 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1AAD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADA DUP2 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF5 JUMPI PUSH2 0x1AF4 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B02 DUP5 DUP3 DUP6 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1B2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5D PUSH0 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B6C DUP2 PUSH2 0x1B2A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B76 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B87 DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA3 JUMPI PUSH2 0x1BA2 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB0 DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE2 JUMPI PUSH2 0x1BE1 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BEF DUP7 DUP3 DUP8 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C00 DUP7 DUP3 DUP8 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C11 DUP7 DUP3 DUP8 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C30 JUMPI PUSH2 0x1C2F PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C3D DUP5 DUP3 DUP6 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4F DUP2 PUSH2 0x1AAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C68 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C77 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C92 DUP2 PUSH2 0x1C6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBB DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CCC DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D14 DUP3 PUSH2 0x1A45 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D32 PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 PUSH2 0x193F JUMP JUMPDEST SWAP1 POP PUSH2 0x1D51 DUP3 DUP3 PUSH2 0x1D0B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST PUSH2 0x1D79 DUP3 PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA6 PUSH2 0x1DA1 DUP5 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1CDA JUMP JUMPDEST JUMPDEST PUSH2 0x1DCD DUP5 DUP3 DUP6 PUSH2 0x1D86 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DF9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH2 0x1E19 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E27 DUP8 DUP3 DUP9 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E38 DUP8 DUP3 DUP9 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E49 DUP8 DUP3 DUP9 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E6A JUMPI PUSH2 0x1E69 PUSH2 0x194C JUMP JUMPDEST JUMPDEST PUSH2 0x1E76 DUP8 DUP3 DUP9 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E9F JUMPI PUSH2 0x1E9E PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBC JUMPI PUSH2 0x1EBB PUSH2 0x1E82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1E86 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F03 DUP7 DUP3 DUP8 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F24 JUMPI PUSH2 0x1F23 PUSH2 0x194C JUMP JUMPDEST JUMPDEST PUSH2 0x1F30 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F51 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5F DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F70 DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FBE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FD1 JUMPI PUSH2 0x1FD0 PUSH2 0x1F7A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FEA PUSH0 DUP4 ADD DUP7 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1FF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x202A DUP2 DUP6 PUSH2 0x200C JUMP JUMPDEST SWAP4 POP PUSH2 0x203A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A1D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2051 DUP3 DUP6 PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP3 DUP5 PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20A0 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x2069 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2101 DUP3 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x210B DUP2 DUP6 PUSH2 0x20E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x211B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x2124 DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2142 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x214F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x215C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C46 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x216E DUP2 DUP5 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2187 DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A2 JUMPI PUSH2 0x21A1 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21AF DUP5 DUP3 DUP6 ADD PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2214 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x221E DUP7 DUP4 PUSH2 0x21D9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2259 PUSH2 0x2254 PUSH2 0x224F DUP5 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2272 DUP4 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x2286 PUSH2 0x227E DUP3 PUSH2 0x2260 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x21E5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x229A PUSH2 0x228E JUMP JUMPDEST PUSH2 0x22A5 DUP2 DUP5 DUP5 PUSH2 0x2269 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22C8 JUMPI PUSH2 0x22BD PUSH0 DUP3 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x230D JUMPI PUSH2 0x22DE DUP2 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x22E7 DUP5 PUSH2 0x21CA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x22F6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x230A PUSH2 0x2302 DUP6 PUSH2 0x21CA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x22AA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x232D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2312 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2345 DUP4 DUP4 PUSH2 0x231E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x235E DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST PUSH2 0x2381 DUP3 SLOAD PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x238C DUP3 DUP3 DUP6 PUSH2 0x22CC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x23BD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x23AB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x23B5 DUP6 DUP3 PUSH2 0x233A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x241C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x23CB DUP7 PUSH2 0x21B8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x23F2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23CD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x240F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x240B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x231E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2464 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x2471 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xFC SWAP13 RETURN 0xAB STOP PUSH17 0x18DDFB8702372BC8CD6BCA3520ED02791D DUP1 0x2F SUB PUSH21 0x9430A0A164736F6C63430008150033000000000000 ",
							"sourceMap": "198:299:0:-:0;;;238:45;;;;;;;;;;1381:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;198:299:0;;7:99:16;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;198:299:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1062": {
									"entryPoint": 2823,
									"id": 1062,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_baseURI_426": {
									"entryPoint": 4206,
									"id": 426,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_checkAuthorized_681": {
									"entryPoint": 5651,
									"id": 681,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1184": {
									"entryPoint": 3772,
									"id": 1184,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_608": {
									"entryPoint": 2759,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_644": {
									"entryPoint": 6183,
									"id": 644,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_mint_829": {
									"entryPoint": 4329,
									"id": 829,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1545": {
									"entryPoint": 2816,
									"id": 1545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_595": {
									"entryPoint": 3354,
									"id": 595,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_1120": {
									"entryPoint": 2636,
									"id": 1120,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1099": {
									"entryPoint": 3411,
									"id": 1099,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_setTokenURI_1456": {
									"entryPoint": 4572,
									"id": 1456,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_1504": {
									"entryPoint": 3206,
									"id": 1504,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_update_779": {
									"entryPoint": 4887,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_442": {
									"entryPoint": 1058,
									"id": 442,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_334": {
									"entryPoint": 1501,
									"id": 334,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_459": {
									"entryPoint": 1032,
									"id": 459,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_492": {
									"entryPoint": 2269,
									"id": 492,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@log10_2720": {
									"entryPoint": 5846,
									"id": 2720,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mint_35": {
									"entryPoint": 2150,
									"id": 35,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@name_372": {
									"entryPoint": 889,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nextTokenId_14": {
									"entryPoint": 1683,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@ownerOf_363": {
									"entryPoint": 1367,
									"id": 363,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_556": {
									"entryPoint": 1336,
									"id": 556,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_582": {
									"entryPoint": 1855,
									"id": 582,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_475": {
									"entryPoint": 1833,
									"id": 475,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1366": {
									"entryPoint": 793,
									"id": 1366,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1833": {
									"entryPoint": 4782,
									"id": 1833,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_306": {
									"entryPoint": 2411,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_381": {
									"entryPoint": 1689,
									"id": 381,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1623": {
									"entryPoint": 5449,
									"id": 1623,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_1423": {
									"entryPoint": 1884,
									"id": 1423,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_417": {
									"entryPoint": 4228,
									"id": 417,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_538": {
									"entryPoint": 1081,
									"id": 538,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 6545,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 7818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 7996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_string_calldata_ptr": {
									"entryPoint": 7903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7053,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8214,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8262,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8495,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9297,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8151,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6463,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 8413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6659,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 8204,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 8908,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 6954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 6480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 8874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 8767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9045,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7558,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6685,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 8103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8342,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 8990,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8297,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7390,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 8800,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7810,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7382,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7814,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7386,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 6476,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6472,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6725,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 8665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 8850,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 8677,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7011,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 6523,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6838,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:21013:16",
										"nodeType": "YulBlock",
										"src": "0:21013:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "378:105:16",
													"nodeType": "YulBlock",
													"src": "378:105:16",
													"statements": [
														{
															"nativeSrc": "388:89:16",
															"nodeType": "YulAssignment",
															"src": "388:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:16",
																		"nodeType": "YulLiteral",
																		"src": "410:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:16"
																},
																"nativeSrc": "399:78:16",
																"nodeType": "YulFunctionCall",
																"src": "399:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:16",
														"nodeType": "YulTypedName",
														"src": "360:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:16",
														"nodeType": "YulTypedName",
														"src": "370:7:16",
														"type": ""
													}
												],
												"src": "334:149:16"
											},
											{
												"body": {
													"nativeSrc": "531:78:16",
													"nodeType": "YulBlock",
													"src": "531:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:16",
																"nodeType": "YulBlock",
																"src": "587:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:16",
																					"nodeType": "YulLiteral",
																					"src": "596:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:16",
																					"nodeType": "YulLiteral",
																					"src": "599:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:16"
																			},
																			"nativeSrc": "589:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:16"
																		},
																		"nativeSrc": "589:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:16"
																				},
																				"nativeSrc": "561:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:16"
																		},
																		"nativeSrc": "551:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:16"
																},
																"nativeSrc": "544:42:16",
																"nodeType": "YulFunctionCall",
																"src": "544:42:16"
															},
															"nativeSrc": "541:62:16",
															"nodeType": "YulIf",
															"src": "541:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:16",
														"nodeType": "YulTypedName",
														"src": "524:5:16",
														"type": ""
													}
												],
												"src": "489:120:16"
											},
											{
												"body": {
													"nativeSrc": "666:86:16",
													"nodeType": "YulBlock",
													"src": "666:86:16",
													"statements": [
														{
															"nativeSrc": "676:29:16",
															"nodeType": "YulAssignment",
															"src": "676:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:16"
																},
																"nativeSrc": "685:20:16",
																"nodeType": "YulFunctionCall",
																"src": "685:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:16"
																},
																"nativeSrc": "714:32:16",
																"nodeType": "YulFunctionCall",
																"src": "714:32:16"
															},
															"nativeSrc": "714:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:16",
														"nodeType": "YulTypedName",
														"src": "644:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:16",
														"nodeType": "YulTypedName",
														"src": "652:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:16",
														"nodeType": "YulTypedName",
														"src": "660:5:16",
														"type": ""
													}
												],
												"src": "615:137:16"
											},
											{
												"body": {
													"nativeSrc": "823:262:16",
													"nodeType": "YulBlock",
													"src": "823:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:16",
																"nodeType": "YulBlock",
																"src": "869:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:16"
																			},
																			"nativeSrc": "871:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:16"
																		},
																		"nativeSrc": "871:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:16"
																		},
																		"nativeSrc": "840:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:16",
																		"nodeType": "YulLiteral",
																		"src": "865:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:16"
																},
																"nativeSrc": "836:32:16",
																"nodeType": "YulFunctionCall",
																"src": "836:32:16"
															},
															"nativeSrc": "833:119:16",
															"nodeType": "YulIf",
															"src": "833:119:16"
														},
														{
															"nativeSrc": "962:116:16",
															"nodeType": "YulBlock",
															"src": "962:116:16",
															"statements": [
																{
																	"nativeSrc": "977:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:16",
																		"nodeType": "YulLiteral",
																		"src": "991:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:16",
																			"nodeType": "YulTypedName",
																			"src": "981:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:16",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:16"
																				},
																				"nativeSrc": "1036:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:16"
																		},
																		"nativeSrc": "1016:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:16",
														"nodeType": "YulTypedName",
														"src": "793:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:16",
														"nodeType": "YulTypedName",
														"src": "804:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:16",
														"nodeType": "YulTypedName",
														"src": "816:6:16",
														"type": ""
													}
												],
												"src": "758:327:16"
											},
											{
												"body": {
													"nativeSrc": "1133:48:16",
													"nodeType": "YulBlock",
													"src": "1133:48:16",
													"statements": [
														{
															"nativeSrc": "1143:32:16",
															"nodeType": "YulAssignment",
															"src": "1143:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:16"
																		},
																		"nativeSrc": "1161:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:16"
																},
																"nativeSrc": "1154:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:16",
														"nodeType": "YulTypedName",
														"src": "1115:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:16",
														"nodeType": "YulTypedName",
														"src": "1125:7:16",
														"type": ""
													}
												],
												"src": "1091:90:16"
											},
											{
												"body": {
													"nativeSrc": "1246:50:16",
													"nodeType": "YulBlock",
													"src": "1246:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:16"
																		},
																		"nativeSrc": "1268:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:16"
																},
																"nativeSrc": "1256:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:16"
															},
															"nativeSrc": "1256:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:16",
														"nodeType": "YulTypedName",
														"src": "1234:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:16",
														"nodeType": "YulTypedName",
														"src": "1241:3:16",
														"type": ""
													}
												],
												"src": "1187:109:16"
											},
											{
												"body": {
													"nativeSrc": "1394:118:16",
													"nodeType": "YulBlock",
													"src": "1394:118:16",
													"statements": [
														{
															"nativeSrc": "1404:26:16",
															"nodeType": "YulAssignment",
															"src": "1404:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:16"
																},
																"nativeSrc": "1412:18:16",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:16",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:16"
																		},
																		"nativeSrc": "1487:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:16"
																},
																"nativeSrc": "1440:65:16",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:16"
															},
															"nativeSrc": "1440:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:16",
														"nodeType": "YulTypedName",
														"src": "1366:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:16",
														"nodeType": "YulTypedName",
														"src": "1378:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:16",
														"nodeType": "YulTypedName",
														"src": "1389:4:16",
														"type": ""
													}
												],
												"src": "1302:210:16"
											},
											{
												"body": {
													"nativeSrc": "1577:40:16",
													"nodeType": "YulBlock",
													"src": "1577:40:16",
													"statements": [
														{
															"nativeSrc": "1588:22:16",
															"nodeType": "YulAssignment",
															"src": "1588:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:16"
																},
																"nativeSrc": "1598:12:16",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:16",
														"nodeType": "YulTypedName",
														"src": "1560:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:16",
														"nodeType": "YulTypedName",
														"src": "1570:6:16",
														"type": ""
													}
												],
												"src": "1518:99:16"
											},
											{
												"body": {
													"nativeSrc": "1719:73:16",
													"nodeType": "YulBlock",
													"src": "1719:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:16"
																},
																"nativeSrc": "1729:19:16",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:16"
															},
															"nativeSrc": "1729:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:16"
														},
														{
															"nativeSrc": "1757:29:16",
															"nodeType": "YulAssignment",
															"src": "1757:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:16"
																},
																"nativeSrc": "1772:14:16",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:16",
														"nodeType": "YulTypedName",
														"src": "1691:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:16",
														"nodeType": "YulTypedName",
														"src": "1696:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:16",
														"nodeType": "YulTypedName",
														"src": "1707:11:16",
														"type": ""
													}
												],
												"src": "1623:169:16"
											},
											{
												"body": {
													"nativeSrc": "1860:184:16",
													"nodeType": "YulBlock",
													"src": "1860:184:16",
													"statements": [
														{
															"nativeSrc": "1870:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1879:1:16",
																"nodeType": "YulLiteral",
																"src": "1879:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1874:1:16",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1939:63:16",
																"nodeType": "YulBlock",
																"src": "1939:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1964:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1969:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1960:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:16"
																					},
																					"nativeSrc": "1960:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1983:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1988:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1979:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:16"
																							},
																							"nativeSrc": "1979:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1973:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:16"
																					},
																					"nativeSrc": "1973:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1953:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:16"
																			},
																			"nativeSrc": "1953:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:16"
																		},
																		"nativeSrc": "1953:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1900:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1903:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1897:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:16"
																},
																"nativeSrc": "1897:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1897:13:16"
															},
															"nativeSrc": "1889:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1911:19:16",
																"nodeType": "YulBlock",
																"src": "1911:19:16",
																"statements": [
																	{
																		"nativeSrc": "1913:15:16",
																		"nodeType": "YulAssignment",
																		"src": "1913:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1922:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1925:2:16",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1918:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:16"
																			},
																			"nativeSrc": "1918:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1913:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1893:3:16",
																"nodeType": "YulBlock",
																"src": "1893:3:16",
																"statements": []
															},
															"src": "1889:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2022:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2027:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2018:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:16"
																		},
																		"nativeSrc": "2018:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2036:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2011:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:16"
																},
																"nativeSrc": "2011:27:16",
																"nodeType": "YulFunctionCall",
																"src": "2011:27:16"
															},
															"nativeSrc": "2011:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:16",
														"nodeType": "YulTypedName",
														"src": "1842:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:16",
														"nodeType": "YulTypedName",
														"src": "1847:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:16",
														"nodeType": "YulTypedName",
														"src": "1852:6:16",
														"type": ""
													}
												],
												"src": "1798:246:16"
											},
											{
												"body": {
													"nativeSrc": "2098:54:16",
													"nodeType": "YulBlock",
													"src": "2098:54:16",
													"statements": [
														{
															"nativeSrc": "2108:38:16",
															"nodeType": "YulAssignment",
															"src": "2108:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2126:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2133:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2122:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:16"
																		},
																		"nativeSrc": "2122:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2142:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2138:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:16"
																		},
																		"nativeSrc": "2138:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2118:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:16"
																},
																"nativeSrc": "2118:28:16",
																"nodeType": "YulFunctionCall",
																"src": "2118:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2108:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2050:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2081:5:16",
														"nodeType": "YulTypedName",
														"src": "2081:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2091:6:16",
														"nodeType": "YulTypedName",
														"src": "2091:6:16",
														"type": ""
													}
												],
												"src": "2050:102:16"
											},
											{
												"body": {
													"nativeSrc": "2250:285:16",
													"nodeType": "YulBlock",
													"src": "2250:285:16",
													"statements": [
														{
															"nativeSrc": "2260:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2274:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:16"
																},
																"nativeSrc": "2274:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2274:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2264:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2322:78:16",
															"nodeType": "YulAssignment",
															"src": "2322:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2388:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2393:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2329:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:16"
																},
																"nativeSrc": "2329:71:16",
																"nodeType": "YulFunctionCall",
																"src": "2329:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2322:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2448:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2455:4:16",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2444:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:16"
																		},
																		"nativeSrc": "2444:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2462:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2467:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2409:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:16"
																},
																"nativeSrc": "2409:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2409:65:16"
															},
															"nativeSrc": "2409:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:16"
														},
														{
															"nativeSrc": "2483:46:16",
															"nodeType": "YulAssignment",
															"src": "2483:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2494:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2521:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2499:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:16"
																		},
																		"nativeSrc": "2499:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2490:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:16"
																},
																"nativeSrc": "2490:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2490:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2483:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2158:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2231:5:16",
														"nodeType": "YulTypedName",
														"src": "2231:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2238:3:16",
														"nodeType": "YulTypedName",
														"src": "2238:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2246:3:16",
														"nodeType": "YulTypedName",
														"src": "2246:3:16",
														"type": ""
													}
												],
												"src": "2158:377:16"
											},
											{
												"body": {
													"nativeSrc": "2659:195:16",
													"nodeType": "YulBlock",
													"src": "2659:195:16",
													"statements": [
														{
															"nativeSrc": "2669:26:16",
															"nodeType": "YulAssignment",
															"src": "2669:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2681:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2677:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:16"
																},
																"nativeSrc": "2677:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2677:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2669:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2716:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2727:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2712:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:16"
																		},
																		"nativeSrc": "2712:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2735:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2741:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2731:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:16"
																		},
																		"nativeSrc": "2731:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2705:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:16"
																},
																"nativeSrc": "2705:47:16",
																"nodeType": "YulFunctionCall",
																"src": "2705:47:16"
															},
															"nativeSrc": "2705:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:16"
														},
														{
															"nativeSrc": "2761:86:16",
															"nodeType": "YulAssignment",
															"src": "2761:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2833:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2842:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2769:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:16"
																},
																"nativeSrc": "2769:78:16",
																"nodeType": "YulFunctionCall",
																"src": "2769:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2761:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2541:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2631:9:16",
														"nodeType": "YulTypedName",
														"src": "2631:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2643:6:16",
														"nodeType": "YulTypedName",
														"src": "2643:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2654:4:16",
														"nodeType": "YulTypedName",
														"src": "2654:4:16",
														"type": ""
													}
												],
												"src": "2541:313:16"
											},
											{
												"body": {
													"nativeSrc": "2905:32:16",
													"nodeType": "YulBlock",
													"src": "2905:32:16",
													"statements": [
														{
															"nativeSrc": "2915:16:16",
															"nodeType": "YulAssignment",
															"src": "2915:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "2926:5:16",
																"nodeType": "YulIdentifier",
																"src": "2926:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2915:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2860:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2887:5:16",
														"nodeType": "YulTypedName",
														"src": "2887:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2897:7:16",
														"nodeType": "YulTypedName",
														"src": "2897:7:16",
														"type": ""
													}
												],
												"src": "2860:77:16"
											},
											{
												"body": {
													"nativeSrc": "2986:79:16",
													"nodeType": "YulBlock",
													"src": "2986:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3043:16:16",
																"nodeType": "YulBlock",
																"src": "3043:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3052:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3055:1:16",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3045:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:16"
																			},
																			"nativeSrc": "3045:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:16"
																		},
																		"nativeSrc": "3045:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3009:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3034:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3016:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:16"
																				},
																				"nativeSrc": "3016:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3006:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:16"
																		},
																		"nativeSrc": "3006:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2999:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:16"
																},
																"nativeSrc": "2999:43:16",
																"nodeType": "YulFunctionCall",
																"src": "2999:43:16"
															},
															"nativeSrc": "2996:63:16",
															"nodeType": "YulIf",
															"src": "2996:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2943:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2979:5:16",
														"nodeType": "YulTypedName",
														"src": "2979:5:16",
														"type": ""
													}
												],
												"src": "2943:122:16"
											},
											{
												"body": {
													"nativeSrc": "3123:87:16",
													"nodeType": "YulBlock",
													"src": "3123:87:16",
													"statements": [
														{
															"nativeSrc": "3133:29:16",
															"nodeType": "YulAssignment",
															"src": "3133:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3155:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3142:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:16"
																},
																"nativeSrc": "3142:20:16",
																"nodeType": "YulFunctionCall",
																"src": "3142:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3133:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3198:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3171:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:16"
																},
																"nativeSrc": "3171:33:16",
																"nodeType": "YulFunctionCall",
																"src": "3171:33:16"
															},
															"nativeSrc": "3171:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "3071:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3101:6:16",
														"nodeType": "YulTypedName",
														"src": "3101:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3109:3:16",
														"nodeType": "YulTypedName",
														"src": "3109:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3117:5:16",
														"nodeType": "YulTypedName",
														"src": "3117:5:16",
														"type": ""
													}
												],
												"src": "3071:139:16"
											},
											{
												"body": {
													"nativeSrc": "3282:263:16",
													"nodeType": "YulBlock",
													"src": "3282:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "3328:83:16",
																"nodeType": "YulBlock",
																"src": "3328:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3330:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:16"
																			},
																			"nativeSrc": "3330:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:16"
																		},
																		"nativeSrc": "3330:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3303:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3299:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:16"
																		},
																		"nativeSrc": "3299:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3324:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3295:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:16"
																},
																"nativeSrc": "3295:32:16",
																"nodeType": "YulFunctionCall",
																"src": "3295:32:16"
															},
															"nativeSrc": "3292:119:16",
															"nodeType": "YulIf",
															"src": "3292:119:16"
														},
														{
															"nativeSrc": "3421:117:16",
															"nodeType": "YulBlock",
															"src": "3421:117:16",
															"statements": [
																{
																	"nativeSrc": "3436:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3450:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3440:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3465:63:16",
																	"nodeType": "YulAssignment",
																	"src": "3465:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3500:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3511:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:16"
																				},
																				"nativeSrc": "3496:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3520:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3475:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:16"
																		},
																		"nativeSrc": "3475:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3465:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3216:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3252:9:16",
														"nodeType": "YulTypedName",
														"src": "3252:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3263:7:16",
														"nodeType": "YulTypedName",
														"src": "3263:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3275:6:16",
														"nodeType": "YulTypedName",
														"src": "3275:6:16",
														"type": ""
													}
												],
												"src": "3216:329:16"
											},
											{
												"body": {
													"nativeSrc": "3596:81:16",
													"nodeType": "YulBlock",
													"src": "3596:81:16",
													"statements": [
														{
															"nativeSrc": "3606:65:16",
															"nodeType": "YulAssignment",
															"src": "3606:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:16",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:16"
																},
																"nativeSrc": "3617:54:16",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:16",
														"nodeType": "YulTypedName",
														"src": "3578:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:16",
														"nodeType": "YulTypedName",
														"src": "3588:7:16",
														"type": ""
													}
												],
												"src": "3551:126:16"
											},
											{
												"body": {
													"nativeSrc": "3728:51:16",
													"nodeType": "YulBlock",
													"src": "3728:51:16",
													"statements": [
														{
															"nativeSrc": "3738:35:16",
															"nodeType": "YulAssignment",
															"src": "3738:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:16"
																},
																"nativeSrc": "3749:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:16",
														"nodeType": "YulTypedName",
														"src": "3710:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:16",
														"nodeType": "YulTypedName",
														"src": "3720:7:16",
														"type": ""
													}
												],
												"src": "3683:96:16"
											},
											{
												"body": {
													"nativeSrc": "3850:53:16",
													"nodeType": "YulBlock",
													"src": "3850:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:16"
																		},
																		"nativeSrc": "3872:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:16"
																},
																"nativeSrc": "3860:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:16"
															},
															"nativeSrc": "3860:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:16",
														"nodeType": "YulTypedName",
														"src": "3838:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:16",
														"nodeType": "YulTypedName",
														"src": "3845:3:16",
														"type": ""
													}
												],
												"src": "3785:118:16"
											},
											{
												"body": {
													"nativeSrc": "4007:124:16",
													"nodeType": "YulBlock",
													"src": "4007:124:16",
													"statements": [
														{
															"nativeSrc": "4017:26:16",
															"nodeType": "YulAssignment",
															"src": "4017:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:16"
																},
																"nativeSrc": "4025:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:16"
																		},
																		"nativeSrc": "4106:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:16"
																},
																"nativeSrc": "4053:71:16",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:16"
															},
															"nativeSrc": "4053:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:16",
														"nodeType": "YulTypedName",
														"src": "3979:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:16",
														"nodeType": "YulTypedName",
														"src": "3991:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:16",
														"nodeType": "YulTypedName",
														"src": "4002:4:16",
														"type": ""
													}
												],
												"src": "3909:222:16"
											},
											{
												"body": {
													"nativeSrc": "4180:79:16",
													"nodeType": "YulBlock",
													"src": "4180:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:16",
																"nodeType": "YulBlock",
																"src": "4237:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:16"
																			},
																			"nativeSrc": "4239:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:16"
																		},
																		"nativeSrc": "4239:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:16"
																				},
																				"nativeSrc": "4210:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:16"
																		},
																		"nativeSrc": "4200:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:16"
																},
																"nativeSrc": "4193:43:16",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:16"
															},
															"nativeSrc": "4190:63:16",
															"nodeType": "YulIf",
															"src": "4190:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:16",
														"nodeType": "YulTypedName",
														"src": "4173:5:16",
														"type": ""
													}
												],
												"src": "4137:122:16"
											},
											{
												"body": {
													"nativeSrc": "4317:87:16",
													"nodeType": "YulBlock",
													"src": "4317:87:16",
													"statements": [
														{
															"nativeSrc": "4327:29:16",
															"nodeType": "YulAssignment",
															"src": "4327:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:16"
																},
																"nativeSrc": "4336:20:16",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:16"
																},
																"nativeSrc": "4365:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:16"
															},
															"nativeSrc": "4365:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:16",
														"nodeType": "YulTypedName",
														"src": "4295:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:16",
														"nodeType": "YulTypedName",
														"src": "4303:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:16",
														"nodeType": "YulTypedName",
														"src": "4311:5:16",
														"type": ""
													}
												],
												"src": "4265:139:16"
											},
											{
												"body": {
													"nativeSrc": "4493:391:16",
													"nodeType": "YulBlock",
													"src": "4493:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:16",
																"nodeType": "YulBlock",
																"src": "4539:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:16"
																			},
																			"nativeSrc": "4541:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:16"
																		},
																		"nativeSrc": "4541:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:16"
																		},
																		"nativeSrc": "4510:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:16"
																},
																"nativeSrc": "4506:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:16"
															},
															"nativeSrc": "4503:119:16",
															"nodeType": "YulIf",
															"src": "4503:119:16"
														},
														{
															"nativeSrc": "4632:117:16",
															"nodeType": "YulBlock",
															"src": "4632:117:16",
															"statements": [
																{
																	"nativeSrc": "4647:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:16"
																				},
																				"nativeSrc": "4707:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:16"
																		},
																		"nativeSrc": "4686:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:16",
															"nodeType": "YulBlock",
															"src": "4759:118:16",
															"statements": [
																{
																	"nativeSrc": "4774:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:16"
																				},
																				"nativeSrc": "4835:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:16"
																		},
																		"nativeSrc": "4814:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:16",
														"nodeType": "YulTypedName",
														"src": "4455:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:16",
														"nodeType": "YulTypedName",
														"src": "4466:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:16",
														"nodeType": "YulTypedName",
														"src": "4478:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:16",
														"nodeType": "YulTypedName",
														"src": "4486:6:16",
														"type": ""
													}
												],
												"src": "4410:474:16"
											},
											{
												"body": {
													"nativeSrc": "4990:519:16",
													"nodeType": "YulBlock",
													"src": "4990:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5036:83:16",
																"nodeType": "YulBlock",
																"src": "5036:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5038:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:16"
																			},
																			"nativeSrc": "5038:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:16"
																		},
																		"nativeSrc": "5038:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5011:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5020:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5007:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:16"
																		},
																		"nativeSrc": "5007:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5032:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5003:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:16"
																},
																"nativeSrc": "5003:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5003:32:16"
															},
															"nativeSrc": "5000:119:16",
															"nodeType": "YulIf",
															"src": "5000:119:16"
														},
														{
															"nativeSrc": "5129:117:16",
															"nodeType": "YulBlock",
															"src": "5129:117:16",
															"statements": [
																{
																	"nativeSrc": "5144:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5158:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5148:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5173:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5173:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5208:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5219:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5204:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:16"
																				},
																				"nativeSrc": "5204:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5228:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5183:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:16"
																		},
																		"nativeSrc": "5183:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5173:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5256:118:16",
															"nodeType": "YulBlock",
															"src": "5256:118:16",
															"statements": [
																{
																	"nativeSrc": "5271:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5285:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5275:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5301:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5301:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5336:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5347:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5332:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:16"
																				},
																				"nativeSrc": "5332:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5356:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5311:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:16"
																		},
																		"nativeSrc": "5311:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5301:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5384:118:16",
															"nodeType": "YulBlock",
															"src": "5384:118:16",
															"statements": [
																{
																	"nativeSrc": "5399:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5413:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5403:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5429:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5429:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5464:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5475:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5460:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:16"
																				},
																				"nativeSrc": "5460:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5484:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5439:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:16"
																		},
																		"nativeSrc": "5439:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5429:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4890:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4944:9:16",
														"nodeType": "YulTypedName",
														"src": "4944:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4955:7:16",
														"nodeType": "YulTypedName",
														"src": "4955:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4967:6:16",
														"nodeType": "YulTypedName",
														"src": "4967:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4975:6:16",
														"nodeType": "YulTypedName",
														"src": "4975:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4983:6:16",
														"nodeType": "YulTypedName",
														"src": "4983:6:16",
														"type": ""
													}
												],
												"src": "4890:619:16"
											},
											{
												"body": {
													"nativeSrc": "5581:263:16",
													"nodeType": "YulBlock",
													"src": "5581:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5627:83:16",
																"nodeType": "YulBlock",
																"src": "5627:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5629:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:16"
																			},
																			"nativeSrc": "5629:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:16"
																		},
																		"nativeSrc": "5629:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5602:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5611:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5598:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:16"
																		},
																		"nativeSrc": "5598:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5623:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5594:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:16"
																},
																"nativeSrc": "5594:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5594:32:16"
															},
															"nativeSrc": "5591:119:16",
															"nodeType": "YulIf",
															"src": "5591:119:16"
														},
														{
															"nativeSrc": "5720:117:16",
															"nodeType": "YulBlock",
															"src": "5720:117:16",
															"statements": [
																{
																	"nativeSrc": "5735:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5749:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5739:6:16",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5764:63:16",
																	"nodeType": "YulAssignment",
																	"src": "5764:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5799:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5810:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5795:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:16"
																				},
																				"nativeSrc": "5795:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5819:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5774:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:16"
																		},
																		"nativeSrc": "5774:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5764:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5515:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5551:9:16",
														"nodeType": "YulTypedName",
														"src": "5551:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5562:7:16",
														"nodeType": "YulTypedName",
														"src": "5562:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5574:6:16",
														"nodeType": "YulTypedName",
														"src": "5574:6:16",
														"type": ""
													}
												],
												"src": "5515:329:16"
											},
											{
												"body": {
													"nativeSrc": "5915:53:16",
													"nodeType": "YulBlock",
													"src": "5915:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5932:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5955:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5937:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:16"
																		},
																		"nativeSrc": "5937:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5925:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:16"
																},
																"nativeSrc": "5925:37:16",
																"nodeType": "YulFunctionCall",
																"src": "5925:37:16"
															},
															"nativeSrc": "5925:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5850:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5903:5:16",
														"nodeType": "YulTypedName",
														"src": "5903:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5910:3:16",
														"nodeType": "YulTypedName",
														"src": "5910:3:16",
														"type": ""
													}
												],
												"src": "5850:118:16"
											},
											{
												"body": {
													"nativeSrc": "6072:124:16",
													"nodeType": "YulBlock",
													"src": "6072:124:16",
													"statements": [
														{
															"nativeSrc": "6082:26:16",
															"nodeType": "YulAssignment",
															"src": "6082:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6094:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6105:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6090:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:16"
																},
																"nativeSrc": "6090:18:16",
																"nodeType": "YulFunctionCall",
																"src": "6090:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6082:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6162:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6175:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6186:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6171:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:16"
																		},
																		"nativeSrc": "6171:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6118:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:16"
																},
																"nativeSrc": "6118:71:16",
																"nodeType": "YulFunctionCall",
																"src": "6118:71:16"
															},
															"nativeSrc": "6118:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5974:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6044:9:16",
														"nodeType": "YulTypedName",
														"src": "6044:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6056:6:16",
														"nodeType": "YulTypedName",
														"src": "6056:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6067:4:16",
														"nodeType": "YulTypedName",
														"src": "6067:4:16",
														"type": ""
													}
												],
												"src": "5974:222:16"
											},
											{
												"body": {
													"nativeSrc": "6242:76:16",
													"nodeType": "YulBlock",
													"src": "6242:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6296:16:16",
																"nodeType": "YulBlock",
																"src": "6296:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6305:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6308:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6298:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:16"
																			},
																			"nativeSrc": "6298:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:16"
																		},
																		"nativeSrc": "6298:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6265:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6287:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6272:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:16"
																				},
																				"nativeSrc": "6272:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6262:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:16"
																		},
																		"nativeSrc": "6262:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6255:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:16"
																},
																"nativeSrc": "6255:40:16",
																"nodeType": "YulFunctionCall",
																"src": "6255:40:16"
															},
															"nativeSrc": "6252:60:16",
															"nodeType": "YulIf",
															"src": "6252:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6202:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6235:5:16",
														"nodeType": "YulTypedName",
														"src": "6235:5:16",
														"type": ""
													}
												],
												"src": "6202:116:16"
											},
											{
												"body": {
													"nativeSrc": "6373:84:16",
													"nodeType": "YulBlock",
													"src": "6373:84:16",
													"statements": [
														{
															"nativeSrc": "6383:29:16",
															"nodeType": "YulAssignment",
															"src": "6383:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6405:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6392:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:16"
																},
																"nativeSrc": "6392:20:16",
																"nodeType": "YulFunctionCall",
																"src": "6392:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6383:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6445:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6421:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:16"
																},
																"nativeSrc": "6421:30:16",
																"nodeType": "YulFunctionCall",
																"src": "6421:30:16"
															},
															"nativeSrc": "6421:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6324:133:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6351:6:16",
														"nodeType": "YulTypedName",
														"src": "6351:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6359:3:16",
														"nodeType": "YulTypedName",
														"src": "6359:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6367:5:16",
														"nodeType": "YulTypedName",
														"src": "6367:5:16",
														"type": ""
													}
												],
												"src": "6324:133:16"
											},
											{
												"body": {
													"nativeSrc": "6543:388:16",
													"nodeType": "YulBlock",
													"src": "6543:388:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6589:83:16",
																"nodeType": "YulBlock",
																"src": "6589:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6591:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:16"
																			},
																			"nativeSrc": "6591:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:16"
																		},
																		"nativeSrc": "6591:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6564:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6560:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:16"
																		},
																		"nativeSrc": "6560:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6585:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6556:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:16"
																},
																"nativeSrc": "6556:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6556:32:16"
															},
															"nativeSrc": "6553:119:16",
															"nodeType": "YulIf",
															"src": "6553:119:16"
														},
														{
															"nativeSrc": "6682:117:16",
															"nodeType": "YulBlock",
															"src": "6682:117:16",
															"statements": [
																{
																	"nativeSrc": "6697:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6711:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6701:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6726:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6726:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6761:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6772:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6757:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:16"
																				},
																				"nativeSrc": "6757:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6781:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6736:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:16"
																		},
																		"nativeSrc": "6736:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6726:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6809:115:16",
															"nodeType": "YulBlock",
															"src": "6809:115:16",
															"statements": [
																{
																	"nativeSrc": "6824:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6838:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6828:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:60:16",
																	"nodeType": "YulAssignment",
																	"src": "6854:60:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6886:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6897:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6882:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:16"
																				},
																				"nativeSrc": "6882:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6906:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6864:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:16"
																		},
																		"nativeSrc": "6864:50:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6854:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6463:468:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6505:9:16",
														"nodeType": "YulTypedName",
														"src": "6505:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6516:7:16",
														"nodeType": "YulTypedName",
														"src": "6516:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6528:6:16",
														"nodeType": "YulTypedName",
														"src": "6528:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6536:6:16",
														"nodeType": "YulTypedName",
														"src": "6536:6:16",
														"type": ""
													}
												],
												"src": "6463:468:16"
											},
											{
												"body": {
													"nativeSrc": "7026:28:16",
													"nodeType": "YulBlock",
													"src": "7026:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7043:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7046:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7036:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:16"
																},
																"nativeSrc": "7036:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7036:12:16"
															},
															"nativeSrc": "7036:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6937:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:16"
											},
											{
												"body": {
													"nativeSrc": "7149:28:16",
													"nodeType": "YulBlock",
													"src": "7149:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7166:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7169:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7159:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:16"
																},
																"nativeSrc": "7159:12:16",
																"nodeType": "YulFunctionCall",
																"src": "7159:12:16"
															},
															"nativeSrc": "7159:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "7060:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:16"
											},
											{
												"body": {
													"nativeSrc": "7211:152:16",
													"nodeType": "YulBlock",
													"src": "7211:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7228:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7231:77:16",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7221:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:16"
																},
																"nativeSrc": "7221:88:16",
																"nodeType": "YulFunctionCall",
																"src": "7221:88:16"
															},
															"nativeSrc": "7221:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7325:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7328:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7318:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:16"
																},
																"nativeSrc": "7318:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7318:15:16"
															},
															"nativeSrc": "7318:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7349:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7352:4:16",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7342:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:16"
																},
																"nativeSrc": "7342:15:16",
																"nodeType": "YulFunctionCall",
																"src": "7342:15:16"
															},
															"nativeSrc": "7342:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7183:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:16"
											},
											{
												"body": {
													"nativeSrc": "7412:238:16",
													"nodeType": "YulBlock",
													"src": "7412:238:16",
													"statements": [
														{
															"nativeSrc": "7422:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7444:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7474:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7452:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:16"
																		},
																		"nativeSrc": "7452:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7440:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:16"
																},
																"nativeSrc": "7440:40:16",
																"nodeType": "YulFunctionCall",
																"src": "7440:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7426:10:16",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7591:22:16",
																"nodeType": "YulBlock",
																"src": "7591:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7593:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:16"
																			},
																			"nativeSrc": "7593:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:16"
																		},
																		"nativeSrc": "7593:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7534:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7546:18:16",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7531:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:16"
																		},
																		"nativeSrc": "7531:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7570:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7582:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7567:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:16"
																		},
																		"nativeSrc": "7567:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7528:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:16"
																},
																"nativeSrc": "7528:62:16",
																"nodeType": "YulFunctionCall",
																"src": "7528:62:16"
															},
															"nativeSrc": "7525:88:16",
															"nodeType": "YulIf",
															"src": "7525:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7629:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7633:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7622:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:16"
																},
																"nativeSrc": "7622:22:16",
																"nodeType": "YulFunctionCall",
																"src": "7622:22:16"
															},
															"nativeSrc": "7622:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7369:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7398:6:16",
														"nodeType": "YulTypedName",
														"src": "7398:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7406:4:16",
														"nodeType": "YulTypedName",
														"src": "7406:4:16",
														"type": ""
													}
												],
												"src": "7369:281:16"
											},
											{
												"body": {
													"nativeSrc": "7697:88:16",
													"nodeType": "YulBlock",
													"src": "7697:88:16",
													"statements": [
														{
															"nativeSrc": "7707:30:16",
															"nodeType": "YulAssignment",
															"src": "7707:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7717:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:16"
																},
																"nativeSrc": "7717:20:16",
																"nodeType": "YulFunctionCall",
																"src": "7717:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7707:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7766:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7774:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7746:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:16"
																},
																"nativeSrc": "7746:33:16",
																"nodeType": "YulFunctionCall",
																"src": "7746:33:16"
															},
															"nativeSrc": "7746:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7656:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7681:4:16",
														"nodeType": "YulTypedName",
														"src": "7681:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7690:6:16",
														"nodeType": "YulTypedName",
														"src": "7690:6:16",
														"type": ""
													}
												],
												"src": "7656:129:16"
											},
											{
												"body": {
													"nativeSrc": "7857:241:16",
													"nodeType": "YulBlock",
													"src": "7857:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7962:22:16",
																"nodeType": "YulBlock",
																"src": "7962:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7964:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:16"
																			},
																			"nativeSrc": "7964:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:16"
																		},
																		"nativeSrc": "7964:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7934:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7942:18:16",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7931:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:16"
																},
																"nativeSrc": "7931:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7931:30:16"
															},
															"nativeSrc": "7928:56:16",
															"nodeType": "YulIf",
															"src": "7928:56:16"
														},
														{
															"nativeSrc": "7994:37:16",
															"nodeType": "YulAssignment",
															"src": "7994:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8024:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8002:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:16"
																},
																"nativeSrc": "8002:29:16",
																"nodeType": "YulFunctionCall",
																"src": "8002:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7994:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:16"
																}
															]
														},
														{
															"nativeSrc": "8068:23:16",
															"nodeType": "YulAssignment",
															"src": "8068:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8080:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8086:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8076:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:16"
																},
																"nativeSrc": "8076:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8076:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8068:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7791:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7841:6:16",
														"nodeType": "YulTypedName",
														"src": "7841:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7852:4:16",
														"nodeType": "YulTypedName",
														"src": "7852:4:16",
														"type": ""
													}
												],
												"src": "7791:307:16"
											},
											{
												"body": {
													"nativeSrc": "8168:82:16",
													"nodeType": "YulBlock",
													"src": "8168:82:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8191:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8196:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8201:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8178:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:16"
																},
																"nativeSrc": "8178:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8178:30:16"
															},
															"nativeSrc": "8178:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8228:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8233:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8224:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:16"
																		},
																		"nativeSrc": "8224:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8242:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8217:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:16"
																},
																"nativeSrc": "8217:27:16",
																"nodeType": "YulFunctionCall",
																"src": "8217:27:16"
															},
															"nativeSrc": "8217:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8104:146:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8150:3:16",
														"nodeType": "YulTypedName",
														"src": "8150:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8155:3:16",
														"nodeType": "YulTypedName",
														"src": "8155:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8160:6:16",
														"nodeType": "YulTypedName",
														"src": "8160:6:16",
														"type": ""
													}
												],
												"src": "8104:146:16"
											},
											{
												"body": {
													"nativeSrc": "8339:340:16",
													"nodeType": "YulBlock",
													"src": "8339:340:16",
													"statements": [
														{
															"nativeSrc": "8349:74:16",
															"nodeType": "YulAssignment",
															"src": "8349:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8415:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8374:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:16"
																		},
																		"nativeSrc": "8374:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8358:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:16"
																},
																"nativeSrc": "8358:65:16",
																"nodeType": "YulFunctionCall",
																"src": "8358:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8349:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8439:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8446:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8432:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:16"
																},
																"nativeSrc": "8432:21:16",
																"nodeType": "YulFunctionCall",
																"src": "8432:21:16"
															},
															"nativeSrc": "8432:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:16"
														},
														{
															"nativeSrc": "8462:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8477:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8484:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8473:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:16"
																},
																"nativeSrc": "8473:16:16",
																"nodeType": "YulFunctionCall",
																"src": "8473:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8466:3:16",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8527:83:16",
																"nodeType": "YulBlock",
																"src": "8527:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8529:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:16"
																			},
																			"nativeSrc": "8529:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:16"
																		},
																		"nativeSrc": "8529:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8508:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8513:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8504:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:16"
																		},
																		"nativeSrc": "8504:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8522:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8501:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:16"
																},
																"nativeSrc": "8501:25:16",
																"nodeType": "YulFunctionCall",
																"src": "8501:25:16"
															},
															"nativeSrc": "8498:112:16",
															"nodeType": "YulIf",
															"src": "8498:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8656:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8661:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8666:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8619:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:16"
																},
																"nativeSrc": "8619:54:16",
																"nodeType": "YulFunctionCall",
																"src": "8619:54:16"
															},
															"nativeSrc": "8619:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8256:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8312:3:16",
														"nodeType": "YulTypedName",
														"src": "8312:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8317:6:16",
														"nodeType": "YulTypedName",
														"src": "8317:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8325:3:16",
														"nodeType": "YulTypedName",
														"src": "8325:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8333:5:16",
														"nodeType": "YulTypedName",
														"src": "8333:5:16",
														"type": ""
													}
												],
												"src": "8256:423:16"
											},
											{
												"body": {
													"nativeSrc": "8759:277:16",
													"nodeType": "YulBlock",
													"src": "8759:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8808:83:16",
																"nodeType": "YulBlock",
																"src": "8808:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8810:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:16"
																			},
																			"nativeSrc": "8810:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:16"
																		},
																		"nativeSrc": "8810:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8787:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8795:4:16",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8783:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:16"
																				},
																				"nativeSrc": "8783:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8802:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8779:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:16"
																		},
																		"nativeSrc": "8779:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8772:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:16"
																},
																"nativeSrc": "8772:35:16",
																"nodeType": "YulFunctionCall",
																"src": "8772:35:16"
															},
															"nativeSrc": "8769:122:16",
															"nodeType": "YulIf",
															"src": "8769:122:16"
														},
														{
															"nativeSrc": "8900:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8927:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8914:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:16"
																},
																"nativeSrc": "8914:20:16",
																"nodeType": "YulFunctionCall",
																"src": "8914:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8904:6:16",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8943:87:16",
															"nodeType": "YulAssignment",
															"src": "8943:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9003:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9011:4:16",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8999:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:16"
																		},
																		"nativeSrc": "8999:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9018:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9026:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8952:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:16"
																},
																"nativeSrc": "8952:78:16",
																"nodeType": "YulFunctionCall",
																"src": "8952:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8943:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8698:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8737:6:16",
														"nodeType": "YulTypedName",
														"src": "8737:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8745:3:16",
														"nodeType": "YulTypedName",
														"src": "8745:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8753:5:16",
														"nodeType": "YulTypedName",
														"src": "8753:5:16",
														"type": ""
													}
												],
												"src": "8698:338:16"
											},
											{
												"body": {
													"nativeSrc": "9168:817:16",
													"nodeType": "YulBlock",
													"src": "9168:817:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "9215:83:16",
																"nodeType": "YulBlock",
																"src": "9215:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9217:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:16"
																			},
																			"nativeSrc": "9217:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:16"
																		},
																		"nativeSrc": "9217:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9189:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9198:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9185:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:16"
																		},
																		"nativeSrc": "9185:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9210:3:16",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9181:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:16"
																},
																"nativeSrc": "9181:33:16",
																"nodeType": "YulFunctionCall",
																"src": "9181:33:16"
															},
															"nativeSrc": "9178:120:16",
															"nodeType": "YulIf",
															"src": "9178:120:16"
														},
														{
															"nativeSrc": "9308:117:16",
															"nodeType": "YulBlock",
															"src": "9308:117:16",
															"statements": [
																{
																	"nativeSrc": "9323:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9337:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9327:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9352:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9352:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9387:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9398:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9383:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:16"
																				},
																				"nativeSrc": "9383:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9407:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9362:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:16"
																		},
																		"nativeSrc": "9362:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9352:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9435:118:16",
															"nodeType": "YulBlock",
															"src": "9435:118:16",
															"statements": [
																{
																	"nativeSrc": "9450:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9464:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9454:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9480:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9480:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9515:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9526:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9511:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:16"
																				},
																				"nativeSrc": "9511:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9535:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9490:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:16"
																		},
																		"nativeSrc": "9490:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9480:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9563:118:16",
															"nodeType": "YulBlock",
															"src": "9563:118:16",
															"statements": [
																{
																	"nativeSrc": "9578:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9592:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9582:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9608:63:16",
																	"nodeType": "YulAssignment",
																	"src": "9608:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9643:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9654:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9639:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:16"
																				},
																				"nativeSrc": "9639:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9663:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9618:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:16"
																		},
																		"nativeSrc": "9618:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9608:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9691:287:16",
															"nodeType": "YulBlock",
															"src": "9691:287:16",
															"statements": [
																{
																	"nativeSrc": "9706:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9737:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9748:2:16",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:16",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9733:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:16"
																				},
																				"nativeSrc": "9733:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9720:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:16"
																		},
																		"nativeSrc": "9720:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9710:6:16",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9799:83:16",
																		"nodeType": "YulBlock",
																		"src": "9799:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9801:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:16"
																					},
																					"nativeSrc": "9801:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:16"
																				},
																				"nativeSrc": "9801:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9771:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9779:18:16",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9768:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:16"
																		},
																		"nativeSrc": "9768:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:16"
																	},
																	"nativeSrc": "9765:117:16",
																	"nodeType": "YulIf",
																	"src": "9765:117:16"
																},
																{
																	"nativeSrc": "9896:72:16",
																	"nodeType": "YulAssignment",
																	"src": "9896:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9940:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9951:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9936:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:16"
																				},
																				"nativeSrc": "9936:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9960:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9906:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:16"
																		},
																		"nativeSrc": "9906:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9896:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "9042:943:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9114:9:16",
														"nodeType": "YulTypedName",
														"src": "9114:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9125:7:16",
														"nodeType": "YulTypedName",
														"src": "9125:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9137:6:16",
														"nodeType": "YulTypedName",
														"src": "9137:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9145:6:16",
														"nodeType": "YulTypedName",
														"src": "9145:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9153:6:16",
														"nodeType": "YulTypedName",
														"src": "9153:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9161:6:16",
														"nodeType": "YulTypedName",
														"src": "9161:6:16",
														"type": ""
													}
												],
												"src": "9042:943:16"
											},
											{
												"body": {
													"nativeSrc": "10080:28:16",
													"nodeType": "YulBlock",
													"src": "10080:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10097:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10097:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10100:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10100:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10090:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10090:6:16"
																},
																"nativeSrc": "10090:12:16",
																"nodeType": "YulFunctionCall",
																"src": "10090:12:16"
															},
															"nativeSrc": "10090:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "10090:12:16"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "9991:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "9991:117:16"
											},
											{
												"body": {
													"nativeSrc": "10203:28:16",
													"nodeType": "YulBlock",
													"src": "10203:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10220:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10220:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10223:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10223:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10213:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10213:6:16"
																},
																"nativeSrc": "10213:12:16",
																"nodeType": "YulFunctionCall",
																"src": "10213:12:16"
															},
															"nativeSrc": "10213:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "10213:12:16"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "10114:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "10114:117:16"
											},
											{
												"body": {
													"nativeSrc": "10326:478:16",
													"nodeType": "YulBlock",
													"src": "10326:478:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10375:83:16",
																"nodeType": "YulBlock",
																"src": "10375:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "10377:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10377:77:16"
																			},
																			"nativeSrc": "10377:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10377:79:16"
																		},
																		"nativeSrc": "10377:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10377:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "10354:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10354:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10362:4:16",
																						"nodeType": "YulLiteral",
																						"src": "10362:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10350:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10350:3:16"
																				},
																				"nativeSrc": "10350:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10350:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "10369:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10369:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "10346:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10346:3:16"
																		},
																		"nativeSrc": "10346:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10346:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10339:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10339:6:16"
																},
																"nativeSrc": "10339:35:16",
																"nodeType": "YulFunctionCall",
																"src": "10339:35:16"
															},
															"nativeSrc": "10336:122:16",
															"nodeType": "YulIf",
															"src": "10336:122:16"
														},
														{
															"nativeSrc": "10467:30:16",
															"nodeType": "YulAssignment",
															"src": "10467:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10490:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10490:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10477:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "10477:12:16"
																},
																"nativeSrc": "10477:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10477:20:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10467:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10467:6:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10540:83:16",
																"nodeType": "YulBlock",
																"src": "10540:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "10542:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10542:77:16"
																			},
																			"nativeSrc": "10542:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10542:79:16"
																		},
																		"nativeSrc": "10542:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10542:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10512:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10512:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10520:18:16",
																		"nodeType": "YulLiteral",
																		"src": "10520:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10509:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10509:2:16"
																},
																"nativeSrc": "10509:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10509:30:16"
															},
															"nativeSrc": "10506:117:16",
															"nodeType": "YulIf",
															"src": "10506:117:16"
														},
														{
															"nativeSrc": "10632:29:16",
															"nodeType": "YulAssignment",
															"src": "10632:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10648:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10648:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10656:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10656:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10644:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10644:3:16"
																},
																"nativeSrc": "10644:17:16",
																"nodeType": "YulFunctionCall",
																"src": "10644:17:16"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "10632:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "10632:8:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10715:83:16",
																"nodeType": "YulBlock",
																"src": "10715:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "10717:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10717:77:16"
																			},
																			"nativeSrc": "10717:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10717:79:16"
																		},
																		"nativeSrc": "10717:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10717:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "10680:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "10680:8:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "10694:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "10694:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10702:4:16",
																						"nodeType": "YulLiteral",
																						"src": "10702:4:16",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "10690:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "10690:3:16"
																				},
																				"nativeSrc": "10690:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "10690:17:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10676:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10676:3:16"
																		},
																		"nativeSrc": "10676:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10676:32:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "10710:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10710:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10673:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10673:2:16"
																},
																"nativeSrc": "10673:41:16",
																"nodeType": "YulFunctionCall",
																"src": "10673:41:16"
															},
															"nativeSrc": "10670:128:16",
															"nodeType": "YulIf",
															"src": "10670:128:16"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "10251:553:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10293:6:16",
														"nodeType": "YulTypedName",
														"src": "10293:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10301:3:16",
														"nodeType": "YulTypedName",
														"src": "10301:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "10309:8:16",
														"nodeType": "YulTypedName",
														"src": "10309:8:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10319:6:16",
														"nodeType": "YulTypedName",
														"src": "10319:6:16",
														"type": ""
													}
												],
												"src": "10251:553:16"
											},
											{
												"body": {
													"nativeSrc": "10913:571:16",
													"nodeType": "YulBlock",
													"src": "10913:571:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10959:83:16",
																"nodeType": "YulBlock",
																"src": "10959:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10961:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "10961:77:16"
																			},
																			"nativeSrc": "10961:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10961:79:16"
																		},
																		"nativeSrc": "10961:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10961:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10934:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "10934:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10943:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "10943:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10930:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10930:3:16"
																		},
																		"nativeSrc": "10930:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10930:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10955:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10955:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10926:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10926:3:16"
																},
																"nativeSrc": "10926:32:16",
																"nodeType": "YulFunctionCall",
																"src": "10926:32:16"
															},
															"nativeSrc": "10923:119:16",
															"nodeType": "YulIf",
															"src": "10923:119:16"
														},
														{
															"nativeSrc": "11052:117:16",
															"nodeType": "YulBlock",
															"src": "11052:117:16",
															"statements": [
																{
																	"nativeSrc": "11067:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11067:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11081:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11081:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11071:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11071:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11096:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11096:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11131:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11131:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11142:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11142:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11127:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11127:3:16"
																				},
																				"nativeSrc": "11127:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11127:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11151:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11151:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11106:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11106:20:16"
																		},
																		"nativeSrc": "11106:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11106:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11096:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11096:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11179:298:16",
															"nodeType": "YulBlock",
															"src": "11179:298:16",
															"statements": [
																{
																	"nativeSrc": "11194:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11194:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11225:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11225:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11236:2:16",
																						"nodeType": "YulLiteral",
																						"src": "11236:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11221:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11221:3:16"
																				},
																				"nativeSrc": "11221:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11221:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "11208:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "11208:12:16"
																		},
																		"nativeSrc": "11208:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11208:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11198:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11198:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "11287:83:16",
																		"nodeType": "YulBlock",
																		"src": "11287:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11289:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "11289:77:16"
																					},
																					"nativeSrc": "11289:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "11289:79:16"
																				},
																				"nativeSrc": "11289:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "11289:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11259:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11259:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11267:18:16",
																				"nodeType": "YulLiteral",
																				"src": "11267:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "11256:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "11256:2:16"
																		},
																		"nativeSrc": "11256:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11256:30:16"
																	},
																	"nativeSrc": "11253:117:16",
																	"nodeType": "YulIf",
																	"src": "11253:117:16"
																},
																{
																	"nativeSrc": "11384:83:16",
																	"nodeType": "YulAssignment",
																	"src": "11384:83:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11439:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11439:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11450:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11450:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11435:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11435:3:16"
																				},
																				"nativeSrc": "11435:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11435:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11459:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11459:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "11402:32:16",
																			"nodeType": "YulIdentifier",
																			"src": "11402:32:16"
																		},
																		"nativeSrc": "11402:65:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11402:65:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11384:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11384:6:16"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "11392:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11392:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_string_calldata_ptr",
												"nativeSrc": "10810:674:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10867:9:16",
														"nodeType": "YulTypedName",
														"src": "10867:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10878:7:16",
														"nodeType": "YulTypedName",
														"src": "10878:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10890:6:16",
														"nodeType": "YulTypedName",
														"src": "10890:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10898:6:16",
														"nodeType": "YulTypedName",
														"src": "10898:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10906:6:16",
														"nodeType": "YulTypedName",
														"src": "10906:6:16",
														"type": ""
													}
												],
												"src": "10810:674:16"
											},
											{
												"body": {
													"nativeSrc": "11573:391:16",
													"nodeType": "YulBlock",
													"src": "11573:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11619:83:16",
																"nodeType": "YulBlock",
																"src": "11619:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11621:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11621:77:16"
																			},
																			"nativeSrc": "11621:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11621:79:16"
																		},
																		"nativeSrc": "11621:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11621:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11594:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11594:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11603:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11603:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11590:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11590:3:16"
																		},
																		"nativeSrc": "11590:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11590:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11615:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11615:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11586:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11586:3:16"
																},
																"nativeSrc": "11586:32:16",
																"nodeType": "YulFunctionCall",
																"src": "11586:32:16"
															},
															"nativeSrc": "11583:119:16",
															"nodeType": "YulIf",
															"src": "11583:119:16"
														},
														{
															"nativeSrc": "11712:117:16",
															"nodeType": "YulBlock",
															"src": "11712:117:16",
															"statements": [
																{
																	"nativeSrc": "11727:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11727:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11741:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11741:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11731:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11731:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11756:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11756:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11791:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11791:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11802:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11802:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11787:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11787:3:16"
																				},
																				"nativeSrc": "11787:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11787:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11811:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11811:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11766:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11766:20:16"
																		},
																		"nativeSrc": "11766:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11766:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11756:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11756:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11839:118:16",
															"nodeType": "YulBlock",
															"src": "11839:118:16",
															"statements": [
																{
																	"nativeSrc": "11854:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11854:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11868:2:16",
																		"nodeType": "YulLiteral",
																		"src": "11868:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11858:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11858:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11884:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11884:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11919:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "11919:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11930:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11930:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11915:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11915:3:16"
																				},
																				"nativeSrc": "11915:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11915:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11939:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11939:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11894:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "11894:20:16"
																		},
																		"nativeSrc": "11894:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11894:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11884:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11884:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "11490:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11535:9:16",
														"nodeType": "YulTypedName",
														"src": "11535:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11546:7:16",
														"nodeType": "YulTypedName",
														"src": "11546:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11558:6:16",
														"nodeType": "YulTypedName",
														"src": "11558:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11566:6:16",
														"nodeType": "YulTypedName",
														"src": "11566:6:16",
														"type": ""
													}
												],
												"src": "11490:474:16"
											},
											{
												"body": {
													"nativeSrc": "11998:152:16",
													"nodeType": "YulBlock",
													"src": "11998:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12015:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12015:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12018:77:16",
																		"nodeType": "YulLiteral",
																		"src": "12018:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12008:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12008:6:16"
																},
																"nativeSrc": "12008:88:16",
																"nodeType": "YulFunctionCall",
																"src": "12008:88:16"
															},
															"nativeSrc": "12008:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "12008:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12112:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12112:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12115:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12115:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12105:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12105:6:16"
																},
																"nativeSrc": "12105:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12105:15:16"
															},
															"nativeSrc": "12105:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12105:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12136:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12136:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12139:4:16",
																		"nodeType": "YulLiteral",
																		"src": "12139:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12129:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12129:6:16"
																},
																"nativeSrc": "12129:15:16",
																"nodeType": "YulFunctionCall",
																"src": "12129:15:16"
															},
															"nativeSrc": "12129:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "12129:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11970:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "11970:180:16"
											},
											{
												"body": {
													"nativeSrc": "12207:269:16",
													"nodeType": "YulBlock",
													"src": "12207:269:16",
													"statements": [
														{
															"nativeSrc": "12217:22:16",
															"nodeType": "YulAssignment",
															"src": "12217:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12231:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12231:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12237:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12237:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12227:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12227:3:16"
																},
																"nativeSrc": "12227:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12227:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12217:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12217:6:16"
																}
															]
														},
														{
															"nativeSrc": "12248:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "12248:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12278:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "12278:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12284:1:16",
																		"nodeType": "YulLiteral",
																		"src": "12284:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12274:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12274:3:16"
																},
																"nativeSrc": "12274:12:16",
																"nodeType": "YulFunctionCall",
																"src": "12274:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12252:18:16",
																	"nodeType": "YulTypedName",
																	"src": "12252:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12325:51:16",
																"nodeType": "YulBlock",
																"src": "12325:51:16",
																"statements": [
																	{
																		"nativeSrc": "12339:27:16",
																		"nodeType": "YulAssignment",
																		"src": "12339:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12353:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "12353:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12361:4:16",
																					"nodeType": "YulLiteral",
																					"src": "12361:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12349:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "12349:3:16"
																			},
																			"nativeSrc": "12349:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12349:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12339:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12339:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12305:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "12305:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12298:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "12298:6:16"
																},
																"nativeSrc": "12298:26:16",
																"nodeType": "YulFunctionCall",
																"src": "12298:26:16"
															},
															"nativeSrc": "12295:81:16",
															"nodeType": "YulIf",
															"src": "12295:81:16"
														},
														{
															"body": {
																"nativeSrc": "12428:42:16",
																"nodeType": "YulBlock",
																"src": "12428:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12442:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "12442:16:16"
																			},
																			"nativeSrc": "12442:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "12442:18:16"
																		},
																		"nativeSrc": "12442:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "12442:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12392:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "12392:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12415:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12415:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12423:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12423:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12412:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12412:2:16"
																		},
																		"nativeSrc": "12412:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12412:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12389:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "12389:2:16"
																},
																"nativeSrc": "12389:38:16",
																"nodeType": "YulFunctionCall",
																"src": "12389:38:16"
															},
															"nativeSrc": "12386:84:16",
															"nodeType": "YulIf",
															"src": "12386:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12156:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12191:4:16",
														"nodeType": "YulTypedName",
														"src": "12191:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12200:6:16",
														"nodeType": "YulTypedName",
														"src": "12200:6:16",
														"type": ""
													}
												],
												"src": "12156:320:16"
											},
											{
												"body": {
													"nativeSrc": "12636:288:16",
													"nodeType": "YulBlock",
													"src": "12636:288:16",
													"statements": [
														{
															"nativeSrc": "12646:26:16",
															"nodeType": "YulAssignment",
															"src": "12646:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12658:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12658:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12669:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12669:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12654:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12654:3:16"
																},
																"nativeSrc": "12654:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12654:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12646:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12646:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12726:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12726:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12739:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12739:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12750:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12750:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12735:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12735:3:16"
																		},
																		"nativeSrc": "12735:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12735:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12682:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12682:43:16"
																},
																"nativeSrc": "12682:71:16",
																"nodeType": "YulFunctionCall",
																"src": "12682:71:16"
															},
															"nativeSrc": "12682:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "12682:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12807:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12807:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12820:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12820:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12831:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12831:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12816:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12816:3:16"
																		},
																		"nativeSrc": "12816:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12816:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12763:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12763:43:16"
																},
																"nativeSrc": "12763:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12763:72:16"
															},
															"nativeSrc": "12763:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12763:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12889:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12889:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12902:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12902:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12913:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12913:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12898:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12898:3:16"
																		},
																		"nativeSrc": "12898:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12898:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12845:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12845:43:16"
																},
																"nativeSrc": "12845:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12845:72:16"
															},
															"nativeSrc": "12845:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12845:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "12482:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12592:9:16",
														"nodeType": "YulTypedName",
														"src": "12592:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12604:6:16",
														"nodeType": "YulTypedName",
														"src": "12604:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12612:6:16",
														"nodeType": "YulTypedName",
														"src": "12612:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12620:6:16",
														"nodeType": "YulTypedName",
														"src": "12620:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12631:4:16",
														"nodeType": "YulTypedName",
														"src": "12631:4:16",
														"type": ""
													}
												],
												"src": "12482:442:16"
											},
											{
												"body": {
													"nativeSrc": "13044:34:16",
													"nodeType": "YulBlock",
													"src": "13044:34:16",
													"statements": [
														{
															"nativeSrc": "13054:18:16",
															"nodeType": "YulAssignment",
															"src": "13054:18:16",
															"value": {
																"name": "pos",
																"nativeSrc": "13069:3:16",
																"nodeType": "YulIdentifier",
																"src": "13069:3:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13054:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "13054:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12930:148:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13016:3:16",
														"nodeType": "YulTypedName",
														"src": "13016:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13021:6:16",
														"nodeType": "YulTypedName",
														"src": "13021:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13032:11:16",
														"nodeType": "YulTypedName",
														"src": "13032:11:16",
														"type": ""
													}
												],
												"src": "12930:148:16"
											},
											{
												"body": {
													"nativeSrc": "13194:280:16",
													"nodeType": "YulBlock",
													"src": "13194:280:16",
													"statements": [
														{
															"nativeSrc": "13204:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "13204:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13251:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "13251:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13218:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "13218:32:16"
																},
																"nativeSrc": "13218:39:16",
																"nodeType": "YulFunctionCall",
																"src": "13218:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13208:6:16",
																	"nodeType": "YulTypedName",
																	"src": "13208:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13266:96:16",
															"nodeType": "YulAssignment",
															"src": "13266:96:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13350:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13350:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13355:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13355:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13273:76:16",
																	"nodeType": "YulIdentifier",
																	"src": "13273:76:16"
																},
																"nativeSrc": "13273:89:16",
																"nodeType": "YulFunctionCall",
																"src": "13273:89:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13266:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13266:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13410:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "13410:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13417:4:16",
																				"nodeType": "YulLiteral",
																				"src": "13417:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13406:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13406:3:16"
																		},
																		"nativeSrc": "13406:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13406:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13424:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13424:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13429:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13429:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13371:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "13371:34:16"
																},
																"nativeSrc": "13371:65:16",
																"nodeType": "YulFunctionCall",
																"src": "13371:65:16"
															},
															"nativeSrc": "13371:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "13371:65:16"
														},
														{
															"nativeSrc": "13445:23:16",
															"nodeType": "YulAssignment",
															"src": "13445:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13456:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13456:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13461:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13461:6:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13452:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13452:3:16"
																},
																"nativeSrc": "13452:16:16",
																"nodeType": "YulFunctionCall",
																"src": "13452:16:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13445:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13445:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13084:390:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13175:5:16",
														"nodeType": "YulTypedName",
														"src": "13175:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13182:3:16",
														"nodeType": "YulTypedName",
														"src": "13182:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13190:3:16",
														"nodeType": "YulTypedName",
														"src": "13190:3:16",
														"type": ""
													}
												],
												"src": "13084:390:16"
											},
											{
												"body": {
													"nativeSrc": "13664:251:16",
													"nodeType": "YulBlock",
													"src": "13664:251:16",
													"statements": [
														{
															"nativeSrc": "13675:102:16",
															"nodeType": "YulAssignment",
															"src": "13675:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13764:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13764:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13773:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13773:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13682:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "13682:81:16"
																},
																"nativeSrc": "13682:95:16",
																"nodeType": "YulFunctionCall",
																"src": "13682:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13675:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13675:3:16"
																}
															]
														},
														{
															"nativeSrc": "13787:102:16",
															"nodeType": "YulAssignment",
															"src": "13787:102:16",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13876:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13876:6:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13885:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13885:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13794:81:16",
																	"nodeType": "YulIdentifier",
																	"src": "13794:81:16"
																},
																"nativeSrc": "13794:95:16",
																"nodeType": "YulFunctionCall",
																"src": "13794:95:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13787:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13787:3:16"
																}
															]
														},
														{
															"nativeSrc": "13899:10:16",
															"nodeType": "YulAssignment",
															"src": "13899:10:16",
															"value": {
																"name": "pos",
																"nativeSrc": "13906:3:16",
																"nodeType": "YulIdentifier",
																"src": "13906:3:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13899:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13899:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13480:435:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13635:3:16",
														"nodeType": "YulTypedName",
														"src": "13635:3:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13641:6:16",
														"nodeType": "YulTypedName",
														"src": "13641:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13649:6:16",
														"nodeType": "YulTypedName",
														"src": "13649:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13660:3:16",
														"nodeType": "YulTypedName",
														"src": "13660:3:16",
														"type": ""
													}
												],
												"src": "13480:435:16"
											},
											{
												"body": {
													"nativeSrc": "13949:152:16",
													"nodeType": "YulBlock",
													"src": "13949:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13966:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13966:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13969:77:16",
																		"nodeType": "YulLiteral",
																		"src": "13969:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13959:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13959:6:16"
																},
																"nativeSrc": "13959:88:16",
																"nodeType": "YulFunctionCall",
																"src": "13959:88:16"
															},
															"nativeSrc": "13959:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "13959:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14063:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14063:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14066:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14066:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14056:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14056:6:16"
																},
																"nativeSrc": "14056:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14056:15:16"
															},
															"nativeSrc": "14056:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14056:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14087:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14087:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14090:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14090:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14080:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14080:6:16"
																},
																"nativeSrc": "14080:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14080:15:16"
															},
															"nativeSrc": "14080:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14080:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13921:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "13921:180:16"
											},
											{
												"body": {
													"nativeSrc": "14150:190:16",
													"nodeType": "YulBlock",
													"src": "14150:190:16",
													"statements": [
														{
															"nativeSrc": "14160:33:16",
															"nodeType": "YulAssignment",
															"src": "14160:33:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14187:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14187:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14169:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "14169:17:16"
																},
																"nativeSrc": "14169:24:16",
																"nodeType": "YulFunctionCall",
																"src": "14169:24:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14160:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14160:5:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14283:22:16",
																"nodeType": "YulBlock",
																"src": "14283:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14285:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "14285:16:16"
																			},
																			"nativeSrc": "14285:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14285:18:16"
																		},
																		"nativeSrc": "14285:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14285:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14208:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14208:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14215:66:16",
																		"nodeType": "YulLiteral",
																		"src": "14215:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14205:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "14205:2:16"
																},
																"nativeSrc": "14205:77:16",
																"nodeType": "YulFunctionCall",
																"src": "14205:77:16"
															},
															"nativeSrc": "14202:103:16",
															"nodeType": "YulIf",
															"src": "14202:103:16"
														},
														{
															"nativeSrc": "14314:20:16",
															"nodeType": "YulAssignment",
															"src": "14314:20:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14325:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14325:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14332:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14332:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14321:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14321:3:16"
																},
																"nativeSrc": "14321:13:16",
																"nodeType": "YulFunctionCall",
																"src": "14321:13:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14314:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14314:3:16"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "14107:233:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14136:5:16",
														"nodeType": "YulTypedName",
														"src": "14136:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14146:3:16",
														"nodeType": "YulTypedName",
														"src": "14146:3:16",
														"type": ""
													}
												],
												"src": "14107:233:16"
											},
											{
												"body": {
													"nativeSrc": "14404:40:16",
													"nodeType": "YulBlock",
													"src": "14404:40:16",
													"statements": [
														{
															"nativeSrc": "14415:22:16",
															"nodeType": "YulAssignment",
															"src": "14415:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14431:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14431:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14425:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "14425:5:16"
																},
																"nativeSrc": "14425:12:16",
																"nodeType": "YulFunctionCall",
																"src": "14425:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "14415:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14415:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "14346:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14387:5:16",
														"nodeType": "YulTypedName",
														"src": "14387:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "14397:6:16",
														"nodeType": "YulTypedName",
														"src": "14397:6:16",
														"type": ""
													}
												],
												"src": "14346:98:16"
											},
											{
												"body": {
													"nativeSrc": "14545:73:16",
													"nodeType": "YulBlock",
													"src": "14545:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14562:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14562:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14567:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14567:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14555:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14555:6:16"
																},
																"nativeSrc": "14555:19:16",
																"nodeType": "YulFunctionCall",
																"src": "14555:19:16"
															},
															"nativeSrc": "14555:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "14555:19:16"
														},
														{
															"nativeSrc": "14583:29:16",
															"nodeType": "YulAssignment",
															"src": "14583:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14602:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14602:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14607:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14607:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14598:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14598:3:16"
																},
																"nativeSrc": "14598:14:16",
																"nodeType": "YulFunctionCall",
																"src": "14598:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "14583:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "14583:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "14450:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14517:3:16",
														"nodeType": "YulTypedName",
														"src": "14517:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "14522:6:16",
														"nodeType": "YulTypedName",
														"src": "14522:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "14533:11:16",
														"nodeType": "YulTypedName",
														"src": "14533:11:16",
														"type": ""
													}
												],
												"src": "14450:168:16"
											},
											{
												"body": {
													"nativeSrc": "14714:283:16",
													"nodeType": "YulBlock",
													"src": "14714:283:16",
													"statements": [
														{
															"nativeSrc": "14724:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "14724:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14770:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "14770:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "14738:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "14738:31:16"
																},
																"nativeSrc": "14738:38:16",
																"nodeType": "YulFunctionCall",
																"src": "14738:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "14728:6:16",
																	"nodeType": "YulTypedName",
																	"src": "14728:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14785:77:16",
															"nodeType": "YulAssignment",
															"src": "14785:77:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14850:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14850:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14855:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14855:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "14792:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "14792:57:16"
																},
																"nativeSrc": "14792:70:16",
																"nodeType": "YulFunctionCall",
																"src": "14792:70:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14785:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14785:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14910:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "14910:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14917:4:16",
																				"nodeType": "YulLiteral",
																				"src": "14917:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14906:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14906:3:16"
																		},
																		"nativeSrc": "14906:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14906:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14924:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14924:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14929:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "14929:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "14871:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "14871:34:16"
																},
																"nativeSrc": "14871:65:16",
																"nodeType": "YulFunctionCall",
																"src": "14871:65:16"
															},
															"nativeSrc": "14871:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "14871:65:16"
														},
														{
															"nativeSrc": "14945:46:16",
															"nodeType": "YulAssignment",
															"src": "14945:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14956:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14956:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "14983:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "14983:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "14961:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "14961:21:16"
																		},
																		"nativeSrc": "14961:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14961:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14952:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14952:3:16"
																},
																"nativeSrc": "14952:39:16",
																"nodeType": "YulFunctionCall",
																"src": "14952:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14945:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14945:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "14624:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14695:5:16",
														"nodeType": "YulTypedName",
														"src": "14695:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "14702:3:16",
														"nodeType": "YulTypedName",
														"src": "14702:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14710:3:16",
														"nodeType": "YulTypedName",
														"src": "14710:3:16",
														"type": ""
													}
												],
												"src": "14624:373:16"
											},
											{
												"body": {
													"nativeSrc": "15203:440:16",
													"nodeType": "YulBlock",
													"src": "15203:440:16",
													"statements": [
														{
															"nativeSrc": "15213:27:16",
															"nodeType": "YulAssignment",
															"src": "15213:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15225:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "15225:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15236:3:16",
																		"nodeType": "YulLiteral",
																		"src": "15236:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15221:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15221:3:16"
																},
																"nativeSrc": "15221:19:16",
																"nodeType": "YulFunctionCall",
																"src": "15221:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15213:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15213:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15294:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15294:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15307:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15307:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15318:1:16",
																				"nodeType": "YulLiteral",
																				"src": "15318:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15303:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15303:3:16"
																		},
																		"nativeSrc": "15303:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15303:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15250:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15250:43:16"
																},
																"nativeSrc": "15250:71:16",
																"nodeType": "YulFunctionCall",
																"src": "15250:71:16"
															},
															"nativeSrc": "15250:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "15250:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15375:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15375:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15388:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15388:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15399:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15399:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15384:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15384:3:16"
																		},
																		"nativeSrc": "15384:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15384:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15331:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15331:43:16"
																},
																"nativeSrc": "15331:72:16",
																"nodeType": "YulFunctionCall",
																"src": "15331:72:16"
															},
															"nativeSrc": "15331:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "15331:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "15457:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15457:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15470:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15470:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15481:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15481:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15466:3:16"
																		},
																		"nativeSrc": "15466:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15466:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15413:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "15413:43:16"
																},
																"nativeSrc": "15413:72:16",
																"nodeType": "YulFunctionCall",
																"src": "15413:72:16"
															},
															"nativeSrc": "15413:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "15413:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15506:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15506:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15517:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15517:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15502:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15502:3:16"
																		},
																		"nativeSrc": "15502:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15502:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15526:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "15526:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15532:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15532:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15522:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15522:3:16"
																		},
																		"nativeSrc": "15522:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15522:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15495:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15495:6:16"
																},
																"nativeSrc": "15495:48:16",
																"nodeType": "YulFunctionCall",
																"src": "15495:48:16"
															},
															"nativeSrc": "15495:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "15495:48:16"
														},
														{
															"nativeSrc": "15552:84:16",
															"nodeType": "YulAssignment",
															"src": "15552:84:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "15622:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15622:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "15631:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15631:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "15560:61:16",
																	"nodeType": "YulIdentifier",
																	"src": "15560:61:16"
																},
																"nativeSrc": "15560:76:16",
																"nodeType": "YulFunctionCall",
																"src": "15560:76:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15552:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15552:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "15003:640:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15151:9:16",
														"nodeType": "YulTypedName",
														"src": "15151:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15163:6:16",
														"nodeType": "YulTypedName",
														"src": "15163:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15171:6:16",
														"nodeType": "YulTypedName",
														"src": "15171:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15179:6:16",
														"nodeType": "YulTypedName",
														"src": "15179:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15187:6:16",
														"nodeType": "YulTypedName",
														"src": "15187:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15198:4:16",
														"nodeType": "YulTypedName",
														"src": "15198:4:16",
														"type": ""
													}
												],
												"src": "15003:640:16"
											},
											{
												"body": {
													"nativeSrc": "15711:79:16",
													"nodeType": "YulBlock",
													"src": "15711:79:16",
													"statements": [
														{
															"nativeSrc": "15721:22:16",
															"nodeType": "YulAssignment",
															"src": "15721:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15736:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "15736:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15730:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "15730:5:16"
																},
																"nativeSrc": "15730:13:16",
																"nodeType": "YulFunctionCall",
																"src": "15730:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15721:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "15721:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15778:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15778:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "15752:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "15752:25:16"
																},
																"nativeSrc": "15752:32:16",
																"nodeType": "YulFunctionCall",
																"src": "15752:32:16"
															},
															"nativeSrc": "15752:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "15752:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "15649:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15689:6:16",
														"nodeType": "YulTypedName",
														"src": "15689:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15697:3:16",
														"nodeType": "YulTypedName",
														"src": "15697:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15705:5:16",
														"nodeType": "YulTypedName",
														"src": "15705:5:16",
														"type": ""
													}
												],
												"src": "15649:141:16"
											},
											{
												"body": {
													"nativeSrc": "15872:273:16",
													"nodeType": "YulBlock",
													"src": "15872:273:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "15918:83:16",
																"nodeType": "YulBlock",
																"src": "15918:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15920:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "15920:77:16"
																			},
																			"nativeSrc": "15920:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "15920:79:16"
																		},
																		"nativeSrc": "15920:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "15920:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15893:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "15893:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15902:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "15902:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15889:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15889:3:16"
																		},
																		"nativeSrc": "15889:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15889:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15914:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15914:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15885:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15885:3:16"
																},
																"nativeSrc": "15885:32:16",
																"nodeType": "YulFunctionCall",
																"src": "15885:32:16"
															},
															"nativeSrc": "15882:119:16",
															"nodeType": "YulIf",
															"src": "15882:119:16"
														},
														{
															"nativeSrc": "16011:127:16",
															"nodeType": "YulBlock",
															"src": "16011:127:16",
															"statements": [
																{
																	"nativeSrc": "16026:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "16026:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "16040:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16040:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "16030:6:16",
																			"nodeType": "YulTypedName",
																			"src": "16030:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "16055:73:16",
																	"nodeType": "YulAssignment",
																	"src": "16055:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "16100:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "16100:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "16111:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "16111:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "16096:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "16096:3:16"
																				},
																				"nativeSrc": "16096:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16096:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "16120:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "16120:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "16065:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "16065:30:16"
																		},
																		"nativeSrc": "16065:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16065:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "16055:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "16055:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "15796:349:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15842:9:16",
														"nodeType": "YulTypedName",
														"src": "15842:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15853:7:16",
														"nodeType": "YulTypedName",
														"src": "15853:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15865:6:16",
														"nodeType": "YulTypedName",
														"src": "15865:6:16",
														"type": ""
													}
												],
												"src": "15796:349:16"
											},
											{
												"body": {
													"nativeSrc": "16205:87:16",
													"nodeType": "YulBlock",
													"src": "16205:87:16",
													"statements": [
														{
															"nativeSrc": "16215:11:16",
															"nodeType": "YulAssignment",
															"src": "16215:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "16223:3:16",
																"nodeType": "YulIdentifier",
																"src": "16223:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16215:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16215:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16243:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16243:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "16246:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "16246:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16236:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16236:6:16"
																},
																"nativeSrc": "16236:14:16",
																"nodeType": "YulFunctionCall",
																"src": "16236:14:16"
															},
															"nativeSrc": "16236:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "16236:14:16"
														},
														{
															"nativeSrc": "16259:26:16",
															"nodeType": "YulAssignment",
															"src": "16259:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16277:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16277:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16280:4:16",
																		"nodeType": "YulLiteral",
																		"src": "16280:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "16267:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "16267:9:16"
																},
																"nativeSrc": "16267:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16267:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "16259:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "16259:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "16151:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "16192:3:16",
														"nodeType": "YulTypedName",
														"src": "16192:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "16200:4:16",
														"nodeType": "YulTypedName",
														"src": "16200:4:16",
														"type": ""
													}
												],
												"src": "16151:141:16"
											},
											{
												"body": {
													"nativeSrc": "16342:49:16",
													"nodeType": "YulBlock",
													"src": "16342:49:16",
													"statements": [
														{
															"nativeSrc": "16352:33:16",
															"nodeType": "YulAssignment",
															"src": "16352:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16370:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "16370:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16377:2:16",
																				"nodeType": "YulLiteral",
																				"src": "16377:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16366:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16366:3:16"
																		},
																		"nativeSrc": "16366:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16366:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16382:2:16",
																		"nodeType": "YulLiteral",
																		"src": "16382:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "16362:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16362:3:16"
																},
																"nativeSrc": "16362:23:16",
																"nodeType": "YulFunctionCall",
																"src": "16362:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16352:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16352:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "16298:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16325:5:16",
														"nodeType": "YulTypedName",
														"src": "16325:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16335:6:16",
														"nodeType": "YulTypedName",
														"src": "16335:6:16",
														"type": ""
													}
												],
												"src": "16298:93:16"
											},
											{
												"body": {
													"nativeSrc": "16450:54:16",
													"nodeType": "YulBlock",
													"src": "16450:54:16",
													"statements": [
														{
															"nativeSrc": "16460:37:16",
															"nodeType": "YulAssignment",
															"src": "16460:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "16485:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16485:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "16491:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16491:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "16481:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16481:3:16"
																},
																"nativeSrc": "16481:16:16",
																"nodeType": "YulFunctionCall",
																"src": "16481:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "16460:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "16460:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "16397:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "16425:4:16",
														"nodeType": "YulTypedName",
														"src": "16425:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "16431:5:16",
														"nodeType": "YulTypedName",
														"src": "16431:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "16441:8:16",
														"nodeType": "YulTypedName",
														"src": "16441:8:16",
														"type": ""
													}
												],
												"src": "16397:107:16"
											},
											{
												"body": {
													"nativeSrc": "16586:317:16",
													"nodeType": "YulBlock",
													"src": "16586:317:16",
													"statements": [
														{
															"nativeSrc": "16596:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16596:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16617:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "16617:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16629:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16629:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16613:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16613:3:16"
																},
																"nativeSrc": "16613:18:16",
																"nodeType": "YulFunctionCall",
																"src": "16613:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "16600:9:16",
																	"nodeType": "YulTypedName",
																	"src": "16600:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16640:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16640:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16671:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16671:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16682:66:16",
																		"nodeType": "YulLiteral",
																		"src": "16682:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16652:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "16652:18:16"
																},
																"nativeSrc": "16652:97:16",
																"nodeType": "YulFunctionCall",
																"src": "16652:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16644:4:16",
																	"nodeType": "YulTypedName",
																	"src": "16644:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16758:51:16",
															"nodeType": "YulAssignment",
															"src": "16758:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16789:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16789:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16800:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "16800:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16770:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "16770:18:16"
																},
																"nativeSrc": "16770:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16770:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16758:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "16758:8:16"
																}
															]
														},
														{
															"nativeSrc": "16818:30:16",
															"nodeType": "YulAssignment",
															"src": "16818:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16831:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16831:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16842:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16842:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16838:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16838:3:16"
																		},
																		"nativeSrc": "16838:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16838:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16827:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16827:3:16"
																},
																"nativeSrc": "16827:21:16",
																"nodeType": "YulFunctionCall",
																"src": "16827:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16818:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16818:5:16"
																}
															]
														},
														{
															"nativeSrc": "16857:40:16",
															"nodeType": "YulAssignment",
															"src": "16857:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16870:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16870:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16881:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "16881:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16891:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16891:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16877:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16877:3:16"
																		},
																		"nativeSrc": "16877:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16877:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16867:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "16867:2:16"
																},
																"nativeSrc": "16867:30:16",
																"nodeType": "YulFunctionCall",
																"src": "16867:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16857:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16857:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "16510:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16547:5:16",
														"nodeType": "YulTypedName",
														"src": "16547:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "16554:10:16",
														"nodeType": "YulTypedName",
														"src": "16554:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "16566:8:16",
														"nodeType": "YulTypedName",
														"src": "16566:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "16579:6:16",
														"nodeType": "YulTypedName",
														"src": "16579:6:16",
														"type": ""
													}
												],
												"src": "16510:393:16"
											},
											{
												"body": {
													"nativeSrc": "16941:28:16",
													"nodeType": "YulBlock",
													"src": "16941:28:16",
													"statements": [
														{
															"nativeSrc": "16951:12:16",
															"nodeType": "YulAssignment",
															"src": "16951:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "16958:5:16",
																"nodeType": "YulIdentifier",
																"src": "16958:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16951:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16951:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16909:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16927:5:16",
														"nodeType": "YulTypedName",
														"src": "16927:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16937:3:16",
														"nodeType": "YulTypedName",
														"src": "16937:3:16",
														"type": ""
													}
												],
												"src": "16909:60:16"
											},
											{
												"body": {
													"nativeSrc": "17035:82:16",
													"nodeType": "YulBlock",
													"src": "17035:82:16",
													"statements": [
														{
															"nativeSrc": "17045:66:16",
															"nodeType": "YulAssignment",
															"src": "17045:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17103:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "17103:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "17085:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "17085:17:16"
																				},
																				"nativeSrc": "17085:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17085:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "17076:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "17076:8:16"
																		},
																		"nativeSrc": "17076:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17076:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17058:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "17058:17:16"
																},
																"nativeSrc": "17058:53:16",
																"nodeType": "YulFunctionCall",
																"src": "17058:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "17045:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "17045:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16975:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17015:5:16",
														"nodeType": "YulTypedName",
														"src": "17015:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "17025:9:16",
														"nodeType": "YulTypedName",
														"src": "17025:9:16",
														"type": ""
													}
												],
												"src": "16975:142:16"
											},
											{
												"body": {
													"nativeSrc": "17170:28:16",
													"nodeType": "YulBlock",
													"src": "17170:28:16",
													"statements": [
														{
															"nativeSrc": "17180:12:16",
															"nodeType": "YulAssignment",
															"src": "17180:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "17187:5:16",
																"nodeType": "YulIdentifier",
																"src": "17187:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17180:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17180:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "17123:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17156:5:16",
														"nodeType": "YulTypedName",
														"src": "17156:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17166:3:16",
														"nodeType": "YulTypedName",
														"src": "17166:3:16",
														"type": ""
													}
												],
												"src": "17123:75:16"
											},
											{
												"body": {
													"nativeSrc": "17280:193:16",
													"nodeType": "YulBlock",
													"src": "17280:193:16",
													"statements": [
														{
															"nativeSrc": "17290:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17290:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "17345:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "17345:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "17314:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "17314:30:16"
																},
																"nativeSrc": "17314:39:16",
																"nodeType": "YulFunctionCall",
																"src": "17314:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "17294:16:16",
																	"nodeType": "YulTypedName",
																	"src": "17294:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17369:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17369:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "17409:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "17409:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "17403:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17403:5:16"
																				},
																				"nativeSrc": "17403:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17403:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "17416:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "17416:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "17448:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "17448:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "17424:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "17424:23:16"
																				},
																				"nativeSrc": "17424:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "17424:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "17375:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "17375:27:16"
																		},
																		"nativeSrc": "17375:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "17375:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "17362:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "17362:6:16"
																},
																"nativeSrc": "17362:105:16",
																"nodeType": "YulFunctionCall",
																"src": "17362:105:16"
															},
															"nativeSrc": "17362:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "17362:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "17204:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17257:4:16",
														"nodeType": "YulTypedName",
														"src": "17257:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17263:6:16",
														"nodeType": "YulTypedName",
														"src": "17263:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "17271:7:16",
														"nodeType": "YulTypedName",
														"src": "17271:7:16",
														"type": ""
													}
												],
												"src": "17204:269:16"
											},
											{
												"body": {
													"nativeSrc": "17528:24:16",
													"nodeType": "YulBlock",
													"src": "17528:24:16",
													"statements": [
														{
															"nativeSrc": "17538:8:16",
															"nodeType": "YulAssignment",
															"src": "17538:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "17545:1:16",
																"nodeType": "YulLiteral",
																"src": "17545:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "17538:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17538:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "17479:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "17524:3:16",
														"nodeType": "YulTypedName",
														"src": "17524:3:16",
														"type": ""
													}
												],
												"src": "17479:73:16"
											},
											{
												"body": {
													"nativeSrc": "17611:136:16",
													"nodeType": "YulBlock",
													"src": "17611:136:16",
													"statements": [
														{
															"nativeSrc": "17621:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17621:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17635:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "17635:30:16"
																},
																"nativeSrc": "17635:32:16",
																"nodeType": "YulFunctionCall",
																"src": "17635:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17625:6:16",
																	"nodeType": "YulTypedName",
																	"src": "17625:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17720:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17720:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17726:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17726:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17734:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17734:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17676:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17676:43:16"
																},
																"nativeSrc": "17676:65:16",
																"nodeType": "YulFunctionCall",
																"src": "17676:65:16"
															},
															"nativeSrc": "17676:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "17676:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "17558:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "17597:4:16",
														"nodeType": "YulTypedName",
														"src": "17597:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "17603:6:16",
														"nodeType": "YulTypedName",
														"src": "17603:6:16",
														"type": ""
													}
												],
												"src": "17558:189:16"
											},
											{
												"body": {
													"nativeSrc": "17803:136:16",
													"nodeType": "YulBlock",
													"src": "17803:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "17870:63:16",
																"nodeType": "YulBlock",
																"src": "17870:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17914:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17914:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17921:1:16",
																					"nodeType": "YulLiteral",
																					"src": "17921:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17884:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "17884:29:16"
																			},
																			"nativeSrc": "17884:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17884:39:16"
																		},
																		"nativeSrc": "17884:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "17884:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17823:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17823:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17830:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17830:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17820:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "17820:2:16"
																},
																"nativeSrc": "17820:14:16",
																"nodeType": "YulFunctionCall",
																"src": "17820:14:16"
															},
															"nativeSrc": "17813:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17835:26:16",
																"nodeType": "YulBlock",
																"src": "17835:26:16",
																"statements": [
																	{
																		"nativeSrc": "17837:22:16",
																		"nodeType": "YulAssignment",
																		"src": "17837:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17850:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17850:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17857:1:16",
																					"nodeType": "YulLiteral",
																					"src": "17857:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17846:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "17846:3:16"
																			},
																			"nativeSrc": "17846:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17846:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17837:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "17837:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17817:2:16",
																"nodeType": "YulBlock",
																"src": "17817:2:16",
																"statements": []
															},
															"src": "17813:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17753:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17791:5:16",
														"nodeType": "YulTypedName",
														"src": "17791:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17798:3:16",
														"nodeType": "YulTypedName",
														"src": "17798:3:16",
														"type": ""
													}
												],
												"src": "17753:186:16"
											},
											{
												"body": {
													"nativeSrc": "18024:464:16",
													"nodeType": "YulBlock",
													"src": "18024:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "18050:431:16",
																"nodeType": "YulBlock",
																"src": "18050:431:16",
																"statements": [
																	{
																		"nativeSrc": "18064:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18064:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "18112:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "18112:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "18080:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "18080:31:16"
																			},
																			"nativeSrc": "18080:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18080:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "18068:8:16",
																				"nodeType": "YulTypedName",
																				"src": "18068:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "18131:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "18131:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "18154:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "18154:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "18182:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "18182:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "18164:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "18164:17:16"
																					},
																					"nativeSrc": "18164:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18164:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "18150:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "18150:3:16"
																			},
																			"nativeSrc": "18150:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18150:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "18135:11:16",
																				"nodeType": "YulTypedName",
																				"src": "18135:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "18351:27:16",
																			"nodeType": "YulBlock",
																			"src": "18351:27:16",
																			"statements": [
																				{
																					"nativeSrc": "18353:23:16",
																					"nodeType": "YulAssignment",
																					"src": "18353:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "18368:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "18368:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "18353:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "18353:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "18335:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "18335:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "18347:2:16",
																					"nodeType": "YulLiteral",
																					"src": "18347:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "18332:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "18332:2:16"
																			},
																			"nativeSrc": "18332:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18332:18:16"
																		},
																		"nativeSrc": "18329:49:16",
																		"nodeType": "YulIf",
																		"src": "18329:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "18420:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "18420:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "18437:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "18437:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "18465:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "18465:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "18447:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "18447:17:16"
																							},
																							"nativeSrc": "18447:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "18447:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "18433:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "18433:3:16"
																					},
																					"nativeSrc": "18433:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "18433:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "18391:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "18391:28:16"
																			},
																			"nativeSrc": "18391:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18391:80:16"
																		},
																		"nativeSrc": "18391:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18391:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "18041:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18041:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18046:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18046:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18038:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18038:2:16"
																},
																"nativeSrc": "18038:11:16",
																"nodeType": "YulFunctionCall",
																"src": "18038:11:16"
															},
															"nativeSrc": "18035:446:16",
															"nodeType": "YulIf",
															"src": "18035:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17945:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "18000:5:16",
														"nodeType": "YulTypedName",
														"src": "18000:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18007:3:16",
														"nodeType": "YulTypedName",
														"src": "18007:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "18012:10:16",
														"nodeType": "YulTypedName",
														"src": "18012:10:16",
														"type": ""
													}
												],
												"src": "17945:543:16"
											},
											{
												"body": {
													"nativeSrc": "18557:54:16",
													"nodeType": "YulBlock",
													"src": "18557:54:16",
													"statements": [
														{
															"nativeSrc": "18567:37:16",
															"nodeType": "YulAssignment",
															"src": "18567:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "18592:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18592:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "18598:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "18598:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "18588:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18588:3:16"
																},
																"nativeSrc": "18588:16:16",
																"nodeType": "YulFunctionCall",
																"src": "18588:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "18567:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "18567:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "18494:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "18532:4:16",
														"nodeType": "YulTypedName",
														"src": "18532:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "18538:5:16",
														"nodeType": "YulTypedName",
														"src": "18538:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "18548:8:16",
														"nodeType": "YulTypedName",
														"src": "18548:8:16",
														"type": ""
													}
												],
												"src": "18494:117:16"
											},
											{
												"body": {
													"nativeSrc": "18668:118:16",
													"nodeType": "YulBlock",
													"src": "18668:118:16",
													"statements": [
														{
															"nativeSrc": "18678:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18678:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18727:1:16",
																						"nodeType": "YulLiteral",
																						"src": "18727:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18730:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "18730:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18723:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "18723:3:16"
																				},
																				"nativeSrc": "18723:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18723:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18742:1:16",
																						"nodeType": "YulLiteral",
																						"src": "18742:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18738:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "18738:3:16"
																				},
																				"nativeSrc": "18738:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18738:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18694:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "18694:28:16"
																		},
																		"nativeSrc": "18694:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18694:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18690:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18690:3:16"
																},
																"nativeSrc": "18690:56:16",
																"nodeType": "YulFunctionCall",
																"src": "18690:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18682:4:16",
																	"nodeType": "YulTypedName",
																	"src": "18682:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18755:25:16",
															"nodeType": "YulAssignment",
															"src": "18755:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18769:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18769:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18775:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18775:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18765:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18765:3:16"
																},
																"nativeSrc": "18765:15:16",
																"nodeType": "YulFunctionCall",
																"src": "18765:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18755:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18755:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18617:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18645:4:16",
														"nodeType": "YulTypedName",
														"src": "18645:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18651:5:16",
														"nodeType": "YulTypedName",
														"src": "18651:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18661:6:16",
														"nodeType": "YulTypedName",
														"src": "18661:6:16",
														"type": ""
													}
												],
												"src": "18617:169:16"
											},
											{
												"body": {
													"nativeSrc": "18872:214:16",
													"nodeType": "YulBlock",
													"src": "18872:214:16",
													"statements": [
														{
															"nativeSrc": "19005:37:16",
															"nodeType": "YulAssignment",
															"src": "19005:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19032:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19032:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "19038:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19038:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "19013:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "19013:18:16"
																},
																"nativeSrc": "19013:29:16",
																"nodeType": "YulFunctionCall",
																"src": "19013:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "19005:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19005:4:16"
																}
															]
														},
														{
															"nativeSrc": "19051:29:16",
															"nodeType": "YulAssignment",
															"src": "19051:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "19062:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19062:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "19072:1:16",
																				"nodeType": "YulLiteral",
																				"src": "19072:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "19075:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "19075:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "19068:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "19068:3:16"
																		},
																		"nativeSrc": "19068:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19068:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "19059:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19059:2:16"
																},
																"nativeSrc": "19059:21:16",
																"nodeType": "YulFunctionCall",
																"src": "19059:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "19051:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "19051:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18791:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18853:4:16",
														"nodeType": "YulTypedName",
														"src": "18853:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18859:3:16",
														"nodeType": "YulTypedName",
														"src": "18859:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18867:4:16",
														"nodeType": "YulTypedName",
														"src": "18867:4:16",
														"type": ""
													}
												],
												"src": "18791:295:16"
											},
											{
												"body": {
													"nativeSrc": "19183:1303:16",
													"nodeType": "YulBlock",
													"src": "19183:1303:16",
													"statements": [
														{
															"nativeSrc": "19194:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19194:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "19241:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "19241:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "19208:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "19208:32:16"
																},
																"nativeSrc": "19208:37:16",
																"nodeType": "YulFunctionCall",
																"src": "19208:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "19198:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19198:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19330:22:16",
																"nodeType": "YulBlock",
																"src": "19330:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "19332:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "19332:16:16"
																			},
																			"nativeSrc": "19332:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "19332:18:16"
																		},
																		"nativeSrc": "19332:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "19332:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19302:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19302:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19310:18:16",
																		"nodeType": "YulLiteral",
																		"src": "19310:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19299:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19299:2:16"
																},
																"nativeSrc": "19299:30:16",
																"nodeType": "YulFunctionCall",
																"src": "19299:30:16"
															},
															"nativeSrc": "19296:56:16",
															"nodeType": "YulIf",
															"src": "19296:56:16"
														},
														{
															"nativeSrc": "19362:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19362:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "19408:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "19408:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "19402:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "19402:5:16"
																		},
																		"nativeSrc": "19402:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "19402:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "19376:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "19376:25:16"
																},
																"nativeSrc": "19376:38:16",
																"nodeType": "YulFunctionCall",
																"src": "19376:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "19366:6:16",
																	"nodeType": "YulTypedName",
																	"src": "19366:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "19507:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "19507:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "19513:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19513:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "19521:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19521:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "19461:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "19461:45:16"
																},
																"nativeSrc": "19461:67:16",
																"nodeType": "YulFunctionCall",
																"src": "19461:67:16"
															},
															"nativeSrc": "19461:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "19461:67:16"
														},
														{
															"nativeSrc": "19538:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "19538:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "19555:1:16",
																"nodeType": "YulLiteral",
																"src": "19555:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19542:9:16",
																	"nodeType": "YulTypedName",
																	"src": "19542:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "19566:17:16",
															"nodeType": "YulAssignment",
															"src": "19566:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "19579:4:16",
																"nodeType": "YulLiteral",
																"src": "19579:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "19566:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "19566:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19630:611:16",
																		"nodeType": "YulBlock",
																		"src": "19630:611:16",
																		"statements": [
																			{
																				"nativeSrc": "19644:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19644:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19663:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "19663:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19675:4:16",
																									"nodeType": "YulLiteral",
																									"src": "19675:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19671:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "19671:3:16"
																							},
																							"nativeSrc": "19671:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "19671:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19659:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "19659:3:16"
																					},
																					"nativeSrc": "19659:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19659:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19648:7:16",
																						"nodeType": "YulTypedName",
																						"src": "19648:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19695:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19695:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19741:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "19741:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19709:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "19709:31:16"
																					},
																					"nativeSrc": "19709:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19709:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19699:6:16",
																						"nodeType": "YulTypedName",
																						"src": "19699:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19759:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19759:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19768:1:16",
																					"nodeType": "YulLiteral",
																					"src": "19768:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19763:1:16",
																						"nodeType": "YulTypedName",
																						"src": "19763:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19827:163:16",
																					"nodeType": "YulBlock",
																					"src": "19827:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19852:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "19852:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19870:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "19870:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19875:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "19875:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19866:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "19866:3:16"
																												},
																												"nativeSrc": "19866:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "19866:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "19860:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "19860:5:16"
																										},
																										"nativeSrc": "19860:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "19860:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19845:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19845:6:16"
																								},
																								"nativeSrc": "19845:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19845:42:16"
																							},
																							"nativeSrc": "19845:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "19845:42:16"
																						},
																						{
																							"nativeSrc": "19904:24:16",
																							"nodeType": "YulAssignment",
																							"src": "19904:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19918:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "19918:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19926:1:16",
																										"nodeType": "YulLiteral",
																										"src": "19926:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19914:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19914:3:16"
																								},
																								"nativeSrc": "19914:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19914:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19904:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19904:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19945:31:16",
																							"nodeType": "YulAssignment",
																							"src": "19945:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19962:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "19962:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19973:2:16",
																										"nodeType": "YulLiteral",
																										"src": "19973:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19958:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19958:3:16"
																								},
																								"nativeSrc": "19958:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19958:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19945:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "19945:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19793:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "19793:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19796:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "19796:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19790:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "19790:2:16"
																					},
																					"nativeSrc": "19790:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19790:14:16"
																				},
																				"nativeSrc": "19782:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19805:21:16",
																					"nodeType": "YulBlock",
																					"src": "19805:21:16",
																					"statements": [
																						{
																							"nativeSrc": "19807:17:16",
																							"nodeType": "YulAssignment",
																							"src": "19807:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19816:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "19816:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19819:4:16",
																										"nodeType": "YulLiteral",
																										"src": "19819:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19812:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19812:3:16"
																								},
																								"nativeSrc": "19812:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19812:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19807:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "19807:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19786:3:16",
																					"nodeType": "YulBlock",
																					"src": "19786:3:16",
																					"statements": []
																				},
																				"src": "19782:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "20026:156:16",
																					"nodeType": "YulBlock",
																					"src": "20026:156:16",
																					"statements": [
																						{
																							"nativeSrc": "20044:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "20044:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20071:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "20071:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20076:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20076:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20067:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "20067:3:16"
																										},
																										"nativeSrc": "20067:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20067:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20061:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20061:5:16"
																								},
																								"nativeSrc": "20061:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20061:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "20048:9:16",
																									"nodeType": "YulTypedName",
																									"src": "20048:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "20111:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "20111:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "20138:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20138:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "20153:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "20153:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "20161:4:16",
																														"nodeType": "YulLiteral",
																														"src": "20161:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "20149:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "20149:3:16"
																												},
																												"nativeSrc": "20149:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "20149:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "20119:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "20119:18:16"
																										},
																										"nativeSrc": "20119:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20119:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "20104:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20104:6:16"
																								},
																								"nativeSrc": "20104:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20104:64:16"
																							},
																							"nativeSrc": "20104:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "20104:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "20009:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "20009:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "20018:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "20018:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "20006:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "20006:2:16"
																					},
																					"nativeSrc": "20006:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20006:19:16"
																				},
																				"nativeSrc": "20003:179:16",
																				"nodeType": "YulIf",
																				"src": "20003:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20202:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "20202:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "20216:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "20216:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "20224:1:16",
																											"nodeType": "YulLiteral",
																											"src": "20224:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "20212:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "20212:3:16"
																									},
																									"nativeSrc": "20212:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "20212:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "20228:1:16",
																									"nodeType": "YulLiteral",
																									"src": "20228:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "20208:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "20208:3:16"
																							},
																							"nativeSrc": "20208:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "20208:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20195:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "20195:6:16"
																					},
																					"nativeSrc": "20195:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20195:36:16"
																				},
																				"nativeSrc": "20195:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "20195:36:16"
																			}
																		]
																	},
																	"nativeSrc": "19623:618:16",
																	"nodeType": "YulCase",
																	"src": "19623:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19628:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19628:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "20258:222:16",
																		"nodeType": "YulBlock",
																		"src": "20258:222:16",
																		"statements": [
																			{
																				"nativeSrc": "20272:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "20272:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "20285:1:16",
																					"nodeType": "YulLiteral",
																					"src": "20285:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "20276:5:16",
																						"nodeType": "YulTypedName",
																						"src": "20276:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "20309:67:16",
																					"nodeType": "YulBlock",
																					"src": "20309:67:16",
																					"statements": [
																						{
																							"nativeSrc": "20327:35:16",
																							"nodeType": "YulAssignment",
																							"src": "20327:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "20346:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "20346:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "20351:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "20351:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "20342:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "20342:3:16"
																										},
																										"nativeSrc": "20342:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "20342:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "20336:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20336:5:16"
																								},
																								"nativeSrc": "20336:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "20336:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "20327:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20327:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "20302:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "20302:6:16"
																				},
																				"nativeSrc": "20299:77:16",
																				"nodeType": "YulIf",
																				"src": "20299:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "20396:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "20396:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "20455:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "20455:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "20462:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "20462:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "20402:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "20402:52:16"
																							},
																							"nativeSrc": "20402:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "20402:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "20389:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "20389:6:16"
																					},
																					"nativeSrc": "20389:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "20389:81:16"
																				},
																				"nativeSrc": "20389:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "20389:81:16"
																			}
																		]
																	},
																	"nativeSrc": "20250:230:16",
																	"nodeType": "YulCase",
																	"src": "20250:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "19603:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "19603:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19611:2:16",
																		"nodeType": "YulLiteral",
																		"src": "19611:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19600:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "19600:2:16"
																},
																"nativeSrc": "19600:14:16",
																"nodeType": "YulFunctionCall",
																"src": "19600:14:16"
															},
															"nativeSrc": "19593:887:16",
															"nodeType": "YulSwitch",
															"src": "19593:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "19091:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "19172:4:16",
														"nodeType": "YulTypedName",
														"src": "19172:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "19178:3:16",
														"nodeType": "YulTypedName",
														"src": "19178:3:16",
														"type": ""
													}
												],
												"src": "19091:1395:16"
											},
											{
												"body": {
													"nativeSrc": "20520:152:16",
													"nodeType": "YulBlock",
													"src": "20520:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20537:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20537:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20540:77:16",
																		"nodeType": "YulLiteral",
																		"src": "20540:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20530:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20530:6:16"
																},
																"nativeSrc": "20530:88:16",
																"nodeType": "YulFunctionCall",
																"src": "20530:88:16"
															},
															"nativeSrc": "20530:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "20530:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20634:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20634:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20637:4:16",
																		"nodeType": "YulLiteral",
																		"src": "20637:4:16",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20627:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20627:6:16"
																},
																"nativeSrc": "20627:15:16",
																"nodeType": "YulFunctionCall",
																"src": "20627:15:16"
															},
															"nativeSrc": "20627:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "20627:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20658:1:16",
																		"nodeType": "YulLiteral",
																		"src": "20658:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20661:4:16",
																		"nodeType": "YulLiteral",
																		"src": "20661:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20651:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20651:6:16"
																},
																"nativeSrc": "20651:15:16",
																"nodeType": "YulFunctionCall",
																"src": "20651:15:16"
															},
															"nativeSrc": "20651:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "20651:15:16"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20492:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "20492:180:16"
											},
											{
												"body": {
													"nativeSrc": "20804:206:16",
													"nodeType": "YulBlock",
													"src": "20804:206:16",
													"statements": [
														{
															"nativeSrc": "20814:26:16",
															"nodeType": "YulAssignment",
															"src": "20814:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20826:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "20826:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20837:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20837:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20822:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20822:3:16"
																},
																"nativeSrc": "20822:18:16",
																"nodeType": "YulFunctionCall",
																"src": "20822:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20814:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20814:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20894:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20894:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20907:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20907:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20918:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20918:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20903:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20903:3:16"
																		},
																		"nativeSrc": "20903:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20903:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20850:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20850:43:16"
																},
																"nativeSrc": "20850:71:16",
																"nodeType": "YulFunctionCall",
																"src": "20850:71:16"
															},
															"nativeSrc": "20850:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "20850:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20975:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20975:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20988:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20988:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20999:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20999:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20984:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20984:3:16"
																		},
																		"nativeSrc": "20984:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20984:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20931:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20931:43:16"
																},
																"nativeSrc": "20931:72:16",
																"nodeType": "YulFunctionCall",
																"src": "20931:72:16"
															},
															"nativeSrc": "20931:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "20931:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "20678:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20768:9:16",
														"nodeType": "YulTypedName",
														"src": "20768:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20780:6:16",
														"nodeType": "YulTypedName",
														"src": "20780:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20788:6:16",
														"nodeType": "YulTypedName",
														"src": "20788:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20799:4:16",
														"nodeType": "YulTypedName",
														"src": "20799:4:16",
														"type": ""
													}
												],
												"src": "20678:332:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106100f3575f3560e01c806370a0823111610095578063b88d4fde11610064578063b88d4fde14610281578063c87b56dd1461029d578063d0def521146102cd578063e985e9c5146102e9576100f3565b806370a08231146101f957806375794a3c1461022957806395d89b4114610247578063a22cb46514610265576100f3565b8063095ea7b3116100d1578063095ea7b31461017557806323b872dd1461019157806342842e0e146101ad5780636352211e146101c9576100f3565b806301ffc9a7146100f757806306fdde0314610127578063081812fc14610145575b5f80fd5b610111600480360381019061010c91906119a5565b610319565b60405161011e91906119ea565b60405180910390f35b61012f610379565b60405161013c9190611a8d565b60405180910390f35b61015f600480360381019061015a9190611ae0565b610408565b60405161016c9190611b4a565b60405180910390f35b61018f600480360381019061018a9190611b8d565b610422565b005b6101ab60048036038101906101a69190611bcb565b610439565b005b6101c760048036038101906101c29190611bcb565b610538565b005b6101e360048036038101906101de9190611ae0565b610557565b6040516101f09190611b4a565b60405180910390f35b610213600480360381019061020e9190611c1b565b6105dd565b6040516102209190611c55565b60405180910390f35b610231610693565b60405161023e9190611c55565b60405180910390f35b61024f610699565b60405161025c9190611a8d565b60405180910390f35b61027f600480360381019061027a9190611c98565b610729565b005b61029b60048036038101906102969190611e02565b61073f565b005b6102b760048036038101906102b29190611ae0565b61075c565b6040516102c49190611a8d565b60405180910390f35b6102e760048036038101906102e29190611edf565b610866565b005b61030360048036038101906102fe9190611f3c565b6108dd565b60405161031091906119ea565b60405180910390f35b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037257506103718261096b565b5b9050919050565b60605f805461038790611fa7565b80601f01602080910402602001604051908101604052809291908181526020018280546103b390611fa7565b80156103fe5780601f106103d5576101008083540402835291602001916103fe565b820191905f5260205f20905b8154815290600101906020018083116103e157829003601f168201915b5050505050905090565b5f61041282610a4c565b61041b82610ac7565b9050919050565b610434828261042f610b00565b610b07565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104a9575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104a09190611b4a565b60405180910390fd5b5f6104bc83836104b7610b00565b610c86565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610532578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161052993929190611fd7565b60405180910390fd5b50505050565b61055283838360405180602001604052805f81525061073f565b505050565b5f8061056283610d1a565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105d457826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016105cb9190611c55565b60405180910390fd5b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361064e575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016106459190611b4a565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60075481565b6060600180546106a890611fa7565b80601f01602080910402602001604051908101604052809291908181526020018280546106d490611fa7565b801561071f5780601f106106f65761010080835404028352916020019161071f565b820191905f5260205f20905b81548152906001019060200180831161070257829003601f168201915b5050505050905090565b61073b610734610b00565b8383610d53565b5050565b61074a848484610439565b61075684848484610ebc565b50505050565b606061076782610a4c565b5f60065f8481526020019081526020015f20805461078490611fa7565b80601f01602080910402602001604051908101604052809291908181526020018280546107b090611fa7565b80156107fb5780601f106107d2576101008083540402835291602001916107fb565b820191905f5260205f20905b8154815290600101906020018083116107de57829003601f168201915b505050505090505f61080b61106e565b90505f81510361081f578192505050610861565b5f8251111561085357808260405160200161083b929190612046565b60405160208183030381529060405292505050610861565b61085c84611084565b925050505b919050565b610872836007546110e9565b6108c160075483838080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050506111dc565b60075f8154809291906108d390612096565b9190505550505050565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610a3557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610a455750610a44826112ae565b5b9050919050565b5f73ffffffffffffffffffffffffffffffffffffffff16610a6c82610d1a565b73ffffffffffffffffffffffffffffffffffffffff1603610ac457806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610abb9190611c55565b60405180910390fd5b50565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b5f80610b1284610557565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015610b7c57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015610b8f5750610b8d81846108dd565b155b15610bd157826040517fa9fbf51f000000000000000000000000000000000000000000000000000000008152600401610bc89190611b4a565b60405180910390fd5b8460045f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4809150509392505050565b5f80610c93858585611317565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16148015610ced57505f60065f8681526020019081526020015f208054610ce890611fa7565b905014155b15610d0f5760065f8581526020019081526020015f205f610d0e91906118e7565b5b809150509392505050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dc357816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610dba9190611b4a565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610eaf91906119ea565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b1115611068578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02610eff610b00565b8685856040518563ffffffff1660e01b8152600401610f21949392919061212f565b6020604051808303815f875af1925050508015610f5c57506040513d601f19601f82011682018060405250810190610f59919061218d565b60015b610fdd573d805f8114610f8a576040519150601f19603f3d011682016040523d82523d5f602084013e610f8f565b606091505b505f815103610fd557836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610fcc9190611b4a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461106657836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161105d9190611b4a565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b606061108f82610a4c565b5f61109861106e565b90505f8151116110b65760405180602001604052805f8152506110e1565b806110c084611549565b6040516020016110d1929190612046565b6040516020818303038152906040525b915050919050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611159575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016111509190611b4a565b60405180910390fd5b5f61116583835f610c86565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146111d7575f6040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016111ce9190611b4a565b60405180910390fd5b505050565b5f73ffffffffffffffffffffffffffffffffffffffff166111fc83610d1a565b73ffffffffffffffffffffffffffffffffffffffff160361125457816040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161124b9190611c55565b60405180910390fd5b8060065f8481526020019081526020015f2090816112729190612355565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516112a29190611c55565b60405180910390a15050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8061132284610d1a565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461136357611362818486611613565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146114155760045f8581526020019081526020015f205f6101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461149457600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b60605f6001611557846116d6565b0190505f8167ffffffffffffffff81111561157557611574611cde565b5b6040519080825280601f01601f1916602001820160405280156115a75781602001600182028036833780820191505090505b5090505f82602001820190505b600115611608578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816115fd576115fc612424565b5b0494505f85036115b4575b819350505050919050565b61161e838383611827565b6116d1575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361169257806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116899190611c55565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016116c8929190612451565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611732577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161172857611727612424565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061176f576d04ee2d6d415b85acef8100000000838161176557611764612424565b5b0492506020810190505b662386f26fc10000831061179e57662386f26fc10000838161179457611793612424565b5b0492506010810190505b6305f5e10083106117c7576305f5e10083816117bd576117bc612424565b5b0492506008810190505b61271083106117ec5761271083816117e2576117e1612424565b5b0492506004810190505b6064831061180f576064838161180557611804612424565b5b0492506002810190505b600a831061181e576001810190505b80915050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118de57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061189f575061189e84846108dd565b5b806118dd57508273ffffffffffffffffffffffffffffffffffffffff166118c583610ac7565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5080546118f390611fa7565b5f825580601f106119045750611921565b601f0160209004905f5260205f20908101906119209190611924565b5b50565b5b8082111561193b575f815f905550600101611925565b5090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61198481611950565b811461198e575f80fd5b50565b5f8135905061199f8161197b565b92915050565b5f602082840312156119ba576119b9611948565b5b5f6119c784828501611991565b91505092915050565b5f8115159050919050565b6119e4816119d0565b82525050565b5f6020820190506119fd5f8301846119db565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611a3a578082015181840152602081019050611a1f565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611a5f82611a03565b611a698185611a0d565b9350611a79818560208601611a1d565b611a8281611a45565b840191505092915050565b5f6020820190508181035f830152611aa58184611a55565b905092915050565b5f819050919050565b611abf81611aad565b8114611ac9575f80fd5b50565b5f81359050611ada81611ab6565b92915050565b5f60208284031215611af557611af4611948565b5b5f611b0284828501611acc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611b3482611b0b565b9050919050565b611b4481611b2a565b82525050565b5f602082019050611b5d5f830184611b3b565b92915050565b611b6c81611b2a565b8114611b76575f80fd5b50565b5f81359050611b8781611b63565b92915050565b5f8060408385031215611ba357611ba2611948565b5b5f611bb085828601611b79565b9250506020611bc185828601611acc565b9150509250929050565b5f805f60608486031215611be257611be1611948565b5b5f611bef86828701611b79565b9350506020611c0086828701611b79565b9250506040611c1186828701611acc565b9150509250925092565b5f60208284031215611c3057611c2f611948565b5b5f611c3d84828501611b79565b91505092915050565b611c4f81611aad565b82525050565b5f602082019050611c685f830184611c46565b92915050565b611c77816119d0565b8114611c81575f80fd5b50565b5f81359050611c9281611c6e565b92915050565b5f8060408385031215611cae57611cad611948565b5b5f611cbb85828601611b79565b9250506020611ccc85828601611c84565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611d1482611a45565b810181811067ffffffffffffffff82111715611d3357611d32611cde565b5b80604052505050565b5f611d4561193f565b9050611d518282611d0b565b919050565b5f67ffffffffffffffff821115611d7057611d6f611cde565b5b611d7982611a45565b9050602081019050919050565b828183375f83830152505050565b5f611da6611da184611d56565b611d3c565b905082815260208101848484011115611dc257611dc1611cda565b5b611dcd848285611d86565b509392505050565b5f82601f830112611de957611de8611cd6565b5b8135611df9848260208601611d94565b91505092915050565b5f805f8060808587031215611e1a57611e19611948565b5b5f611e2787828801611b79565b9450506020611e3887828801611b79565b9350506040611e4987828801611acc565b925050606085013567ffffffffffffffff811115611e6a57611e6961194c565b5b611e7687828801611dd5565b91505092959194509250565b5f80fd5b5f80fd5b5f8083601f840112611e9f57611e9e611cd6565b5b8235905067ffffffffffffffff811115611ebc57611ebb611e82565b5b602083019150836001820283011115611ed857611ed7611e86565b5b9250929050565b5f805f60408486031215611ef657611ef5611948565b5b5f611f0386828701611b79565b935050602084013567ffffffffffffffff811115611f2457611f2361194c565b5b611f3086828701611e8a565b92509250509250925092565b5f8060408385031215611f5257611f51611948565b5b5f611f5f85828601611b79565b9250506020611f7085828601611b79565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680611fbe57607f821691505b602082108103611fd157611fd0611f7a565b5b50919050565b5f606082019050611fea5f830186611b3b565b611ff76020830185611c46565b6120046040830184611b3b565b949350505050565b5f81905092915050565b5f61202082611a03565b61202a818561200c565b935061203a818560208601611a1d565b80840191505092915050565b5f6120518285612016565b915061205d8284612016565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6120a082611aad565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120d2576120d1612069565b5b600182019050919050565b5f81519050919050565b5f82825260208201905092915050565b5f612101826120dd565b61210b81856120e7565b935061211b818560208601611a1d565b61212481611a45565b840191505092915050565b5f6080820190506121425f830187611b3b565b61214f6020830186611b3b565b61215c6040830185611c46565b818103606083015261216e81846120f7565b905095945050505050565b5f815190506121878161197b565b92915050565b5f602082840312156121a2576121a1611948565b5b5f6121af84828501612179565b91505092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026122147fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826121d9565b61221e86836121d9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61225961225461224f84611aad565b612236565b611aad565b9050919050565b5f819050919050565b6122728361223f565b61228661227e82612260565b8484546121e5565b825550505050565b5f90565b61229a61228e565b6122a5818484612269565b505050565b5b818110156122c8576122bd5f82612292565b6001810190506122ab565b5050565b601f82111561230d576122de816121b8565b6122e7846121ca565b810160208510156122f6578190505b61230a612302856121ca565b8301826122aa565b50505b505050565b5f82821c905092915050565b5f61232d5f1984600802612312565b1980831691505092915050565b5f612345838361231e565b9150826002028217905092915050565b61235e82611a03565b67ffffffffffffffff81111561237757612376611cde565b5b6123818254611fa7565b61238c8282856122cc565b5f60209050601f8311600181146123bd575f84156123ab578287015190505b6123b5858261233a565b86555061241c565b601f1984166123cb866121b8565b5f5b828110156123f2578489015182556001820191506020850194506020810190506123cd565b8683101561240f578489015161240b601f89168261231e565b8355505b6001600288020188555050505b505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506124645f830185611b3b565b6124716020830184611c46565b939250505056fea264697066735822122010fc9cf3ab007018ddfb8702372bc8cd6bca3520ed02791d802f03749430a0a164736f6c63430008150033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD0DEF521 EQ PUSH2 0x2CD JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x2E9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x265 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1C9 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x127 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x111 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH2 0x319 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11E SWAP2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH2 0x379 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16C SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1B8D JUMP JUMPDEST PUSH2 0x422 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A6 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x439 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1BCB JUMP JUMPDEST PUSH2 0x538 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DE SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x557 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20E SWAP2 SWAP1 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x5DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x220 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x231 PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23E SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24F PUSH2 0x699 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x1C98 JUMP JUMPDEST PUSH2 0x729 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1E02 JUMP JUMPDEST PUSH2 0x73F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B2 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0x75C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1A8D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1EDF JUMP JUMPDEST PUSH2 0x866 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1F3C JUMP JUMPDEST PUSH2 0x8DD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x372 JUMPI POP PUSH2 0x371 DUP3 PUSH2 0x96B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x387 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3B3 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3D5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x412 DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH2 0x41B DUP3 PUSH2 0xAC7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x434 DUP3 DUP3 PUSH2 0x42F PUSH2 0xB00 JUMP JUMPDEST PUSH2 0xB07 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4A9 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x4BC DUP4 DUP4 PUSH2 0x4B7 PUSH2 0xB00 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x532 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x529 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1FD7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x552 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x73F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x562 DUP4 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x5D4 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x64E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x645 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x6A8 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6D4 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x71F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6F6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x71F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x702 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x73B PUSH2 0x734 PUSH2 0xB00 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD53 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x74A DUP5 DUP5 DUP5 PUSH2 0x439 JUMP JUMPDEST PUSH2 0x756 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEBC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x767 DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH0 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0x784 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7B0 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 PUSH2 0x80B PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0x81F JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH0 DUP3 MLOAD GT ISZERO PUSH2 0x853 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x83B SWAP3 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x861 JUMP JUMPDEST PUSH2 0x85C DUP5 PUSH2 0x1084 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x872 DUP4 PUSH1 0x7 SLOAD PUSH2 0x10E9 JUMP JUMPDEST PUSH2 0x8C1 PUSH1 0x7 SLOAD DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP PUSH2 0x11DC JUMP JUMPDEST PUSH1 0x7 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x8D3 SWAP1 PUSH2 0x2096 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xA35 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0xA45 JUMPI POP PUSH2 0xA44 DUP3 PUSH2 0x12AE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA6C DUP3 PUSH2 0xD1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC4 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB12 DUP5 PUSH2 0x557 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xB7C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xB8F JUMPI POP PUSH2 0xB8D DUP2 DUP5 PUSH2 0x8DD JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0xBD1 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 PUSH1 0x4 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xC93 DUP6 DUP6 DUP6 PUSH2 0x1317 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xCED JUMPI POP PUSH0 PUSH1 0x6 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xCE8 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST SWAP1 POP EQ ISZERO JUMPDEST ISZERO PUSH2 0xD0F JUMPI PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0xD0E SWAP2 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST JUMPDEST DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDC3 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBA SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x19EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1068 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xEFF PUSH2 0xB00 JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF21 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x212F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF5C JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF59 SWAP2 SWAP1 PUSH2 0x218D JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xFDD JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF8A JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF8F JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xFD5 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1066 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x105D SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x108F DUP3 PUSH2 0xA4C JUMP JUMPDEST PUSH0 PUSH2 0x1098 PUSH2 0x106E JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD GT PUSH2 0x10B6 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0x10E1 JUMP JUMPDEST DUP1 PUSH2 0x10C0 DUP5 PUSH2 0x1549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x10D1 SWAP3 SWAP2 SWAP1 PUSH2 0x2046 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1159 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x1165 DUP4 DUP4 PUSH0 PUSH2 0xC86 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CE SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11FC DUP4 PUSH2 0xD1A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1254 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 DUP2 PUSH2 0x1272 SWAP2 SWAP1 PUSH2 0x2355 JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x12A2 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1322 DUP5 PUSH2 0xD1A JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1363 JUMPI PUSH2 0x1362 DUP2 DUP5 DUP7 PUSH2 0x1613 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1415 JUMPI PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1494 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x1 PUSH2 0x1557 DUP5 PUSH2 0x16D6 JUMP JUMPDEST ADD SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1575 JUMPI PUSH2 0x1574 PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x15A7 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1608 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH0 DUP6 SUB PUSH2 0x15B4 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161E DUP4 DUP4 DUP4 PUSH2 0x1827 JUMP JUMPDEST PUSH2 0x16D1 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1692 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1689 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16C8 SWAP3 SWAP2 SWAP1 PUSH2 0x2451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1732 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1728 JUMPI PUSH2 0x1727 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x176F JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1765 JUMPI PUSH2 0x1764 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x179E JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1794 JUMPI PUSH2 0x1793 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x17C7 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x17BD JUMPI PUSH2 0x17BC PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x17EC JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x17E2 JUMPI PUSH2 0x17E1 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x180F JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1805 JUMPI PUSH2 0x1804 PUSH2 0x2424 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x181E JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18DE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x189F JUMPI POP PUSH2 0x189E DUP5 DUP5 PUSH2 0x8DD JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x18DD JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18C5 DUP4 PUSH2 0xAC7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x18F3 SWAP1 PUSH2 0x1FA7 JUMP JUMPDEST PUSH0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1904 JUMPI POP PUSH2 0x1921 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1920 SWAP2 SWAP1 PUSH2 0x1924 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x193B JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x1925 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1984 DUP2 PUSH2 0x1950 JUMP JUMPDEST DUP2 EQ PUSH2 0x198E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x199F DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19BA JUMPI PUSH2 0x19B9 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x19C7 DUP5 DUP3 DUP6 ADD PUSH2 0x1991 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E4 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19FD PUSH0 DUP4 ADD DUP5 PUSH2 0x19DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A3A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A1F JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A5F DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x1A69 DUP2 DUP6 PUSH2 0x1A0D JUMP JUMPDEST SWAP4 POP PUSH2 0x1A79 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x1A82 DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AA5 DUP2 DUP5 PUSH2 0x1A55 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1ABF DUP2 PUSH2 0x1AAD JUMP JUMPDEST DUP2 EQ PUSH2 0x1AC9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ADA DUP2 PUSH2 0x1AB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AF5 JUMPI PUSH2 0x1AF4 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B02 DUP5 DUP3 DUP6 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B34 DUP3 PUSH2 0x1B0B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B44 DUP2 PUSH2 0x1B2A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B5D PUSH0 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B6C DUP2 PUSH2 0x1B2A JUMP JUMPDEST DUP2 EQ PUSH2 0x1B76 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B87 DUP2 PUSH2 0x1B63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1BA3 JUMPI PUSH2 0x1BA2 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BB0 DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC1 DUP6 DUP3 DUP7 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BE2 JUMPI PUSH2 0x1BE1 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BEF DUP7 DUP3 DUP8 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C00 DUP7 DUP3 DUP8 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C11 DUP7 DUP3 DUP8 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C30 JUMPI PUSH2 0x1C2F PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C3D DUP5 DUP3 DUP6 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4F DUP2 PUSH2 0x1AAD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C68 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C77 DUP2 PUSH2 0x19D0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C81 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C92 DUP2 PUSH2 0x1C6E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CAE JUMPI PUSH2 0x1CAD PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CBB DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1CCC DUP6 DUP3 DUP7 ADD PUSH2 0x1C84 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1D14 DUP3 PUSH2 0x1A45 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1D33 JUMPI PUSH2 0x1D32 PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D45 PUSH2 0x193F JUMP JUMPDEST SWAP1 POP PUSH2 0x1D51 DUP3 DUP3 PUSH2 0x1D0B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1D70 JUMPI PUSH2 0x1D6F PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST PUSH2 0x1D79 DUP3 PUSH2 0x1A45 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DA6 PUSH2 0x1DA1 DUP5 PUSH2 0x1D56 JUMP JUMPDEST PUSH2 0x1D3C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC1 PUSH2 0x1CDA JUMP JUMPDEST JUMPDEST PUSH2 0x1DCD DUP5 DUP3 DUP6 PUSH2 0x1D86 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1DF9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1D94 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1E1A JUMPI PUSH2 0x1E19 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E27 DUP8 DUP3 DUP9 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1E38 DUP8 DUP3 DUP9 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1E49 DUP8 DUP3 DUP9 ADD PUSH2 0x1ACC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E6A JUMPI PUSH2 0x1E69 PUSH2 0x194C JUMP JUMPDEST JUMPDEST PUSH2 0x1E76 DUP8 DUP3 DUP9 ADD PUSH2 0x1DD5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E9F JUMPI PUSH2 0x1E9E PUSH2 0x1CD6 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBC JUMPI PUSH2 0x1EBB PUSH2 0x1E82 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1ED8 JUMPI PUSH2 0x1ED7 PUSH2 0x1E86 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F03 DUP7 DUP3 DUP8 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F24 JUMPI PUSH2 0x1F23 PUSH2 0x194C JUMP JUMPDEST JUMPDEST PUSH2 0x1F30 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8A JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F51 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5F DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F70 DUP6 DUP3 DUP7 ADD PUSH2 0x1B79 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FBE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FD1 JUMPI PUSH2 0x1FD0 PUSH2 0x1F7A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1FEA PUSH0 DUP4 ADD DUP7 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x1FF7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C46 JUMP JUMPDEST PUSH2 0x2004 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1B3B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2020 DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH2 0x202A DUP2 DUP6 PUSH2 0x200C JUMP JUMPDEST SWAP4 POP PUSH2 0x203A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A1D JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2051 DUP3 DUP6 PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP PUSH2 0x205D DUP3 DUP5 PUSH2 0x2016 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20A0 DUP3 PUSH2 0x1AAD JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x20D2 JUMPI PUSH2 0x20D1 PUSH2 0x2069 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2101 DUP3 PUSH2 0x20DD JUMP JUMPDEST PUSH2 0x210B DUP2 DUP6 PUSH2 0x20E7 JUMP JUMPDEST SWAP4 POP PUSH2 0x211B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A1D JUMP JUMPDEST PUSH2 0x2124 DUP2 PUSH2 0x1A45 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2142 PUSH0 DUP4 ADD DUP8 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x214F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x215C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C46 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x216E DUP2 DUP5 PUSH2 0x20F7 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2187 DUP2 PUSH2 0x197B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21A2 JUMPI PUSH2 0x21A1 PUSH2 0x1948 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21AF DUP5 DUP3 DUP6 ADD PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2214 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x21D9 JUMP JUMPDEST PUSH2 0x221E DUP7 DUP4 PUSH2 0x21D9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2259 PUSH2 0x2254 PUSH2 0x224F DUP5 PUSH2 0x1AAD JUMP JUMPDEST PUSH2 0x2236 JUMP JUMPDEST PUSH2 0x1AAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2272 DUP4 PUSH2 0x223F JUMP JUMPDEST PUSH2 0x2286 PUSH2 0x227E DUP3 PUSH2 0x2260 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x21E5 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x229A PUSH2 0x228E JUMP JUMPDEST PUSH2 0x22A5 DUP2 DUP5 DUP5 PUSH2 0x2269 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x22C8 JUMPI PUSH2 0x22BD PUSH0 DUP3 PUSH2 0x2292 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x22AB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x230D JUMPI PUSH2 0x22DE DUP2 PUSH2 0x21B8 JUMP JUMPDEST PUSH2 0x22E7 DUP5 PUSH2 0x21CA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x22F6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x230A PUSH2 0x2302 DUP6 PUSH2 0x21CA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x22AA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x232D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2312 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2345 DUP4 DUP4 PUSH2 0x231E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x235E DUP3 PUSH2 0x1A03 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2377 JUMPI PUSH2 0x2376 PUSH2 0x1CDE JUMP JUMPDEST JUMPDEST PUSH2 0x2381 DUP3 SLOAD PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x238C DUP3 DUP3 DUP6 PUSH2 0x22CC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x23BD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x23AB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x23B5 DUP6 DUP3 PUSH2 0x233A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x241C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x23CB DUP7 PUSH2 0x21B8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x23F2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x23CD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x240F JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x240B PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x231E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2464 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B3B JUMP JUMPDEST PUSH2 0x2471 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C46 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT 0xFC SWAP13 RETURN 0xAB STOP PUSH17 0x18DDFB8702372BC8CD6BCA3520ED02791D DUP1 0x2F SUB PUSH21 0x9430A0A164736F6C63430008150033000000000000 ",
							"sourceMap": "198:299:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:205:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2488:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3621:155;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3447:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4268:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4912:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:241;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;289:26:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2641:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3843:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5110:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;954:594:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;322:172:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4053:153:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;683:205:8;785:4;830:10;823:18;;808:33;;;:11;:33;;;;:73;;;;845:36;869:11;845:23;:36::i;:::-;808:73;801:80;;683:205;;;:::o;2488:89:5:-;2533:13;2565:5;2558:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2488:89;:::o;3621:155::-;3688:7;3707:23;3722:7;3707:14;:23::i;:::-;3748:21;3761:7;3748:12;:21::i;:::-;3741:28;;3621:155;;;:::o;3447:113::-;3518:35;3527:2;3531:7;3540:12;:10;:12::i;:::-;3518:8;:35::i;:::-;;3447:113;;:::o;4268:578::-;4376:1;4362:16;;:2;:16;;;4358:87;;4431:1;4401:33;;;;;;;;;;;:::i;:::-;;;;;;;;4358:87;4663:21;4687:34;4695:2;4699:7;4708:12;:10;:12::i;:::-;4687:7;:34::i;:::-;4663:58;;4752:4;4735:21;;:13;:21;;;4731:109;;4800:4;4806:7;4815:13;4779:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4731:109;4348:498;4268:578;;;:::o;4912:132::-;4998:39;5015:4;5021:2;5025:7;4998:39;;;;;;;;;;;;:16;:39::i;:::-;4912:132;;;:::o;2185:241::-;2248:7;2267:13;2283:17;2292:7;2283:8;:17::i;:::-;2267:33;;2331:1;2314:19;;:5;:19;;;2310:88;;2379:7;2356:31;;;;;;;;;;;:::i;:::-;;;;;;;;2310:88;2414:5;2407:12;;;2185:241;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;289:26:0:-;;;;:::o;2641:93:5:-;2688:13;2720:7;2713:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2641:93;:::o;3843:144::-;3928:52;3947:12;:10;:12::i;:::-;3961:8;3971;3928:18;:52::i;:::-;3843:144;;:::o;5110:208::-;5223:31;5236:4;5242:2;5246:7;5223:12;:31::i;:::-;5264:47;5287:4;5293:2;5297:7;5306:4;5264:22;:47::i;:::-;5110:208;;;;:::o;954:594:8:-;1027:13;1052:23;1067:7;1052:14;:23::i;:::-;1086;1112:10;:19;1123:7;1112:19;;;;;;;;;;;1086:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1141:18;1162:10;:8;:10::i;:::-;1141:31;;1267:1;1251:4;1245:18;:23;1241:70;;1291:9;1284:16;;;;;;1241:70;1436:1;1416:9;1410:23;:27;1406:95;;;1474:4;1480:9;1460:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1453:37;;;;;;1406:95;1518:23;1533:7;1518:14;:23::i;:::-;1511:30;;;;954:594;;;;:::o;322:172:0:-;405:23;411:3;416:11;;405:5;:23::i;:::-;436:31;449:11;;462:4;;436:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:12;:31::i;:::-;475:11;;:13;;;;;;;;;:::i;:::-;;;;;;322:172;;;:::o;4053:153:5:-;4141:4;4164:18;:25;4183:5;4164:25;;;;;;;;;;;;;;;:35;4190:8;4164:35;;;;;;;;;;;;;;;;;;;;;;;;;4157:42;;4053:153;;;;:::o;1561:300::-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;15428:179::-;15534:1;15505:31;;:17;15514:7;15505:8;:17::i;:::-;:31;;;15501:100;;15582:7;15559:31;;;;;;;;;;;:::i;:::-;;;;;;;;15501:100;15428:179;:::o;6063:127::-;6133:7;6159:15;:24;6175:7;6159:24;;;;;;;;;;;;;;;;;;;;;6152:31;;6063:127;;;:::o;641:96:10:-;694:7;720:10;713:17;;641:96;:::o;14323:500:5:-;14410:7;14429:13;14445:16;14453:7;14445;:16::i;:::-;14429:32;;14597:1;14581:18;;:4;:18;;;;:35;;;;;14612:4;14603:13;;:5;:13;;;;14581:35;:69;;;;;14621:29;14638:5;14645:4;14621:16;:29::i;:::-;14620:30;14581:69;14577:134;;;14695:4;14673:27;;;;;;;;;;;:::i;:::-;;;;;;;;14577:134;14748:2;14721:15;:24;14737:7;14721:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14785:7;14781:2;14765:28;;14774:5;14765:28;;;;;;;;;;;;14811:5;14804:12;;;14323:500;;;;;:::o;2241:333:8:-;2336:7;2355:21;2379:32;2393:2;2397:7;2406:4;2379:13;:32::i;:::-;2355:56;;2440:1;2426:16;;:2;:16;;;:58;;;;;2483:1;2452:10;:19;2463:7;2452:19;;;;;;;;;;;2446:33;;;;;:::i;:::-;;;:38;;2426:58;2422:115;;;2507:10;:19;2518:7;2507:19;;;;;;;;;;;;2500:26;;;;:::i;:::-;2422:115;2554:13;2547:20;;;2241:333;;;;;:::o;5832:115:5:-;5898:7;5924;:16;5932:7;5924:16;;;;;;;;;;;;;;;;;;;;;5917:23;;5832:115;;;:::o;15032:312::-;15159:1;15139:22;;:8;:22;;;15135:91;;15206:8;15184:31;;;;;;;;;;;:::i;:::-;;;;;;;;15135:91;15273:8;15235:18;:25;15254:5;15235:25;;;;;;;;;;;;;;;:35;15261:8;15235:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15318:8;15296:41;;15311:5;15296:41;;;15328:8;15296:41;;;;;;:::i;:::-;;;;;;;;15032:312;;;:::o;16146:782::-;16279:1;16262:2;:14;;;:18;16258:664;;;16316:2;16300:36;;;16337:12;:10;:12::i;:::-;16351:4;16357:7;16366:4;16300:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;16296:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16626:1;16609:6;:13;:18;16605:293;;16680:2;16658:25;;;;;;;;;;;:::i;:::-;;;;;;;;16605:293;16850:6;16844:13;16835:6;16831:2;16827:15;16820:38;16296:616;16428:41;;;16418:51;;;:6;:51;;;;16414:130;;16522:2;16500:25;;;;;;;;;;;:::i;:::-;;;;;;;;16414:130;16372:186;16258:664;16146:782;;;;:::o;3298:92::-;3349:13;3374:9;;;;;;;;;;;;;;3298:92;:::o;2800:256::-;2864:13;2889:23;2904:7;2889:14;:23::i;:::-;2923:21;2947:10;:8;:10::i;:::-;2923:34;;2998:1;2980:7;2974:21;:25;:75;;;;;;;;;;;;;;;;;3016:7;3025:18;:7;:16;:18::i;:::-;3002:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2974:75;2967:82;;;2800:256;;;:::o;9974:327::-;10055:1;10041:16;;:2;:16;;;10037:87;;10110:1;10080:33;;;;;;;;;;;:::i;:::-;;;;;;;;10037:87;10133:21;10157:32;10165:2;10169:7;10186:1;10157:7;:32::i;:::-;10133:56;;10228:1;10203:27;;:13;:27;;;10199:96;;10281:1;10253:31;;;;;;;;;;;:::i;:::-;;;;;;;;10199:96;10027:274;9974:327;;:::o;1733:277:8:-;1857:1;1828:31;;:17;1837:7;1828:8;:17::i;:::-;:31;;;1824:100;;1905:7;1882:31;;;;;;;;;;;:::i;:::-;;;;;;;;1824:100;1955:9;1933:10;:19;1944:7;1933:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;1980:23;1995:7;1980:23;;;;;;:::i;:::-;;;;;;;;1733:277;;:::o;747:146:12:-;823:4;861:25;846:40;;;:11;:40;;;;839:47;;747:146;;;:::o;8957:695:5:-;9043:7;9062:12;9077:17;9086:7;9077:8;:17::i;:::-;9062:32;;9170:1;9154:18;;:4;:18;;;9150:86;;9188:37;9205:4;9211;9217:7;9188:16;:37::i;:::-;9150:86;9296:1;9280:18;;:4;:18;;;9276:156;;9321:15;:24;9337:7;9321:24;;;;;;;;;;;;9314:31;;;;;;;;;;;9406:1;9387:9;:15;9397:4;9387:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9276:156;9460:1;9446:16;;:2;:16;;;9442:107;;9523:1;9506:9;:13;9516:2;9506:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9442:107;9578:2;9559:7;:16;9567:7;9559:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9615:7;9611:2;9596:27;;9605:4;9596:27;;;;;;;;;;;;9641:4;9634:11;;;8957:695;;;;;:::o;639:699:11:-;695:13;744:14;781:1;761:17;772:5;761:10;:17::i;:::-;:21;744:38;;796:20;830:6;819:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;796:41;;851:11;977:6;973:2;969:15;961:6;957:28;950:35;;1012:283;1019:4;1012:283;;;1043:5;;;;;;;;1182:11;1177:2;1170:5;1166:14;1161:33;1156:3;1148:47;1239:2;1230:11;;;;;;:::i;:::-;;;;;1272:1;1263:5;:10;1012:283;1259:21;1012:283;1315:6;1308:13;;;;;639:699;;;:::o;7201:368:5:-;7313:38;7327:5;7334:7;7343;7313:13;:38::i;:::-;7308:255;;7388:1;7371:19;;:5;:19;;;7367:186;;7440:7;7417:31;;;;;;;;;;;:::i;:::-;;;;;;;;7367:186;7521:7;7530;7494:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7308:255;7201:368;;;:::o;12206:916:14:-;12259:7;12278:14;12295:1;12278:18;;12343:8;12334:5;:17;12330:103;;12380:8;12371:17;;;;;;:::i;:::-;;;;;12416:2;12406:12;;;;12330:103;12459:8;12450:5;:17;12446:103;;12496:8;12487:17;;;;;;:::i;:::-;;;;;12532:2;12522:12;;;;12446:103;12575:8;12566:5;:17;12562:103;;12612:8;12603:17;;;;;;:::i;:::-;;;;;12648:2;12638:12;;;;12562:103;12691:7;12682:5;:16;12678:100;;12727:7;12718:16;;;;;;:::i;:::-;;;;;12762:1;12752:11;;;;12678:100;12804:7;12795:5;:16;12791:100;;12840:7;12831:16;;;;;;:::i;:::-;;;;;12875:1;12865:11;;;;12791:100;12917:7;12908:5;:16;12904:100;;12953:7;12944:16;;;;;;:::i;:::-;;;;;12988:1;12978:11;;;;12904:100;13030:7;13021:5;:16;13017:66;;13067:1;13057:11;;;;13017:66;13109:6;13102:13;;;12206:916;;;:::o;6501:272:5:-;6604:4;6658:1;6639:21;;:7;:21;;;;:127;;;;;6686:7;6677:16;;:5;:16;;;:52;;;;6697:32;6714:5;6721:7;6697:16;:32::i;:::-;6677:52;:88;;;;6758:7;6733:32;;:21;6746:7;6733:12;:21::i;:::-;:32;;;6677:88;6639:127;6620:146;;6501:272;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:117::-;10100:1;10097;10090:12;10114:117;10223:1;10220;10213:12;10251:553;10309:8;10319:6;10369:3;10362:4;10354:6;10350:17;10346:27;10336:122;;10377:79;;:::i;:::-;10336:122;10490:6;10477:20;10467:30;;10520:18;10512:6;10509:30;10506:117;;;10542:79;;:::i;:::-;10506:117;10656:4;10648:6;10644:17;10632:29;;10710:3;10702:4;10694:6;10690:17;10680:8;10676:32;10673:41;10670:128;;;10717:79;;:::i;:::-;10670:128;10251:553;;;;;:::o;10810:674::-;10890:6;10898;10906;10955:2;10943:9;10934:7;10930:23;10926:32;10923:119;;;10961:79;;:::i;:::-;10923:119;11081:1;11106:53;11151:7;11142:6;11131:9;11127:22;11106:53;:::i;:::-;11096:63;;11052:117;11236:2;11225:9;11221:18;11208:32;11267:18;11259:6;11256:30;11253:117;;;11289:79;;:::i;:::-;11253:117;11402:65;11459:7;11450:6;11439:9;11435:22;11402:65;:::i;:::-;11384:83;;;;11179:298;10810:674;;;;;:::o;11490:474::-;11558:6;11566;11615:2;11603:9;11594:7;11590:23;11586:32;11583:119;;;11621:79;;:::i;:::-;11583:119;11741:1;11766:53;11811:7;11802:6;11791:9;11787:22;11766:53;:::i;:::-;11756:63;;11712:117;11868:2;11894:53;11939:7;11930:6;11919:9;11915:22;11894:53;:::i;:::-;11884:63;;11839:118;11490:474;;;;;:::o;11970:180::-;12018:77;12015:1;12008:88;12115:4;12112:1;12105:15;12139:4;12136:1;12129:15;12156:320;12200:6;12237:1;12231:4;12227:12;12217:22;;12284:1;12278:4;12274:12;12305:18;12295:81;;12361:4;12353:6;12349:17;12339:27;;12295:81;12423:2;12415:6;12412:14;12392:18;12389:38;12386:84;;12442:18;;:::i;:::-;12386:84;12207:269;12156:320;;;:::o;12482:442::-;12631:4;12669:2;12658:9;12654:18;12646:26;;12682:71;12750:1;12739:9;12735:17;12726:6;12682:71;:::i;:::-;12763:72;12831:2;12820:9;12816:18;12807:6;12763:72;:::i;:::-;12845;12913:2;12902:9;12898:18;12889:6;12845:72;:::i;:::-;12482:442;;;;;;:::o;12930:148::-;13032:11;13069:3;13054:18;;12930:148;;;;:::o;13084:390::-;13190:3;13218:39;13251:5;13218:39;:::i;:::-;13273:89;13355:6;13350:3;13273:89;:::i;:::-;13266:96;;13371:65;13429:6;13424:3;13417:4;13410:5;13406:16;13371:65;:::i;:::-;13461:6;13456:3;13452:16;13445:23;;13194:280;13084:390;;;;:::o;13480:435::-;13660:3;13682:95;13773:3;13764:6;13682:95;:::i;:::-;13675:102;;13794:95;13885:3;13876:6;13794:95;:::i;:::-;13787:102;;13906:3;13899:10;;13480:435;;;;;:::o;13921:180::-;13969:77;13966:1;13959:88;14066:4;14063:1;14056:15;14090:4;14087:1;14080:15;14107:233;14146:3;14169:24;14187:5;14169:24;:::i;:::-;14160:33;;14215:66;14208:5;14205:77;14202:103;;14285:18;;:::i;:::-;14202:103;14332:1;14325:5;14321:13;14314:20;;14107:233;;;:::o;14346:98::-;14397:6;14431:5;14425:12;14415:22;;14346:98;;;:::o;14450:168::-;14533:11;14567:6;14562:3;14555:19;14607:4;14602:3;14598:14;14583:29;;14450:168;;;;:::o;14624:373::-;14710:3;14738:38;14770:5;14738:38;:::i;:::-;14792:70;14855:6;14850:3;14792:70;:::i;:::-;14785:77;;14871:65;14929:6;14924:3;14917:4;14910:5;14906:16;14871:65;:::i;:::-;14961:29;14983:6;14961:29;:::i;:::-;14956:3;14952:39;14945:46;;14714:283;14624:373;;;;:::o;15003:640::-;15198:4;15236:3;15225:9;15221:19;15213:27;;15250:71;15318:1;15307:9;15303:17;15294:6;15250:71;:::i;:::-;15331:72;15399:2;15388:9;15384:18;15375:6;15331:72;:::i;:::-;15413;15481:2;15470:9;15466:18;15457:6;15413:72;:::i;:::-;15532:9;15526:4;15522:20;15517:2;15506:9;15502:18;15495:48;15560:76;15631:4;15622:6;15560:76;:::i;:::-;15552:84;;15003:640;;;;;;;:::o;15649:141::-;15705:5;15736:6;15730:13;15721:22;;15752:32;15778:5;15752:32;:::i;:::-;15649:141;;;;:::o;15796:349::-;15865:6;15914:2;15902:9;15893:7;15889:23;15885:32;15882:119;;;15920:79;;:::i;:::-;15882:119;16040:1;16065:63;16120:7;16111:6;16100:9;16096:22;16065:63;:::i;:::-;16055:73;;16011:127;15796:349;;;;:::o;16151:141::-;16200:4;16223:3;16215:11;;16246:3;16243:1;16236:14;16280:4;16277:1;16267:18;16259:26;;16151:141;;;:::o;16298:93::-;16335:6;16382:2;16377;16370:5;16366:14;16362:23;16352:33;;16298:93;;;:::o;16397:107::-;16441:8;16491:5;16485:4;16481:16;16460:37;;16397:107;;;;:::o;16510:393::-;16579:6;16629:1;16617:10;16613:18;16652:97;16682:66;16671:9;16652:97;:::i;:::-;16770:39;16800:8;16789:9;16770:39;:::i;:::-;16758:51;;16842:4;16838:9;16831:5;16827:21;16818:30;;16891:4;16881:8;16877:19;16870:5;16867:30;16857:40;;16586:317;;16510:393;;;;;:::o;16909:60::-;16937:3;16958:5;16951:12;;16909:60;;;:::o;16975:142::-;17025:9;17058:53;17076:34;17085:24;17103:5;17085:24;:::i;:::-;17076:34;:::i;:::-;17058:53;:::i;:::-;17045:66;;16975:142;;;:::o;17123:75::-;17166:3;17187:5;17180:12;;17123:75;;;:::o;17204:269::-;17314:39;17345:7;17314:39;:::i;:::-;17375:91;17424:41;17448:16;17424:41;:::i;:::-;17416:6;17409:4;17403:11;17375:91;:::i;:::-;17369:4;17362:105;17280:193;17204:269;;;:::o;17479:73::-;17524:3;17479:73;:::o;17558:189::-;17635:32;;:::i;:::-;17676:65;17734:6;17726;17720:4;17676:65;:::i;:::-;17611:136;17558:189;;:::o;17753:186::-;17813:120;17830:3;17823:5;17820:14;17813:120;;;17884:39;17921:1;17914:5;17884:39;:::i;:::-;17857:1;17850:5;17846:13;17837:22;;17813:120;;;17753:186;;:::o;17945:543::-;18046:2;18041:3;18038:11;18035:446;;;18080:38;18112:5;18080:38;:::i;:::-;18164:29;18182:10;18164:29;:::i;:::-;18154:8;18150:44;18347:2;18335:10;18332:18;18329:49;;;18368:8;18353:23;;18329:49;18391:80;18447:22;18465:3;18447:22;:::i;:::-;18437:8;18433:37;18420:11;18391:80;:::i;:::-;18050:431;;18035:446;17945:543;;;:::o;18494:117::-;18548:8;18598:5;18592:4;18588:16;18567:37;;18494:117;;;;:::o;18617:169::-;18661:6;18694:51;18742:1;18738:6;18730:5;18727:1;18723:13;18694:51;:::i;:::-;18690:56;18775:4;18769;18765:15;18755:25;;18668:118;18617:169;;;;:::o;18791:295::-;18867:4;19013:29;19038:3;19032:4;19013:29;:::i;:::-;19005:37;;19075:3;19072:1;19068:11;19062:4;19059:21;19051:29;;18791:295;;;;:::o;19091:1395::-;19208:37;19241:3;19208:37;:::i;:::-;19310:18;19302:6;19299:30;19296:56;;;19332:18;;:::i;:::-;19296:56;19376:38;19408:4;19402:11;19376:38;:::i;:::-;19461:67;19521:6;19513;19507:4;19461:67;:::i;:::-;19555:1;19579:4;19566:17;;19611:2;19603:6;19600:14;19628:1;19623:618;;;;20285:1;20302:6;20299:77;;;20351:9;20346:3;20342:19;20336:26;20327:35;;20299:77;20402:67;20462:6;20455:5;20402:67;:::i;:::-;20396:4;20389:81;20258:222;19593:887;;19623:618;19675:4;19671:9;19663:6;19659:22;19709:37;19741:4;19709:37;:::i;:::-;19768:1;19782:208;19796:7;19793:1;19790:14;19782:208;;;19875:9;19870:3;19866:19;19860:26;19852:6;19845:42;19926:1;19918:6;19914:14;19904:24;;19973:2;19962:9;19958:18;19945:31;;19819:4;19816:1;19812:12;19807:17;;19782:208;;;20018:6;20009:7;20006:19;20003:179;;;20076:9;20071:3;20067:19;20061:26;20119:48;20161:4;20153:6;20149:17;20138:9;20119:48;:::i;:::-;20111:6;20104:64;20026:156;20003:179;20228:1;20224;20216:6;20212:14;20208:22;20202:4;20195:36;19630:611;;;19593:887;;19183:1303;;;19091:1395;;:::o;20492:180::-;20540:77;20537:1;20530:88;20637:4;20634:1;20627:15;20661:4;20658:1;20651:15;20678:332;20799:4;20837:2;20826:9;20822:18;20814:26;;20850:71;20918:1;20907:9;20903:17;20894:6;20850:71;:::i;:::-;20931:72;20999:2;20988:9;20984:18;20975:6;20931:72;:::i;:::-;20678:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1878000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,string)": "infinite",
								"name()": "infinite",
								"nextTokenId()": "2470",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "881",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 198,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 238,
									"end": 283,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 238,
									"end": 283,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 238,
									"end": 283,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 238,
									"end": 283,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "A"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "537461636B204E46547300000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "PUSH",
									"source": 5,
									"value": "534E465400000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 198,
									"end": 497,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 16,
									"value": "49"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 16,
									"value": "48"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 16,
									"value": "47"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 16,
									"value": "52"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 16,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 16,
									"value": "67"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 16,
									"value": "65"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 16,
									"value": "6"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "10"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 16,
									"value": "77"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "11"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 16,
									"value": "86"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "87"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 198,
									"end": 497,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 198,
									"end": 497,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 198,
									"end": 497,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 198,
									"end": 497,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 497,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122010fc9cf3ab007018ddfb8702372bc8cd6bca3520ed02791d802f03749430a0a164736f6c63430008150033",
									".code": [
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "D0DEF521"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "75794A3C"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 198,
											"end": 497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 888,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 683,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 683,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 683,
											"end": 888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2488,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2488,
											"end": 2577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 3621,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3621,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 3621,
											"end": 3776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 3447,
											"end": 3560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4268,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4268,
											"end": 4846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4912,
											"end": 5044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4912,
											"end": 5044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 2185,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2185,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 289,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 289,
											"end": 315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2641,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 2641,
											"end": 2734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 3843,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3843,
											"end": 3987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 5110,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5110,
											"end": 5318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 954,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 954,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 954,
											"end": 1548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 322,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 322,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 322,
											"end": 494,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 322,
											"end": 494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 322,
											"end": 494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 322,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 322,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 322,
											"end": 494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 322,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 4053,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4053,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 4053,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 683,
											"end": 888,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 683,
											"end": 888,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 785,
											"end": 789,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 840,
											"name": "PUSH",
											"source": 8,
											"value": "49064906"
										},
										{
											"begin": 823,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 823,
											"end": 841,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 808,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 808,
											"end": 841,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 808,
											"end": 841,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 808,
											"end": 819,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 808,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 808,
											"end": 841,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 808,
											"end": 841,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 808,
											"end": 841,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 808,
											"end": 881,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 808,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 808,
											"end": 881,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 808,
											"end": 881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 869,
											"end": 880,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 845,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 845,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 845,
											"end": 881,
											"name": "tag",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 845,
											"end": 881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 808,
											"end": 881,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 808,
											"end": 881,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 801,
											"end": 881,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 801,
											"end": 881,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 683,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3688,
											"end": 3695,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3722,
											"end": 3729,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 3707,
											"end": 3730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3707,
											"end": 3730,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 3707,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 3748,
											"end": 3769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3748,
											"end": 3769,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 3748,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3769,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3741,
											"end": 3769,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3621,
											"end": 3776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3531,
											"end": 3538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3552,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3540,
											"end": 3550,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3540,
											"end": 3552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3552,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3540,
											"end": 3552,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3518,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3553,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3518,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3447,
											"end": 3560,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4378,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4364,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4378,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4378,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4362,
											"end": 4378,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4445,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4358,
											"end": 4445,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4431,
											"end": 4432,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4401,
											"end": 4434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4434,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4445,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 4358,
											"end": 4445,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4695,
											"end": 4697,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4699,
											"end": 4706,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4708,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4708,
											"end": 4720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4708,
											"end": 4720,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 4708,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4687,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 4687,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4721,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4663,
											"end": 4721,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4752,
											"end": 4756,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4748,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4735,
											"end": 4756,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 4731,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4731,
											"end": 4840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4800,
											"end": 4804,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4813,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4815,
											"end": 4828,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "PUSH",
											"source": 5,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 4779,
											"end": 4829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4779,
											"end": 4829,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4731,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4731,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5015,
											"end": 5019,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5025,
											"end": 5032,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 4998,
											"end": 5037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 4998,
											"end": 5037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4912,
											"end": 5044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2280,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2292,
											"end": 2299,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2291,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 2283,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2283,
											"end": 2300,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 2283,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2300,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2300,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2331,
											"end": 2332,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2333,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2398,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2310,
											"end": 2398,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 2356,
											"end": 2387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2356,
											"end": 2387,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2310,
											"end": 2398,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 2310,
											"end": 2398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2419,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2185,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 289,
											"end": 315,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 315,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 289,
											"end": 315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2701,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2720,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2713,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2713,
											"end": 2727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2713,
											"end": 2727,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2641,
											"end": 2734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3947,
											"end": 3959,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3947,
											"end": 3957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3947,
											"end": 3959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3947,
											"end": 3959,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3947,
											"end": 3959,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3961,
											"end": 3969,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3971,
											"end": 3979,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3946,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 3928,
											"end": 3980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3928,
											"end": 3980,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3928,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3843,
											"end": 3987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5254,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5236,
											"end": 5240,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5242,
											"end": 5244,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5246,
											"end": 5253,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5223,
											"end": 5254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5223,
											"end": 5254,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5223,
											"end": 5254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5264,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5287,
											"end": 5291,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5297,
											"end": 5304,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5306,
											"end": 5310,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5264,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5264,
											"end": 5311,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5264,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1027,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1052,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1067,
											"end": 1074,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1066,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1052,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1075,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 1052,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1109,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1122,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1123,
											"end": 1130,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1112,
											"end": 1131,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1086,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1086,
											"end": 1131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1086,
											"end": 1131,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1162,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1162,
											"end": 1172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 1162,
											"end": 1172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1172,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1141,
											"end": 1172,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1267,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1263,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1268,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1311,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1241,
											"end": 1311,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1291,
											"end": 1300,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1284,
											"end": 1300,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1311,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 1241,
											"end": 1311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1433,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1410,
											"end": 1437,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1406,
											"end": 1501,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1406,
											"end": 1501,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1406,
											"end": 1501,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1478,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1480,
											"end": 1489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1460,
											"end": 1490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1490,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 1453,
											"end": 1490,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1406,
											"end": 1501,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1406,
											"end": 1501,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1533,
											"end": 1540,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 1518,
											"end": 1541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1518,
											"end": 1541,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 1518,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1511,
											"end": 1541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 954,
											"end": 1548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 322,
											"end": 494,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 322,
											"end": 494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 405,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 411,
											"end": 414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 416,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 427,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 405,
											"end": 410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 405,
											"end": 428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 405,
											"end": 428,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 405,
											"end": 428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 449,
											"end": 460,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 449,
											"end": 460,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 462,
											"end": 466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 462,
											"end": 466,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 448,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 436,
											"end": 467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 436,
											"end": 467,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 436,
											"end": 467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 475,
											"end": 486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 475,
											"end": 488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 475,
											"end": 488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 475,
											"end": 488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 475,
											"end": 488,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 322,
											"end": 494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4141,
											"end": 4145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4188,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4189,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4190,
											"end": 4198,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 4164,
											"end": 4199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4157,
											"end": 4199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4053,
											"end": 4206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15428,
											"end": 15607,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 15428,
											"end": 15607,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15534,
											"end": 15535,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15505,
											"end": 15536,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15505,
											"end": 15536,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15505,
											"end": 15522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 15514,
											"end": 15521,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15505,
											"end": 15513,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 15505,
											"end": 15522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15505,
											"end": 15522,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 15505,
											"end": 15522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15505,
											"end": 15536,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15505,
											"end": 15536,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15505,
											"end": 15536,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15501,
											"end": 15601,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 15501,
											"end": 15601,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15582,
											"end": 15589,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 15559,
											"end": 15590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15559,
											"end": 15590,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15501,
											"end": 15601,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 15501,
											"end": 15601,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15428,
											"end": 15607,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15428,
											"end": 15607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6190,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6063,
											"end": 6190,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6174,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6182,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6159,
											"end": 6183,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6152,
											"end": 6183,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6190,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6063,
											"end": 6190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 641,
											"end": 737,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 641,
											"end": 737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 694,
											"end": 701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 730,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 713,
											"end": 730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 713,
											"end": 730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 737,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 641,
											"end": 737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14323,
											"end": 14823,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 14323,
											"end": 14823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14410,
											"end": 14417,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14429,
											"end": 14442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14445,
											"end": 14461,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 14453,
											"end": 14460,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14445,
											"end": 14452,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 14445,
											"end": 14461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14445,
											"end": 14461,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 14445,
											"end": 14461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14429,
											"end": 14461,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14429,
											"end": 14461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14597,
											"end": 14598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14581,
											"end": 14599,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14581,
											"end": 14599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14585,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14599,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14581,
											"end": 14599,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14599,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14599,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14616,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 14581,
											"end": 14616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14612,
											"end": 14616,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14616,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14603,
											"end": 14616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14608,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14616,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14603,
											"end": 14616,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14616,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 14603,
											"end": 14616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14616,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 14581,
											"end": 14616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14650,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14650,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 14581,
											"end": 14650,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14650,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14621,
											"end": 14650,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 14638,
											"end": 14643,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14645,
											"end": 14649,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14621,
											"end": 14637,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 14621,
											"end": 14650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14621,
											"end": 14650,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 14621,
											"end": 14650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14620,
											"end": 14650,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14581,
											"end": 14650,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 14581,
											"end": 14650,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14577,
											"end": 14711,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 14577,
											"end": 14711,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 14577,
											"end": 14711,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 14695,
											"end": 14699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "PUSH",
											"source": 5,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 14673,
											"end": 14700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14673,
											"end": 14700,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 14577,
											"end": 14711,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 14577,
											"end": 14711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 14748,
											"end": 14750,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14736,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14737,
											"end": 14744,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14745,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 14721,
											"end": 14750,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14785,
											"end": 14792,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 14781,
											"end": 14783,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14774,
											"end": 14779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "PUSH",
											"source": 5,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 14765,
											"end": 14793,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 14811,
											"end": 14816,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 14804,
											"end": 14816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14804,
											"end": 14816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14804,
											"end": 14816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14823,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14823,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14323,
											"end": 14823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2574,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 2241,
											"end": 2574,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2336,
											"end": 2343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2355,
											"end": 2376,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2393,
											"end": 2395,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2397,
											"end": 2404,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2406,
											"end": 2410,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2379,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 2379,
											"end": 2411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 2379,
											"end": 2411,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2411,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2355,
											"end": 2411,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2440,
											"end": 2441,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2442,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2426,
											"end": 2442,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2428,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2442,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2426,
											"end": 2442,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2442,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2484,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2484,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2484,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2426,
											"end": 2484,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2484,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2483,
											"end": 2484,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2462,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2470,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2452,
											"end": 2471,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 2446,
											"end": 2479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2479,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2484,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2446,
											"end": 2484,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2484,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 2426,
											"end": 2484,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2537,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2537,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2422,
											"end": 2537,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2517,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2525,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2507,
											"end": 2526,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 2500,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "tag",
											"source": 8,
											"value": "186"
										},
										{
											"begin": 2500,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2422,
											"end": 2537,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 2422,
											"end": 2537,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2567,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2567,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2547,
											"end": 2567,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2574,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2574,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2574,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2241,
											"end": 2574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5832,
											"end": 5947,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 5832,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5898,
											"end": 5905,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5931,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5932,
											"end": 5939,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5924,
											"end": 5940,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5917,
											"end": 5940,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5917,
											"end": 5940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5832,
											"end": 5947,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5832,
											"end": 5947,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5832,
											"end": 5947,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5832,
											"end": 5947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15032,
											"end": 15344,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 15032,
											"end": 15344,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15159,
											"end": 15160,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15139,
											"end": 15161,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15139,
											"end": 15161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15139,
											"end": 15147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 15139,
											"end": 15161,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15139,
											"end": 15161,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15139,
											"end": 15161,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15135,
											"end": 15226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 15135,
											"end": 15226,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 15206,
											"end": 15214,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 15184,
											"end": 15215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15184,
											"end": 15215,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 15135,
											"end": 15226,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 15135,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15273,
											"end": 15281,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15253,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15254,
											"end": 15259,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15235,
											"end": 15260,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15261,
											"end": 15269,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15270,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 15235,
											"end": 15281,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15318,
											"end": 15326,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15311,
											"end": 15316,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "PUSH",
											"source": 5,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15328,
											"end": 15336,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 15296,
											"end": 15337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 15296,
											"end": 15337,
											"name": "LOG3",
											"source": 5
										},
										{
											"begin": 15032,
											"end": 15344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15032,
											"end": 15344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15032,
											"end": 15344,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 15032,
											"end": 15344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16146,
											"end": 16928,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 16146,
											"end": 16928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16279,
											"end": 16280,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16262,
											"end": 16264,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16262,
											"end": 16276,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16262,
											"end": 16276,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16262,
											"end": 16276,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 16262,
											"end": 16280,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 16258,
											"end": 16922,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16258,
											"end": 16922,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 16258,
											"end": 16922,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16316,
											"end": 16318,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16336,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16300,
											"end": 16336,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16336,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 16337,
											"end": 16349,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 16337,
											"end": 16347,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 16337,
											"end": 16349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16337,
											"end": 16349,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 16337,
											"end": 16349,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16351,
											"end": 16355,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 16357,
											"end": 16364,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16366,
											"end": 16370,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 16300,
											"end": 16371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 16300,
											"end": 16371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 16300,
											"end": 16371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "tag",
											"source": 5,
											"value": "206"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16626,
											"end": 16627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 16609,
											"end": 16615,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16609,
											"end": 16622,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16609,
											"end": 16627,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16605,
											"end": 16898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 16605,
											"end": 16898,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16680,
											"end": 16682,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 16658,
											"end": 16683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16658,
											"end": 16683,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16605,
											"end": 16898,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 16605,
											"end": 16898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16850,
											"end": 16856,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16844,
											"end": 16857,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16835,
											"end": 16841,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16831,
											"end": 16833,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 16827,
											"end": 16842,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16820,
											"end": 16858,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 16296,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16428,
											"end": 16469,
											"name": "PUSH",
											"source": 5,
											"value": "150B7A02"
										},
										{
											"begin": 16428,
											"end": 16469,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 16428,
											"end": 16469,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16418,
											"end": 16424,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 16418,
											"end": 16469,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 16414,
											"end": 16544,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 16414,
											"end": 16544,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 16522,
											"end": 16524,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 16500,
											"end": 16525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 16500,
											"end": 16525,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 16414,
											"end": 16544,
											"name": "tag",
											"source": 5,
											"value": "211"
										},
										{
											"begin": 16414,
											"end": 16544,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16372,
											"end": 16558,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16258,
											"end": 16922,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 16258,
											"end": 16922,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 16146,
											"end": 16928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16146,
											"end": 16928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16146,
											"end": 16928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16146,
											"end": 16928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 16146,
											"end": 16928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3390,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 3298,
											"end": 3390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3349,
											"end": 3362,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3374,
											"end": 3383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3298,
											"end": 3390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 3056,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 2800,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2864,
											"end": 2877,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2904,
											"end": 2911,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2903,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2889,
											"end": 2912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2889,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2944,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2947,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2947,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 2957,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2947,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2957,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2923,
											"end": 2957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2980,
											"end": 2987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 2995,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 2999,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3016,
											"end": 3023,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3025,
											"end": 3032,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3041,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 3025,
											"end": 3043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 3025,
											"end": 3043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 3002,
											"end": 3044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 2974,
											"end": 3049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3049,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2967,
											"end": 3049,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 3056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 3056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 3056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2800,
											"end": 3056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 10301,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 9974,
											"end": 10301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10055,
											"end": 10056,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10041,
											"end": 10057,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10041,
											"end": 10057,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10041,
											"end": 10043,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10041,
											"end": 10057,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10041,
											"end": 10057,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10041,
											"end": 10057,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 10037,
											"end": 10124,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10110,
											"end": 10111,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "PUSH",
											"source": 5,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 10080,
											"end": 10113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10080,
											"end": 10113,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10037,
											"end": 10124,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 10037,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10154,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10189,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 10165,
											"end": 10167,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10169,
											"end": 10176,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10186,
											"end": 10187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10157,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 10157,
											"end": 10189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10157,
											"end": 10189,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 10157,
											"end": 10189,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10189,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10133,
											"end": 10189,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10230,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10203,
											"end": 10230,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10216,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10230,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10203,
											"end": 10230,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10203,
											"end": 10230,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10199,
											"end": 10295,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10199,
											"end": 10295,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10281,
											"end": 10282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "PUSH",
											"source": 5,
											"value": "73C6AC6E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 10253,
											"end": 10284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10253,
											"end": 10284,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10199,
											"end": 10295,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 10199,
											"end": 10295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10027,
											"end": 10301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 10301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 10301,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9974,
											"end": 10301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1733,
											"end": 2010,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 1733,
											"end": 2010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1828,
											"end": 1859,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1859,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1837,
											"end": 1844,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1836,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 1828,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1859,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1828,
											"end": 1859,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1828,
											"end": 1859,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1824,
											"end": 1924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1905,
											"end": 1912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1882,
											"end": 1913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1882,
											"end": 1913,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1824,
											"end": 1924,
											"name": "tag",
											"source": 8,
											"value": "230"
										},
										{
											"begin": 1824,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1955,
											"end": 1964,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1943,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1944,
											"end": 1951,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1952,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "233"
										},
										{
											"begin": 1933,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "tag",
											"source": 8,
											"value": "232"
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1933,
											"end": 1964,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "PUSH",
											"source": 8,
											"value": "F8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7"
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 1980,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1980,
											"end": 2003,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 2010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 2010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1733,
											"end": 2010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 747,
											"end": 893,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 747,
											"end": 893,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 823,
											"end": 827,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 861,
											"end": 886,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 846,
											"end": 886,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 886,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 846,
											"end": 886,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 846,
											"end": 857,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 846,
											"end": 886,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 846,
											"end": 886,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 846,
											"end": 886,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 846,
											"end": 886,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 839,
											"end": 886,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 839,
											"end": 886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 747,
											"end": 893,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 747,
											"end": 893,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 747,
											"end": 893,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 747,
											"end": 893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8957,
											"end": 9652,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8957,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9043,
											"end": 9050,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9062,
											"end": 9074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9086,
											"end": 9093,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9077,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 9077,
											"end": 9094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 9077,
											"end": 9094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9062,
											"end": 9094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9062,
											"end": 9094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9170,
											"end": 9171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9154,
											"end": 9172,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9154,
											"end": 9172,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9154,
											"end": 9158,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9154,
											"end": 9172,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9154,
											"end": 9172,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9154,
											"end": 9172,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9150,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9150,
											"end": 9236,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9188,
											"end": 9225,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9205,
											"end": 9209,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9211,
											"end": 9215,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9217,
											"end": 9224,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9188,
											"end": 9204,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 9188,
											"end": 9225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9188,
											"end": 9225,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 9188,
											"end": 9225,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9150,
											"end": 9236,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 9150,
											"end": 9236,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9296,
											"end": 9297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9280,
											"end": 9284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9280,
											"end": 9298,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9276,
											"end": 9432,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9336,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9337,
											"end": 9344,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9321,
											"end": 9345,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9314,
											"end": 9345,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9406,
											"end": 9407,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9397,
											"end": 9401,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9387,
											"end": 9407,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9276,
											"end": 9432,
											"name": "tag",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 9276,
											"end": 9432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9460,
											"end": 9461,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9446,
											"end": 9462,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9462,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9448,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9462,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9446,
											"end": 9462,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9446,
											"end": 9462,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9442,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9442,
											"end": 9549,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9524,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 9506,
											"end": 9515,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9516,
											"end": 9518,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9442,
											"end": 9549,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 9442,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9578,
											"end": 9580,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9566,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9574,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9575,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 9559,
											"end": 9580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9615,
											"end": 9622,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9611,
											"end": 9613,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9605,
											"end": 9609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "PUSH",
											"source": 5,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9596,
											"end": 9623,
											"name": "LOG4",
											"source": 5
										},
										{
											"begin": 9641,
											"end": 9645,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9645,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9634,
											"end": 9645,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 9652,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 9652,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 9652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 9652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 9652,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 9652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 639,
											"end": 1338,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 639,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 695,
											"end": 708,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 744,
											"end": 758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 782,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 761,
											"end": 778,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 772,
											"end": 777,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 761,
											"end": 771,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 761,
											"end": 778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 761,
											"end": 778,
											"name": "tag",
											"source": 11,
											"value": "244"
										},
										{
											"begin": 761,
											"end": 778,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 761,
											"end": 782,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 744,
											"end": 782,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 744,
											"end": 782,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 816,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 836,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "248"
										},
										{
											"begin": 819,
											"end": 837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "tag",
											"source": 11,
											"value": "247"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 819,
											"end": 837,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 819,
											"end": 837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 837,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 796,
											"end": 837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 851,
											"end": 862,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 983,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 973,
											"end": 975,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 969,
											"end": 984,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 961,
											"end": 967,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 957,
											"end": 985,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 950,
											"end": 985,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 950,
											"end": 985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "tag",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1019,
											"end": 1023,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1043,
											"end": 1048,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1193,
											"name": "PUSH",
											"source": 11,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1179,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1170,
											"end": 1175,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1166,
											"end": 1180,
											"name": "MOD",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1194,
											"name": "BYTE",
											"source": 11
										},
										{
											"begin": 1156,
											"end": 1159,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1148,
											"end": 1195,
											"name": "MSTORE8",
											"source": 11
										},
										{
											"begin": 1239,
											"end": 1241,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "254"
										},
										{
											"begin": 1230,
											"end": 1241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "tag",
											"source": 11,
											"value": "253"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "tag",
											"source": 11,
											"value": "252"
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1230,
											"end": 1241,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1272,
											"end": 1273,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1268,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1273,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "250"
										},
										{
											"begin": 1259,
											"end": 1280,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "tag",
											"source": 11,
											"value": "251"
										},
										{
											"begin": 1012,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1315,
											"end": 1321,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1308,
											"end": 1321,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 639,
											"end": 1338,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 639,
											"end": 1338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 639,
											"end": 1338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 639,
											"end": 1338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7201,
											"end": 7569,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 7201,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7327,
											"end": 7332,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7334,
											"end": 7341,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7343,
											"end": 7350,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7313,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 7313,
											"end": 7351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7308,
											"end": 7563,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7388,
											"end": 7389,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7376,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7367,
											"end": 7553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7367,
											"end": 7553,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7440,
											"end": 7447,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "PUSH",
											"source": 5,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7417,
											"end": 7448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7417,
											"end": 7448,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7367,
											"end": 7553,
											"name": "tag",
											"source": 5,
											"value": "260"
										},
										{
											"begin": 7367,
											"end": 7553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7521,
											"end": 7528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7530,
											"end": 7537,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "PUSH",
											"source": 5,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 7494,
											"end": 7538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7494,
											"end": 7538,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7308,
											"end": 7563,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 7308,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7569,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7201,
											"end": 7569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12206,
											"end": 13122,
											"name": "tag",
											"source": 14,
											"value": "245"
										},
										{
											"begin": 12206,
											"end": 13122,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12259,
											"end": 12266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12292,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12295,
											"end": 12296,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12278,
											"end": 12296,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12278,
											"end": 12296,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12343,
											"end": 12351,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12334,
											"end": 12339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12334,
											"end": 12351,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12330,
											"end": 12433,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 12330,
											"end": 12433,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12380,
											"end": 12388,
											"name": "PUSH",
											"source": 14,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 12371,
											"end": 12388,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "tag",
											"source": 14,
											"value": "268"
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "tag",
											"source": 14,
											"value": "267"
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12388,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12416,
											"end": 12418,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12406,
											"end": 12418,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12330,
											"end": 12433,
											"name": "tag",
											"source": 14,
											"value": "266"
										},
										{
											"begin": 12330,
											"end": 12433,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12459,
											"end": 12467,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12450,
											"end": 12455,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12450,
											"end": 12467,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12446,
											"end": 12549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 12446,
											"end": 12549,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12496,
											"end": 12504,
											"name": "PUSH",
											"source": 14,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 12487,
											"end": 12504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "tag",
											"source": 14,
											"value": "271"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "tag",
											"source": 14,
											"value": "270"
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12487,
											"end": 12504,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12532,
											"end": 12534,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12522,
											"end": 12534,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12522,
											"end": 12534,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12522,
											"end": 12534,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12522,
											"end": 12534,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12446,
											"end": 12549,
											"name": "tag",
											"source": 14,
											"value": "269"
										},
										{
											"begin": 12446,
											"end": 12549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12575,
											"end": 12583,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12566,
											"end": 12571,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12566,
											"end": 12583,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12562,
											"end": 12665,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 12562,
											"end": 12665,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12612,
											"end": 12620,
											"name": "PUSH",
											"source": 14,
											"value": "2386F26FC10000"
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 12603,
											"end": 12620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "tag",
											"source": 14,
											"value": "274"
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "tag",
											"source": 14,
											"value": "273"
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12603,
											"end": 12620,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12648,
											"end": 12650,
											"name": "PUSH",
											"source": 14,
											"value": "10"
										},
										{
											"begin": 12638,
											"end": 12650,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12638,
											"end": 12650,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12638,
											"end": 12650,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12638,
											"end": 12650,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12562,
											"end": 12665,
											"name": "tag",
											"source": 14,
											"value": "272"
										},
										{
											"begin": 12562,
											"end": 12665,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12691,
											"end": 12698,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12682,
											"end": 12687,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12682,
											"end": 12698,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12678,
											"end": 12778,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 12678,
											"end": 12778,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12727,
											"end": 12734,
											"name": "PUSH",
											"source": 14,
											"value": "5F5E100"
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 12718,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "tag",
											"source": 14,
											"value": "277"
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "tag",
											"source": 14,
											"value": "276"
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12718,
											"end": 12734,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12762,
											"end": 12763,
											"name": "PUSH",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 12752,
											"end": 12763,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12752,
											"end": 12763,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12752,
											"end": 12763,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12752,
											"end": 12763,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12678,
											"end": 12778,
											"name": "tag",
											"source": 14,
											"value": "275"
										},
										{
											"begin": 12678,
											"end": 12778,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12804,
											"end": 12811,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12795,
											"end": 12800,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12795,
											"end": 12811,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12791,
											"end": 12891,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 12791,
											"end": 12891,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12840,
											"end": 12847,
											"name": "PUSH",
											"source": 14,
											"value": "2710"
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 12831,
											"end": 12847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "tag",
											"source": 14,
											"value": "279"
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12831,
											"end": 12847,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12875,
											"end": 12876,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 12865,
											"end": 12876,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12876,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12876,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12865,
											"end": 12876,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12791,
											"end": 12891,
											"name": "tag",
											"source": 14,
											"value": "278"
										},
										{
											"begin": 12791,
											"end": 12891,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12917,
											"end": 12924,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12908,
											"end": 12913,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12908,
											"end": 12924,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12904,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 12904,
											"end": 13004,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12953,
											"end": 12960,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "254"
										},
										{
											"begin": 12944,
											"end": 12960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "tag",
											"source": 14,
											"value": "283"
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "tag",
											"source": 14,
											"value": "282"
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "DIV",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 12944,
											"end": 12960,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12988,
											"end": 12989,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 12978,
											"end": 12989,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12978,
											"end": 12989,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12978,
											"end": 12989,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12978,
											"end": 12989,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12904,
											"end": 13004,
											"name": "tag",
											"source": 14,
											"value": "281"
										},
										{
											"begin": 12904,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13030,
											"end": 13037,
											"name": "PUSH",
											"source": 14,
											"value": "A"
										},
										{
											"begin": 13021,
											"end": 13026,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13021,
											"end": 13037,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13017,
											"end": 13083,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 13017,
											"end": 13083,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13067,
											"end": 13068,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13057,
											"end": 13068,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13057,
											"end": 13068,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13057,
											"end": 13068,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13057,
											"end": 13068,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13017,
											"end": 13083,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 13017,
											"end": 13083,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13109,
											"end": 13115,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 13102,
											"end": 13115,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13102,
											"end": 13115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13102,
											"end": 13115,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12206,
											"end": 13122,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12206,
											"end": 13122,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12206,
											"end": 13122,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12206,
											"end": 13122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6501,
											"end": 6773,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 6501,
											"end": 6773,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6604,
											"end": 6608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6658,
											"end": 6659,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6646,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6660,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6766,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6766,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 6639,
											"end": 6766,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6686,
											"end": 6693,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6682,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6693,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6729,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 6677,
											"end": 6729,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6714,
											"end": 6719,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6721,
											"end": 6728,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 6697,
											"end": 6729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6697,
											"end": 6729,
											"name": "tag",
											"source": 5,
											"value": "288"
										},
										{
											"begin": 6697,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6729,
											"name": "tag",
											"source": 5,
											"value": "287"
										},
										{
											"begin": 6677,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6758,
											"end": 6765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6733,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6746,
											"end": 6753,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6733,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 6733,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6733,
											"end": 6754,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 6733,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "tag",
											"source": 5,
											"value": "289"
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6639,
											"end": 6766,
											"name": "tag",
											"source": 5,
											"value": "286"
										},
										{
											"begin": 6639,
											"end": 6766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6766,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6620,
											"end": 6766,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6773,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6773,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6773,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6501,
											"end": 6773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "187"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "291"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "291"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "293"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "293"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "294"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "295"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "294"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "292"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "295"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "296"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "297"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "301"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "317"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 16,
											"value": "43"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 16,
											"value": "424"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 16,
											"value": "425"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 16,
											"value": "427"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 16,
											"value": "429"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 16,
											"value": "432"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "320"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 16,
											"value": "434"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 16,
											"value": "66"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 16,
											"value": "438"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "321"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 16,
											"value": "439"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 16,
											"value": "444"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 16,
											"value": "448"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 16,
											"value": "449"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 16,
											"value": "451"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 16,
											"value": "453"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "326"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "325"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "323"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "327"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "328"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 16,
											"value": "70"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 16,
											"value": "467"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 16,
											"value": "468"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 16,
											"value": "470"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 16,
											"value": "472"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "329"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9991,
											"end": 10108,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 9991,
											"end": 10108,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10100,
											"end": 10101,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10097,
											"end": 10098,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10090,
											"end": 10102,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10114,
											"end": 10231,
											"name": "tag",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 10114,
											"end": 10231,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10223,
											"end": 10224,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10220,
											"end": 10221,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10213,
											"end": 10225,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10251,
											"end": 10804,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 10251,
											"end": 10804,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10309,
											"end": 10317,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10319,
											"end": 10325,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10369,
											"end": 10372,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10362,
											"end": 10366,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 10354,
											"end": 10360,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10350,
											"end": 10367,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10346,
											"end": 10373,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10336,
											"end": 10458,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 10336,
											"end": 10458,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10377,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10377,
											"end": 10456,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "322"
										},
										{
											"begin": 10377,
											"end": 10456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10377,
											"end": 10456,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 10377,
											"end": 10456,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10336,
											"end": 10458,
											"name": "tag",
											"source": 16,
											"value": "477"
										},
										{
											"begin": 10336,
											"end": 10458,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10490,
											"end": 10496,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10477,
											"end": 10497,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 10467,
											"end": 10497,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10467,
											"end": 10497,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10520,
											"end": 10538,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10512,
											"end": 10518,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10509,
											"end": 10539,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10623,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 10506,
											"end": 10623,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 10542,
											"end": 10621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 10542,
											"end": 10621,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10506,
											"end": 10623,
											"name": "tag",
											"source": 16,
											"value": "479"
										},
										{
											"begin": 10506,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10656,
											"end": 10660,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10648,
											"end": 10654,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10644,
											"end": 10661,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10632,
											"end": 10661,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10632,
											"end": 10661,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10710,
											"end": 10713,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10702,
											"end": 10706,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 10694,
											"end": 10700,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10690,
											"end": 10707,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 10680,
											"end": 10688,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10676,
											"end": 10708,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10673,
											"end": 10714,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10798,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 10670,
											"end": 10798,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10717,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 10717,
											"end": 10796,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "331"
										},
										{
											"begin": 10717,
											"end": 10796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10717,
											"end": 10796,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 10717,
											"end": 10796,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10670,
											"end": 10798,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 10670,
											"end": 10798,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10251,
											"end": 10804,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10251,
											"end": 10804,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10251,
											"end": 10804,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10251,
											"end": 10804,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10251,
											"end": 10804,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10251,
											"end": 10804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10810,
											"end": 11484,
											"name": "tag",
											"source": 16,
											"value": "78"
										},
										{
											"begin": 10810,
											"end": 11484,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10890,
											"end": 10896,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10904,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10906,
											"end": 10912,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10955,
											"end": 10957,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10952,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 10934,
											"end": 10941,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 10930,
											"end": 10953,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 10926,
											"end": 10958,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 10923,
											"end": 11042,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10923,
											"end": 11042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 10923,
											"end": 11042,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10961,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 10961,
											"end": 11040,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 10961,
											"end": 11040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10961,
											"end": 11040,
											"name": "tag",
											"source": 16,
											"value": "485"
										},
										{
											"begin": 10961,
											"end": 11040,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10923,
											"end": 11042,
											"name": "tag",
											"source": 16,
											"value": "484"
										},
										{
											"begin": 10923,
											"end": 11042,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11081,
											"end": 11082,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 11151,
											"end": 11158,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11142,
											"end": 11148,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11131,
											"end": 11140,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11127,
											"end": 11149,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 11106,
											"end": 11159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "tag",
											"source": 16,
											"value": "486"
										},
										{
											"begin": 11106,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11159,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 11096,
											"end": 11159,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11052,
											"end": 11169,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11236,
											"end": 11238,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11225,
											"end": 11234,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11221,
											"end": 11239,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11208,
											"end": 11240,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11267,
											"end": 11285,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11259,
											"end": 11265,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11256,
											"end": 11286,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11253,
											"end": 11370,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11253,
											"end": 11370,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 11253,
											"end": 11370,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 11289,
											"end": 11368,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 11289,
											"end": 11368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11289,
											"end": 11368,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 11289,
											"end": 11368,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11253,
											"end": 11370,
											"name": "tag",
											"source": 16,
											"value": "487"
										},
										{
											"begin": 11253,
											"end": 11370,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11402,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 11459,
											"end": 11466,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11450,
											"end": 11456,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11439,
											"end": 11448,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11435,
											"end": 11457,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11402,
											"end": 11467,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 11402,
											"end": 11467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11402,
											"end": 11467,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 11402,
											"end": 11467,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11467,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11467,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11467,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11384,
											"end": 11467,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11179,
											"end": 11477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10810,
											"end": 11484,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10810,
											"end": 11484,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10810,
											"end": 11484,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10810,
											"end": 11484,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10810,
											"end": 11484,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10810,
											"end": 11484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11490,
											"end": 11964,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 11490,
											"end": 11964,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11558,
											"end": 11564,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11566,
											"end": 11572,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11615,
											"end": 11617,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 11603,
											"end": 11612,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11594,
											"end": 11601,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11590,
											"end": 11613,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11586,
											"end": 11618,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11583,
											"end": 11702,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11583,
											"end": 11702,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 11583,
											"end": 11702,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 11621,
											"end": 11700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 11621,
											"end": 11700,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11583,
											"end": 11702,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 11583,
											"end": 11702,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11741,
											"end": 11742,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11766,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 11811,
											"end": 11818,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11802,
											"end": 11808,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11791,
											"end": 11800,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11787,
											"end": 11809,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11766,
											"end": 11819,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 11766,
											"end": 11819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11766,
											"end": 11819,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 11766,
											"end": 11819,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11756,
											"end": 11819,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11756,
											"end": 11819,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11712,
											"end": 11829,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11868,
											"end": 11870,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11894,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 11939,
											"end": 11946,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11930,
											"end": 11936,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11919,
											"end": 11928,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11915,
											"end": 11937,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11894,
											"end": 11947,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "318"
										},
										{
											"begin": 11894,
											"end": 11947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11894,
											"end": 11947,
											"name": "tag",
											"source": 16,
											"value": "494"
										},
										{
											"begin": 11894,
											"end": 11947,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11884,
											"end": 11947,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11884,
											"end": 11947,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11839,
											"end": 11957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11490,
											"end": 11964,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11490,
											"end": 11964,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11490,
											"end": 11964,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11490,
											"end": 11964,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 11490,
											"end": 11964,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11490,
											"end": 11964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11970,
											"end": 12150,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 11970,
											"end": 12150,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12018,
											"end": 12095,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12015,
											"end": 12016,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12096,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12115,
											"end": 12119,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 12112,
											"end": 12113,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 12105,
											"end": 12120,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12139,
											"end": 12143,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 12136,
											"end": 12137,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12129,
											"end": 12144,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 12156,
											"end": 12476,
											"name": "tag",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 12156,
											"end": 12476,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12200,
											"end": 12206,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12237,
											"end": 12238,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 12231,
											"end": 12235,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12227,
											"end": 12239,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 12217,
											"end": 12239,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12217,
											"end": 12239,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12284,
											"end": 12285,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 12278,
											"end": 12282,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12274,
											"end": 12286,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12305,
											"end": 12323,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 12295,
											"end": 12376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 12295,
											"end": 12376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12361,
											"end": 12365,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 12353,
											"end": 12359,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12349,
											"end": 12366,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 12339,
											"end": 12366,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12339,
											"end": 12366,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12295,
											"end": 12376,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 12295,
											"end": 12376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12423,
											"end": 12425,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12415,
											"end": 12421,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12412,
											"end": 12426,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 12392,
											"end": 12410,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12389,
											"end": 12427,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 12386,
											"end": 12470,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 12386,
											"end": 12470,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 12442,
											"end": 12460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12386,
											"end": 12470,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 12386,
											"end": 12470,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12207,
											"end": 12476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12156,
											"end": 12476,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12156,
											"end": 12476,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12156,
											"end": 12476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12156,
											"end": 12476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12631,
											"end": 12635,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12671,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12658,
											"end": 12667,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12654,
											"end": 12672,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12672,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12646,
											"end": 12672,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12682,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 12750,
											"end": 12751,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12739,
											"end": 12748,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12735,
											"end": 12752,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12726,
											"end": 12732,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12682,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 12682,
											"end": 12753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12682,
											"end": 12753,
											"name": "tag",
											"source": 16,
											"value": "501"
										},
										{
											"begin": 12682,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 12831,
											"end": 12833,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12820,
											"end": 12829,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12816,
											"end": 12834,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12807,
											"end": 12813,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 12835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 12763,
											"end": 12835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12763,
											"end": 12835,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 12763,
											"end": 12835,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12845,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 12913,
											"end": 12915,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12902,
											"end": 12911,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12898,
											"end": 12916,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12889,
											"end": 12895,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12845,
											"end": 12917,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 12845,
											"end": 12917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12845,
											"end": 12917,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 12845,
											"end": 12917,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12482,
											"end": 12924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 13078,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 12930,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13032,
											"end": 13043,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13069,
											"end": 13072,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13054,
											"end": 13072,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 13078,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 13078,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 13078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 13078,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12930,
											"end": 13078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13474,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 13084,
											"end": 13474,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13190,
											"end": 13193,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13218,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 13251,
											"end": 13256,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13218,
											"end": 13257,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 13218,
											"end": 13257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13218,
											"end": 13257,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 13218,
											"end": 13257,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13273,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 13355,
											"end": 13361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13350,
											"end": 13353,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13273,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 13273,
											"end": 13362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13273,
											"end": 13362,
											"name": "tag",
											"source": 16,
											"value": "507"
										},
										{
											"begin": 13273,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13266,
											"end": 13362,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13266,
											"end": 13362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13371,
											"end": 13436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 13429,
											"end": 13435,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13424,
											"end": 13427,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13417,
											"end": 13421,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13410,
											"end": 13415,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13406,
											"end": 13422,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13371,
											"end": 13436,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 13371,
											"end": 13436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13371,
											"end": 13436,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 13371,
											"end": 13436,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13461,
											"end": 13467,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13456,
											"end": 13459,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13452,
											"end": 13468,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13445,
											"end": 13468,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13445,
											"end": 13468,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13194,
											"end": 13474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13474,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13474,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13474,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13084,
											"end": 13474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13480,
											"end": 13915,
											"name": "tag",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 13480,
											"end": 13915,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13660,
											"end": 13663,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13682,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 13773,
											"end": 13776,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13764,
											"end": 13770,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13682,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 13682,
											"end": 13777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13682,
											"end": 13777,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 13682,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13675,
											"end": 13777,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13675,
											"end": 13777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13794,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 13885,
											"end": 13888,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13876,
											"end": 13882,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 13794,
											"end": 13889,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 13794,
											"end": 13889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13794,
											"end": 13889,
											"name": "tag",
											"source": 16,
											"value": "511"
										},
										{
											"begin": 13794,
											"end": 13889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13787,
											"end": 13889,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13787,
											"end": 13889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13906,
											"end": 13909,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 13899,
											"end": 13909,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13899,
											"end": 13909,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13480,
											"end": 13915,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 13480,
											"end": 13915,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13480,
											"end": 13915,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13480,
											"end": 13915,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13480,
											"end": 13915,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13480,
											"end": 13915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13921,
											"end": 14101,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 13921,
											"end": 14101,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13969,
											"end": 14046,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13966,
											"end": 13967,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13959,
											"end": 14047,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14066,
											"end": 14070,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 14063,
											"end": 14064,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 14056,
											"end": 14071,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14090,
											"end": 14094,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 14087,
											"end": 14088,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14080,
											"end": 14095,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14107,
											"end": 14340,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 14107,
											"end": 14340,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14146,
											"end": 14149,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14169,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 14187,
											"end": 14192,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14169,
											"end": 14193,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 14169,
											"end": 14193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14169,
											"end": 14193,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 14169,
											"end": 14193,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14160,
											"end": 14193,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14160,
											"end": 14193,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14215,
											"end": 14281,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14208,
											"end": 14213,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14205,
											"end": 14282,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14202,
											"end": 14305,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 14202,
											"end": 14305,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14285,
											"end": 14303,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 14285,
											"end": 14303,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 14285,
											"end": 14303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14285,
											"end": 14303,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 14285,
											"end": 14303,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14202,
											"end": 14305,
											"name": "tag",
											"source": 16,
											"value": "515"
										},
										{
											"begin": 14202,
											"end": 14305,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14332,
											"end": 14333,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 14325,
											"end": 14330,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14321,
											"end": 14334,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14314,
											"end": 14334,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14314,
											"end": 14334,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14107,
											"end": 14340,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14107,
											"end": 14340,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14107,
											"end": 14340,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14107,
											"end": 14340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14444,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 14346,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14397,
											"end": 14403,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14431,
											"end": 14436,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14425,
											"end": 14437,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 14415,
											"end": 14437,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14415,
											"end": 14437,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14444,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14444,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14444,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14346,
											"end": 14444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14450,
											"end": 14618,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 14450,
											"end": 14618,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14533,
											"end": 14544,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14567,
											"end": 14573,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14562,
											"end": 14565,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14555,
											"end": 14574,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14607,
											"end": 14611,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14602,
											"end": 14605,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14598,
											"end": 14612,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14583,
											"end": 14612,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14583,
											"end": 14612,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14450,
											"end": 14618,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14450,
											"end": 14618,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14450,
											"end": 14618,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14450,
											"end": 14618,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14450,
											"end": 14618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14624,
											"end": 14997,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 14624,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14710,
											"end": 14713,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14738,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 14770,
											"end": 14775,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14738,
											"end": 14776,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 14738,
											"end": 14776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14738,
											"end": 14776,
											"name": "tag",
											"source": 16,
											"value": "520"
										},
										{
											"begin": 14738,
											"end": 14776,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14792,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 14855,
											"end": 14861,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14850,
											"end": 14853,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14792,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 14792,
											"end": 14862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14792,
											"end": 14862,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 14792,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14785,
											"end": 14862,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 14785,
											"end": 14862,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 14929,
											"end": 14935,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14924,
											"end": 14927,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 14917,
											"end": 14921,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14910,
											"end": 14915,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 14906,
											"end": 14922,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14936,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "308"
										},
										{
											"begin": 14871,
											"end": 14936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14936,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 14871,
											"end": 14936,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14961,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 14983,
											"end": 14989,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14961,
											"end": 14990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "309"
										},
										{
											"begin": 14961,
											"end": 14990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14961,
											"end": 14990,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 14961,
											"end": 14990,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14956,
											"end": 14959,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 14952,
											"end": 14991,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14945,
											"end": 14991,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14945,
											"end": 14991,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14714,
											"end": 14997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14624,
											"end": 14997,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14624,
											"end": 14997,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14624,
											"end": 14997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14624,
											"end": 14997,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14624,
											"end": 14997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "tag",
											"source": 16,
											"value": "197"
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15198,
											"end": 15202,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15236,
											"end": 15239,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 15225,
											"end": 15234,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15221,
											"end": 15240,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15213,
											"end": 15240,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15213,
											"end": 15240,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15250,
											"end": 15321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 15318,
											"end": 15319,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15307,
											"end": 15316,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15303,
											"end": 15320,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15294,
											"end": 15300,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 15250,
											"end": 15321,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 15250,
											"end": 15321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15250,
											"end": 15321,
											"name": "tag",
											"source": 16,
											"value": "525"
										},
										{
											"begin": 15250,
											"end": 15321,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15331,
											"end": 15403,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 15399,
											"end": 15401,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15388,
											"end": 15397,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15384,
											"end": 15402,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15375,
											"end": 15381,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 15331,
											"end": 15403,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 15331,
											"end": 15403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15331,
											"end": 15403,
											"name": "tag",
											"source": 16,
											"value": "526"
										},
										{
											"begin": 15331,
											"end": 15403,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15413,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 15481,
											"end": 15483,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 15470,
											"end": 15479,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15466,
											"end": 15484,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15457,
											"end": 15463,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 15413,
											"end": 15485,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 15413,
											"end": 15485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15413,
											"end": 15485,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 15413,
											"end": 15485,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15532,
											"end": 15541,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15526,
											"end": 15530,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15522,
											"end": 15542,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15517,
											"end": 15519,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 15506,
											"end": 15515,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15502,
											"end": 15520,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15495,
											"end": 15543,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15560,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 15631,
											"end": 15635,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15622,
											"end": 15628,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15560,
											"end": 15636,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 15560,
											"end": 15636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15560,
											"end": 15636,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 15560,
											"end": 15636,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15552,
											"end": 15636,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15552,
											"end": 15636,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15003,
											"end": 15643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15649,
											"end": 15790,
											"name": "tag",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 15649,
											"end": 15790,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15705,
											"end": 15710,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15736,
											"end": 15742,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15730,
											"end": 15743,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 15721,
											"end": 15743,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15721,
											"end": 15743,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15752,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 15778,
											"end": 15783,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15752,
											"end": 15784,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "302"
										},
										{
											"begin": 15752,
											"end": 15784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15752,
											"end": 15784,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 15752,
											"end": 15784,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15649,
											"end": 15790,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15649,
											"end": 15790,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15649,
											"end": 15790,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15649,
											"end": 15790,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15649,
											"end": 15790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 16145,
											"name": "tag",
											"source": 16,
											"value": "200"
										},
										{
											"begin": 15796,
											"end": 16145,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15865,
											"end": 15871,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15914,
											"end": 15916,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15902,
											"end": 15911,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15893,
											"end": 15900,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 15889,
											"end": 15912,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15885,
											"end": 15917,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 15882,
											"end": 16001,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 15882,
											"end": 16001,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 15882,
											"end": 16001,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15920,
											"end": 15999,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 15920,
											"end": 15999,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 15920,
											"end": 15999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15920,
											"end": 15999,
											"name": "tag",
											"source": 16,
											"value": "533"
										},
										{
											"begin": 15920,
											"end": 15999,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15882,
											"end": 16001,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 15882,
											"end": 16001,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16040,
											"end": 16041,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16065,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 16120,
											"end": 16127,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16111,
											"end": 16117,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16100,
											"end": 16109,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 16096,
											"end": 16118,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16065,
											"end": 16128,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "340"
										},
										{
											"begin": 16065,
											"end": 16128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16065,
											"end": 16128,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 16065,
											"end": 16128,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16055,
											"end": 16128,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16055,
											"end": 16128,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16011,
											"end": 16138,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 16145,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 16145,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 16145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 16145,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15796,
											"end": 16145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16151,
											"end": 16292,
											"name": "tag",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 16151,
											"end": 16292,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16200,
											"end": 16204,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16223,
											"end": 16226,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16215,
											"end": 16226,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16215,
											"end": 16226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16246,
											"end": 16249,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16243,
											"end": 16244,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16236,
											"end": 16250,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 16280,
											"end": 16284,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16277,
											"end": 16278,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16285,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 16259,
											"end": 16285,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16259,
											"end": 16285,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16151,
											"end": 16292,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16151,
											"end": 16292,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16151,
											"end": 16292,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16151,
											"end": 16292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16298,
											"end": 16391,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 16298,
											"end": 16391,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16335,
											"end": 16341,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16382,
											"end": 16384,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 16377,
											"end": 16379,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 16370,
											"end": 16375,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16366,
											"end": 16380,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 16362,
											"end": 16385,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 16352,
											"end": 16385,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16352,
											"end": 16385,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16298,
											"end": 16391,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16298,
											"end": 16391,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16298,
											"end": 16391,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16298,
											"end": 16391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16397,
											"end": 16504,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 16397,
											"end": 16504,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16441,
											"end": 16449,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16491,
											"end": 16496,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16485,
											"end": 16489,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16481,
											"end": 16497,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 16460,
											"end": 16497,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16460,
											"end": 16497,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16397,
											"end": 16504,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16397,
											"end": 16504,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16397,
											"end": 16504,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16397,
											"end": 16504,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16397,
											"end": 16504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16903,
											"name": "tag",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 16510,
											"end": 16903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16579,
											"end": 16585,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16629,
											"end": 16630,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 16617,
											"end": 16627,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16613,
											"end": 16631,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 16652,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 16682,
											"end": 16748,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16671,
											"end": 16680,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16652,
											"end": 16749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 16652,
											"end": 16749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16652,
											"end": 16749,
											"name": "tag",
											"source": 16,
											"value": "539"
										},
										{
											"begin": 16652,
											"end": 16749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16770,
											"end": 16809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 16800,
											"end": 16808,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16789,
											"end": 16798,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16770,
											"end": 16809,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 16770,
											"end": 16809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16770,
											"end": 16809,
											"name": "tag",
											"source": 16,
											"value": "540"
										},
										{
											"begin": 16770,
											"end": 16809,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16758,
											"end": 16809,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 16758,
											"end": 16809,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16842,
											"end": 16846,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16838,
											"end": 16847,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 16831,
											"end": 16836,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16827,
											"end": 16848,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16818,
											"end": 16848,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16818,
											"end": 16848,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16891,
											"end": 16895,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16881,
											"end": 16889,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16877,
											"end": 16896,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16870,
											"end": 16875,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16867,
											"end": 16897,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 16857,
											"end": 16897,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16857,
											"end": 16897,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16586,
											"end": 16903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16586,
											"end": 16903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16903,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16903,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16510,
											"end": 16903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16909,
											"end": 16969,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 16909,
											"end": 16969,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16937,
											"end": 16940,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16958,
											"end": 16963,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16951,
											"end": 16963,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16951,
											"end": 16963,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16909,
											"end": 16969,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16909,
											"end": 16969,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16909,
											"end": 16969,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16909,
											"end": 16969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16975,
											"end": 17117,
											"name": "tag",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 16975,
											"end": 17117,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17025,
											"end": 17034,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17058,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 17076,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 17085,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 17103,
											"end": 17108,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17085,
											"end": 17109,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 17085,
											"end": 17109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17085,
											"end": 17109,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 17085,
											"end": 17109,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17076,
											"end": 17110,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 17076,
											"end": 17110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17076,
											"end": 17110,
											"name": "tag",
											"source": 16,
											"value": "544"
										},
										{
											"begin": 17076,
											"end": 17110,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17058,
											"end": 17111,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 17058,
											"end": 17111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17058,
											"end": 17111,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 17058,
											"end": 17111,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17045,
											"end": 17111,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17045,
											"end": 17111,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16975,
											"end": 17117,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16975,
											"end": 17117,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16975,
											"end": 17117,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16975,
											"end": 17117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17123,
											"end": 17198,
											"name": "tag",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 17123,
											"end": 17198,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17166,
											"end": 17169,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17187,
											"end": 17192,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17180,
											"end": 17192,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17180,
											"end": 17192,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17123,
											"end": 17198,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17123,
											"end": 17198,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17123,
											"end": 17198,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17123,
											"end": 17198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17473,
											"name": "tag",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 17204,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17314,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 17345,
											"end": 17352,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17314,
											"end": 17353,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "346"
										},
										{
											"begin": 17314,
											"end": 17353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17314,
											"end": 17353,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 17314,
											"end": 17353,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17375,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 17448,
											"end": 17464,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "347"
										},
										{
											"begin": 17424,
											"end": 17465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 17424,
											"end": 17465,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17416,
											"end": 17422,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17409,
											"end": 17413,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17403,
											"end": 17414,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 17375,
											"end": 17466,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "344"
										},
										{
											"begin": 17375,
											"end": 17466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17375,
											"end": 17466,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 17375,
											"end": 17466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17369,
											"end": 17373,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17362,
											"end": 17467,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 17280,
											"end": 17473,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17473,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17473,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17473,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17204,
											"end": 17473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17479,
											"end": 17552,
											"name": "tag",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 17479,
											"end": 17552,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17524,
											"end": 17527,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17479,
											"end": 17552,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17479,
											"end": 17552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17558,
											"end": 17747,
											"name": "tag",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 17558,
											"end": 17747,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17635,
											"end": 17667,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 17635,
											"end": 17667,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "349"
										},
										{
											"begin": 17635,
											"end": 17667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17635,
											"end": 17667,
											"name": "tag",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 17635,
											"end": 17667,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17676,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 17734,
											"end": 17740,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17726,
											"end": 17732,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17720,
											"end": 17724,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17676,
											"end": 17741,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "348"
										},
										{
											"begin": 17676,
											"end": 17741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17676,
											"end": 17741,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 17676,
											"end": 17741,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17611,
											"end": 17747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17558,
											"end": 17747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17558,
											"end": 17747,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17558,
											"end": 17747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17753,
											"end": 17939,
											"name": "tag",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 17753,
											"end": 17939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17830,
											"end": 17833,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17823,
											"end": 17828,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17820,
											"end": 17834,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17884,
											"end": 17923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 17921,
											"end": 17922,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17914,
											"end": 17919,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17884,
											"end": 17923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "350"
										},
										{
											"begin": 17884,
											"end": 17923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17884,
											"end": 17923,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 17884,
											"end": 17923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17857,
											"end": 17858,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 17850,
											"end": 17855,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17846,
											"end": 17859,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17837,
											"end": 17859,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17837,
											"end": 17859,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "tag",
											"source": 16,
											"value": "558"
										},
										{
											"begin": 17813,
											"end": 17933,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17753,
											"end": 17939,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17753,
											"end": 17939,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17753,
											"end": 17939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17945,
											"end": 18488,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 17945,
											"end": 18488,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18046,
											"end": 18048,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18041,
											"end": 18044,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18038,
											"end": 18049,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18035,
											"end": 18481,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18035,
											"end": 18481,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 18035,
											"end": 18481,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18080,
											"end": 18118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 18112,
											"end": 18117,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18080,
											"end": 18118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 18080,
											"end": 18118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18080,
											"end": 18118,
											"name": "tag",
											"source": 16,
											"value": "562"
										},
										{
											"begin": 18080,
											"end": 18118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18164,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 18182,
											"end": 18192,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18164,
											"end": 18193,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 18164,
											"end": 18193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18164,
											"end": 18193,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 18164,
											"end": 18193,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18154,
											"end": 18162,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18150,
											"end": 18194,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18347,
											"end": 18349,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 18335,
											"end": 18345,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18332,
											"end": 18350,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 18329,
											"end": 18378,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18329,
											"end": 18378,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 18329,
											"end": 18378,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18368,
											"end": 18376,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18353,
											"end": 18376,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18353,
											"end": 18376,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18329,
											"end": 18378,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 18329,
											"end": 18378,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18391,
											"end": 18471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 18447,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 18465,
											"end": 18468,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18447,
											"end": 18469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 18447,
											"end": 18469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18447,
											"end": 18469,
											"name": "tag",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 18447,
											"end": 18469,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18437,
											"end": 18445,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18433,
											"end": 18470,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 18420,
											"end": 18431,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18391,
											"end": 18471,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "351"
										},
										{
											"begin": 18391,
											"end": 18471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18391,
											"end": 18471,
											"name": "tag",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 18391,
											"end": 18471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18050,
											"end": 18481,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18050,
											"end": 18481,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18035,
											"end": 18481,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 18035,
											"end": 18481,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17945,
											"end": 18488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17945,
											"end": 18488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17945,
											"end": 18488,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17945,
											"end": 18488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18611,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 18494,
											"end": 18611,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18548,
											"end": 18556,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18598,
											"end": 18603,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18592,
											"end": 18596,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18588,
											"end": 18604,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 18567,
											"end": 18604,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18567,
											"end": 18604,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18611,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18611,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18611,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18611,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18494,
											"end": 18611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18617,
											"end": 18786,
											"name": "tag",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 18617,
											"end": 18786,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18661,
											"end": 18667,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18694,
											"end": 18745,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 18742,
											"end": 18743,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18738,
											"end": 18744,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18730,
											"end": 18735,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18727,
											"end": 18728,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 18723,
											"end": 18736,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 18694,
											"end": 18745,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 18694,
											"end": 18745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18694,
											"end": 18745,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 18694,
											"end": 18745,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18690,
											"end": 18746,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18775,
											"end": 18779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18769,
											"end": 18773,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18765,
											"end": 18780,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18755,
											"end": 18780,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18668,
											"end": 18786,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18617,
											"end": 18786,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18617,
											"end": 18786,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18617,
											"end": 18786,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18617,
											"end": 18786,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18617,
											"end": 18786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18791,
											"end": 19086,
											"name": "tag",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 18791,
											"end": 19086,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18867,
											"end": 18871,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19013,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 19038,
											"end": 19041,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19032,
											"end": 19036,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19013,
											"end": 19042,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 19013,
											"end": 19042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19013,
											"end": 19042,
											"name": "tag",
											"source": 16,
											"value": "571"
										},
										{
											"begin": 19013,
											"end": 19042,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19005,
											"end": 19042,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19005,
											"end": 19042,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19075,
											"end": 19078,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19072,
											"end": 19073,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 19068,
											"end": 19079,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 19062,
											"end": 19066,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19059,
											"end": 19080,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 19051,
											"end": 19080,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19051,
											"end": 19080,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18791,
											"end": 19086,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18791,
											"end": 19086,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18791,
											"end": 19086,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18791,
											"end": 19086,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18791,
											"end": 19086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19091,
											"end": 20486,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 19091,
											"end": 20486,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19208,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 19241,
											"end": 19244,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19208,
											"end": 19245,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 19208,
											"end": 19245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19208,
											"end": 19245,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 19208,
											"end": 19245,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19310,
											"end": 19328,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19302,
											"end": 19308,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19299,
											"end": 19329,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19296,
											"end": 19352,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19296,
											"end": 19352,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 19296,
											"end": 19352,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19332,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 19332,
											"end": 19350,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 19332,
											"end": 19350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19332,
											"end": 19350,
											"name": "tag",
											"source": 16,
											"value": "575"
										},
										{
											"begin": 19332,
											"end": 19350,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19296,
											"end": 19352,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 19296,
											"end": 19352,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19376,
											"end": 19414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 19408,
											"end": 19412,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19402,
											"end": 19413,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 19376,
											"end": 19414,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "91"
										},
										{
											"begin": 19376,
											"end": 19414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19376,
											"end": 19414,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 19376,
											"end": 19414,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19461,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 19521,
											"end": 19527,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19513,
											"end": 19519,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19507,
											"end": 19511,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19461,
											"end": 19528,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 19461,
											"end": 19528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19461,
											"end": 19528,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 19461,
											"end": 19528,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19555,
											"end": 19556,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19579,
											"end": 19583,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19566,
											"end": 19583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19566,
											"end": 19583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19611,
											"end": 19613,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19603,
											"end": 19609,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19600,
											"end": 19614,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19628,
											"end": 19629,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19623,
											"end": 20241,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19623,
											"end": 20241,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 19623,
											"end": 20241,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 19623,
											"end": 20241,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20285,
											"end": 20286,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20302,
											"end": 20308,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20299,
											"end": 20376,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20299,
											"end": 20376,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 20299,
											"end": 20376,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20351,
											"end": 20360,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20346,
											"end": 20349,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 20342,
											"end": 20361,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20336,
											"end": 20362,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20327,
											"end": 20362,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20327,
											"end": 20362,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20299,
											"end": 20376,
											"name": "tag",
											"source": 16,
											"value": "580"
										},
										{
											"begin": 20299,
											"end": 20376,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20402,
											"end": 20469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 20462,
											"end": 20468,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20455,
											"end": 20460,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20402,
											"end": 20469,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "355"
										},
										{
											"begin": 20402,
											"end": 20469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20402,
											"end": 20469,
											"name": "tag",
											"source": 16,
											"value": "581"
										},
										{
											"begin": 20402,
											"end": 20469,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20396,
											"end": 20400,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20389,
											"end": 20470,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20258,
											"end": 20480,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19593,
											"end": 20480,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 19593,
											"end": 20480,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19623,
											"end": 20241,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 19623,
											"end": 20241,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19675,
											"end": 19679,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19671,
											"end": 19680,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 19663,
											"end": 19669,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19659,
											"end": 19681,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 19709,
											"end": 19746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 19741,
											"end": 19745,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19709,
											"end": 19746,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "341"
										},
										{
											"begin": 19709,
											"end": 19746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19709,
											"end": 19746,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 19709,
											"end": 19746,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19768,
											"end": 19769,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "tag",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19796,
											"end": 19803,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19793,
											"end": 19794,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19790,
											"end": 19804,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19875,
											"end": 19884,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19870,
											"end": 19873,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19866,
											"end": 19885,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19860,
											"end": 19886,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 19852,
											"end": 19858,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19845,
											"end": 19887,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19926,
											"end": 19927,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19918,
											"end": 19924,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19914,
											"end": 19928,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19904,
											"end": 19928,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19904,
											"end": 19928,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19973,
											"end": 19975,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19962,
											"end": 19971,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19958,
											"end": 19976,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19945,
											"end": 19976,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 19945,
											"end": 19976,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19819,
											"end": 19823,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19816,
											"end": 19817,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19812,
											"end": 19824,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19807,
											"end": 19824,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19807,
											"end": 19824,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 19782,
											"end": 19990,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20018,
											"end": 20024,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20009,
											"end": 20016,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20006,
											"end": 20025,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 20003,
											"end": 20182,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20003,
											"end": 20182,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 20003,
											"end": 20182,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20076,
											"end": 20085,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20071,
											"end": 20074,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 20067,
											"end": 20086,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20061,
											"end": 20087,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20119,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 20161,
											"end": 20165,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 20153,
											"end": 20159,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 20149,
											"end": 20166,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 20138,
											"end": 20147,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20119,
											"end": 20167,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "354"
										},
										{
											"begin": 20119,
											"end": 20167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20119,
											"end": 20167,
											"name": "tag",
											"source": 16,
											"value": "587"
										},
										{
											"begin": 20119,
											"end": 20167,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20111,
											"end": 20117,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20104,
											"end": 20168,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 20026,
											"end": 20182,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20003,
											"end": 20182,
											"name": "tag",
											"source": 16,
											"value": "586"
										},
										{
											"begin": 20003,
											"end": 20182,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20228,
											"end": 20229,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 20224,
											"end": 20225,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 20216,
											"end": 20222,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 20212,
											"end": 20226,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 20208,
											"end": 20230,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20202,
											"end": 20206,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 20195,
											"end": 20231,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19630,
											"end": 20241,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19630,
											"end": 20241,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19630,
											"end": 20241,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19593,
											"end": 20480,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 19593,
											"end": 20480,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19593,
											"end": 20480,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19183,
											"end": 20486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19183,
											"end": 20486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19183,
											"end": 20486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19091,
											"end": 20486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19091,
											"end": 20486,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19091,
											"end": 20486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20492,
											"end": 20672,
											"name": "tag",
											"source": 16,
											"value": "254"
										},
										{
											"begin": 20492,
											"end": 20672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20540,
											"end": 20617,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20537,
											"end": 20538,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20530,
											"end": 20618,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20637,
											"end": 20641,
											"name": "PUSH",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 20634,
											"end": 20635,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 20627,
											"end": 20642,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20661,
											"end": 20665,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 20658,
											"end": 20659,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20651,
											"end": 20666,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 20678,
											"end": 21010,
											"name": "tag",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 20678,
											"end": 21010,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20799,
											"end": 20803,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20837,
											"end": 20839,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 20826,
											"end": 20835,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20822,
											"end": 20840,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20814,
											"end": 20840,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20814,
											"end": 20840,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20850,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 20918,
											"end": 20919,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20907,
											"end": 20916,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20903,
											"end": 20920,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20894,
											"end": 20900,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20850,
											"end": 20921,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "316"
										},
										{
											"begin": 20850,
											"end": 20921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20850,
											"end": 20921,
											"name": "tag",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 20850,
											"end": 20921,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20931,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 20999,
											"end": 21001,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20988,
											"end": 20997,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20984,
											"end": 21002,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20975,
											"end": 20981,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20931,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "319"
										},
										{
											"begin": 20931,
											"end": 21003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20931,
											"end": 21003,
											"name": "tag",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 20931,
											"end": 21003,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20678,
											"end": 21010,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 20678,
											"end": 21010,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20678,
											"end": 21010,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20678,
											"end": 21010,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20678,
											"end": 21010,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20678,
											"end": 21010,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,string)": "d0def521",
							"name()": "06fdde03",
							"nextTokenId()": "75794a3c",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyNFT.sol\":\"MyNFT\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyNFT.sol\":{\"keccak256\":\"0x2b305439d0cf9025f6948b422988be8e683d66b7d3ff87a871420d07497cebfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c887353da3eafdc182bdb26aa42638f06fdc9782d39a861350843d9ef9420db5\",\"dweb:/ipfs/QmP9foELToZB1B85Esb5x3b6joTspkhA51XhpFXFDxGowK\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xac0e8ef0c346f8f3fa5eead5fb5801fe4d0c1073b76c577c56f45a7316910cd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a68340ec3ecfb54ff31163d45886dd79bfc6e1e6e5607cf3df80b6a2ca8e42e\",\"dweb:/ipfs/QmU7R65G9u1MozPZnwabzFiGApd6i3YKgeN13RMM8jm2CM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x0bc427294a71dc161342a52e44be5115bee357d982db1a19a81e9b35d2b129bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1ed4d92739ffb0ee5c6d620de03b19bac86970834b8d466d07cd34c635580aa\",\"dweb:/ipfs/Qmd4TrQBhFtrUWFZ6mE3nid5UbtDyiW8ULvk3Z7duKKsdH\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xd14f0f5ba3a1573f041549ef4131454ea6e92190d8a3c1e8766938711c7cdbd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2363489c3c9491a9adea826fde46a629ed12ba5016a604dae7082f564d48acee\",\"dweb:/ipfs/QmStKwsYs7KvCgnLL56AKC5zvYXNmHPD1h3XpFxyHprskr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5c14bbe33475eec92091d9203ca7981adcae6f65e256d212e5934920fe0a447b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20c61fa9aaf28b507774d847b71067d50315863549d6fb67d1b46c31c0efa2e8\",\"dweb:/ipfs/QmP2MdLxHTwffJNdxtm4VeW1XVtUZwmiDxEvCPA4sPF8aY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe9bcab1e60160195a5f9816ff263148cbcf2f01ef000e634673680d05ad76111\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26405522defeeb03b20f171cbb679f31feacc52c82328260b708daf821421e2e\",\"dweb:/ipfs/QmUu1YregLaeA85p4yfjxdDY7GvE3QZiz5y9Enh8KXuqdB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6e9345d9ca72137f0e6180ffa193e8dd8e890a4a38f556040a1410c180017942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e2ccbe72df9cda0a3647a68752416f96dce03185f4bd33fc25355c94de79d5\",\"dweb:/ipfs/Qmer4uF3GRWaBfms5eAuiEi4JJQvwwn7UPjn212Tqwrcs9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xf600162b5f65a3cc2a5e9f15cc3ae684f69761b5e218db7763974ef1675b186f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://254e952e92220f935a5b9dc35765570afe4b7c1486422e9c30d57534ad0d3baa\",\"dweb:/ipfs/QmdMsxUsvYBr1BCr4oUxZv8NsFfqBr9F79C2xtiL7c6mi7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf94e12c661651a6f70062449f3933bece6bc61901853affe01d507aa1ede591b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85e152b7adddeb9f42f82d88c7544f6345f60b1738e738b8e3c805202addecd\",\"dweb:/ipfs/QmdWF9Ecj56gkbRqkxRvjY9zq6UDd91ekhBcVdXfQXTPjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xe5bb39b4f0d8d92ad4355cf0451d1c9cad10a76f3b43058276866f27233c35cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b79ecfb3efa214763e6a0c19d394986b1381e23d56d8f03dbc07a6ed084ea6b\",\"dweb:/ipfs/QmdnP2aDhVpZChfGjFr2sMJeuvueTjmnnuzaaLB8wUedpS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xe9f6e61c1cb74b20b0f77828ad61faff9d993ec05ca813613f277c437ce8ab4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51365ac19d4ed3bd7d77343f793968128c509e606611b328ae900684658053b3\",\"dweb:/ipfs/QmSXWiRwXdZyHVvyGis6zKBDm5nJehYJxMXfAyLdFiei1E\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x7e0668df2a2851ec51d3a32b9a40cccba141a4adbde1413da1cc1fa81bfc78f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e6cad65bffa5bbf2ed5bd7c515e59970f23a1530d756207783371a969c34c1\",\"dweb:/ipfs/QmVFiZZnjZbH5998eDm1DvbGTwdD1GEu8vpUmLmUPSoFjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x4c3b5ecf2e0f2d466f6e12645709d1a884961b4b82c8f6b7fad7c83f6c52ae42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1409caf33c143298e72b1b8f7e32badf0575bc7458a2f417acf0e6bbdd868359\",\"dweb:/ipfs/Qmcq8iWwCk5NjdeuxrVTg4FAPrPhbbkL8DdvUpYBFjYX2f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 238,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 240,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 244,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 248,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 252,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 258,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1342,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 14,
								"contract": "contracts/MyNFT.sol:MyNFT",
								"label": "nextTokenId",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xac0e8ef0c346f8f3fa5eead5fb5801fe4d0c1073b76c577c56f45a7316910cd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a68340ec3ecfb54ff31163d45886dd79bfc6e1e6e5607cf3df80b6a2ca8e42e\",\"dweb:/ipfs/QmU7R65G9u1MozPZnwabzFiGApd6i3YKgeN13RMM8jm2CM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x0bc427294a71dc161342a52e44be5115bee357d982db1a19a81e9b35d2b129bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1ed4d92739ffb0ee5c6d620de03b19bac86970834b8d466d07cd34c635580aa\",\"dweb:/ipfs/Qmd4TrQBhFtrUWFZ6mE3nid5UbtDyiW8ULvk3Z7duKKsdH\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xd14f0f5ba3a1573f041549ef4131454ea6e92190d8a3c1e8766938711c7cdbd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2363489c3c9491a9adea826fde46a629ed12ba5016a604dae7082f564d48acee\",\"dweb:/ipfs/QmStKwsYs7KvCgnLL56AKC5zvYXNmHPD1h3XpFxyHprskr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe9bcab1e60160195a5f9816ff263148cbcf2f01ef000e634673680d05ad76111\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26405522defeeb03b20f171cbb679f31feacc52c82328260b708daf821421e2e\",\"dweb:/ipfs/QmUu1YregLaeA85p4yfjxdDY7GvE3QZiz5y9Enh8KXuqdB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5c14bbe33475eec92091d9203ca7981adcae6f65e256d212e5934920fe0a447b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20c61fa9aaf28b507774d847b71067d50315863549d6fb67d1b46c31c0efa2e8\",\"dweb:/ipfs/QmP2MdLxHTwffJNdxtm4VeW1XVtUZwmiDxEvCPA4sPF8aY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe9bcab1e60160195a5f9816ff263148cbcf2f01ef000e634673680d05ad76111\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26405522defeeb03b20f171cbb679f31feacc52c82328260b708daf821421e2e\",\"dweb:/ipfs/QmUu1YregLaeA85p4yfjxdDY7GvE3QZiz5y9Enh8KXuqdB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6e9345d9ca72137f0e6180ffa193e8dd8e890a4a38f556040a1410c180017942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e2ccbe72df9cda0a3647a68752416f96dce03185f4bd33fc25355c94de79d5\",\"dweb:/ipfs/Qmer4uF3GRWaBfms5eAuiEi4JJQvwwn7UPjn212Tqwrcs9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf94e12c661651a6f70062449f3933bece6bc61901853affe01d507aa1ede591b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85e152b7adddeb9f42f82d88c7544f6345f60b1738e738b8e3c805202addecd\",\"dweb:/ipfs/QmdWF9Ecj56gkbRqkxRvjY9zq6UDd91ekhBcVdXfQXTPjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xe5bb39b4f0d8d92ad4355cf0451d1c9cad10a76f3b43058276866f27233c35cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b79ecfb3efa214763e6a0c19d394986b1381e23d56d8f03dbc07a6ed084ea6b\",\"dweb:/ipfs/QmdnP2aDhVpZChfGjFr2sMJeuvueTjmnnuzaaLB8wUedpS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xe9f6e61c1cb74b20b0f77828ad61faff9d993ec05ca813613f277c437ce8ab4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51365ac19d4ed3bd7d77343f793968128c509e606611b328ae900684658053b3\",\"dweb:/ipfs/QmSXWiRwXdZyHVvyGis6zKBDm5nJehYJxMXfAyLdFiei1E\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x7e0668df2a2851ec51d3a32b9a40cccba141a4adbde1413da1cc1fa81bfc78f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e6cad65bffa5bbf2ed5bd7c515e59970f23a1530d756207783371a969c34c1\",\"dweb:/ipfs/QmVFiZZnjZbH5998eDm1DvbGTwdD1GEu8vpUmLmUPSoFjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x4c3b5ecf2e0f2d466f6e12645709d1a884961b4b82c8f6b7fad7c83f6c52ae42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1409caf33c143298e72b1b8f7e32badf0575bc7458a2f417acf0e6bbdd868359\",\"dweb:/ipfs/Qmcq8iWwCk5NjdeuxrVTg4FAPrPhbbkL8DdvUpYBFjYX2f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 238,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 240,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 244,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 248,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 252,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 258,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe9bcab1e60160195a5f9816ff263148cbcf2f01ef000e634673680d05ad76111\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26405522defeeb03b20f171cbb679f31feacc52c82328260b708daf821421e2e\",\"dweb:/ipfs/QmUu1YregLaeA85p4yfjxdDY7GvE3QZiz5y9Enh8KXuqdB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6e9345d9ca72137f0e6180ffa193e8dd8e890a4a38f556040a1410c180017942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e2ccbe72df9cda0a3647a68752416f96dce03185f4bd33fc25355c94de79d5\",\"dweb:/ipfs/Qmer4uF3GRWaBfms5eAuiEi4JJQvwwn7UPjn212Tqwrcs9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xac0e8ef0c346f8f3fa5eead5fb5801fe4d0c1073b76c577c56f45a7316910cd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a68340ec3ecfb54ff31163d45886dd79bfc6e1e6e5607cf3df80b6a2ca8e42e\",\"dweb:/ipfs/QmU7R65G9u1MozPZnwabzFiGApd6i3YKgeN13RMM8jm2CM\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0x0bc427294a71dc161342a52e44be5115bee357d982db1a19a81e9b35d2b129bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d1ed4d92739ffb0ee5c6d620de03b19bac86970834b8d466d07cd34c635580aa\",\"dweb:/ipfs/Qmd4TrQBhFtrUWFZ6mE3nid5UbtDyiW8ULvk3Z7duKKsdH\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xd14f0f5ba3a1573f041549ef4131454ea6e92190d8a3c1e8766938711c7cdbd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2363489c3c9491a9adea826fde46a629ed12ba5016a604dae7082f564d48acee\",\"dweb:/ipfs/QmStKwsYs7KvCgnLL56AKC5zvYXNmHPD1h3XpFxyHprskr\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x5cf735f5eac2ea8469cdf266e51027bebb762eb33886f09157afc8902e177119\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9d9420ab10ec9a2e42cb934cadfe506aa446e8dbc49fa89f1f70e1d1e926c5a\",\"dweb:/ipfs/QmPKYUyeHpAN3YAkenrpSKnNZTaznS8gbkdAQqYZynCuwh\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x5c14bbe33475eec92091d9203ca7981adcae6f65e256d212e5934920fe0a447b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20c61fa9aaf28b507774d847b71067d50315863549d6fb67d1b46c31c0efa2e8\",\"dweb:/ipfs/QmP2MdLxHTwffJNdxtm4VeW1XVtUZwmiDxEvCPA4sPF8aY\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe9bcab1e60160195a5f9816ff263148cbcf2f01ef000e634673680d05ad76111\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26405522defeeb03b20f171cbb679f31feacc52c82328260b708daf821421e2e\",\"dweb:/ipfs/QmUu1YregLaeA85p4yfjxdDY7GvE3QZiz5y9Enh8KXuqdB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x6e9345d9ca72137f0e6180ffa193e8dd8e890a4a38f556040a1410c180017942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b5e2ccbe72df9cda0a3647a68752416f96dce03185f4bd33fc25355c94de79d5\",\"dweb:/ipfs/Qmer4uF3GRWaBfms5eAuiEi4JJQvwwn7UPjn212Tqwrcs9\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xf600162b5f65a3cc2a5e9f15cc3ae684f69761b5e218db7763974ef1675b186f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://254e952e92220f935a5b9dc35765570afe4b7c1486422e9c30d57534ad0d3baa\",\"dweb:/ipfs/QmdMsxUsvYBr1BCr4oUxZv8NsFfqBr9F79C2xtiL7c6mi7\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf94e12c661651a6f70062449f3933bece6bc61901853affe01d507aa1ede591b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85e152b7adddeb9f42f82d88c7544f6345f60b1738e738b8e3c805202addecd\",\"dweb:/ipfs/QmdWF9Ecj56gkbRqkxRvjY9zq6UDd91ekhBcVdXfQXTPjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xe5bb39b4f0d8d92ad4355cf0451d1c9cad10a76f3b43058276866f27233c35cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b79ecfb3efa214763e6a0c19d394986b1381e23d56d8f03dbc07a6ed084ea6b\",\"dweb:/ipfs/QmdnP2aDhVpZChfGjFr2sMJeuvueTjmnnuzaaLB8wUedpS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xe9f6e61c1cb74b20b0f77828ad61faff9d993ec05ca813613f277c437ce8ab4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51365ac19d4ed3bd7d77343f793968128c509e606611b328ae900684658053b3\",\"dweb:/ipfs/QmSXWiRwXdZyHVvyGis6zKBDm5nJehYJxMXfAyLdFiei1E\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x7e0668df2a2851ec51d3a32b9a40cccba141a4adbde1413da1cc1fa81bfc78f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e6cad65bffa5bbf2ed5bd7c515e59970f23a1530d756207783371a969c34c1\",\"dweb:/ipfs/QmVFiZZnjZbH5998eDm1DvbGTwdD1GEu8vpUmLmUPSoFjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x4c3b5ecf2e0f2d466f6e12645709d1a884961b4b82c8f6b7fad7c83f6c52ae42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1409caf33c143298e72b1b8f7e32badf0575bc7458a2f417acf0e6bbdd868359\",\"dweb:/ipfs/Qmcq8iWwCk5NjdeuxrVTg4FAPrPhbbkL8DdvUpYBFjYX2f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 238,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 240,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 244,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 248,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 252,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 258,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1342,
								"contract": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xe9bcab1e60160195a5f9816ff263148cbcf2f01ef000e634673680d05ad76111\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26405522defeeb03b20f171cbb679f31feacc52c82328260b708daf821421e2e\",\"dweb:/ipfs/QmUu1YregLaeA85p4yfjxdDY7GvE3QZiz5y9Enh8KXuqdB\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf94e12c661651a6f70062449f3933bece6bc61901853affe01d507aa1ede591b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e85e152b7adddeb9f42f82d88c7544f6345f60b1738e738b8e3c805202addecd\",\"dweb:/ipfs/QmdWF9Ecj56gkbRqkxRvjY9zq6UDd91ekhBcVdXfQXTPjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol\":{\"keccak256\":\"0xdbc33ea310e83250cca8ad26e935a8d50ea10e781ba64a31beb0ea2ec912c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54cc15b73a5e92fd1ed78cb67504a534ab5879e11c0688ec10809128e1e00ac8\",\"dweb:/ipfs/QmPRtXeXmMyYt8J8u57HV6GQjuSevjE8gk5tMeyqXdkAzu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":251:3096  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":251:3096  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f4ae542d7d5c070f12f8a825307591135c4c24bd5390776b816e115d612e60b464736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f4ae542d7d5c070f12f8a825307591135c4c24bd5390776b816e115d612e60b464736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xAE SLOAD 0x2D PUSH30 0x5C070F12F8A825307591135C4C24BD5390776B816E115D612E60B464736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "251:2845:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220f4ae542d7d5c070f12f8a825307591135c4c24bd5390776b816e115d612e60b464736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DELEGATECALL 0xAE SLOAD 0x2D PUSH30 0x5C070F12F8A825307591135C4C24BD5390776B816E115D612E60B464736F PUSH13 0x63430008150033000000000000 ",
							"sourceMap": "251:2845:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 251,
									"end": 3096,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f4ae542d7d5c070f12f8a825307591135c4c24bd5390776b816e115d612e60b464736f6c63430008150033",
									".code": [
										{
											"begin": 251,
											"end": 3096,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 251,
											"end": 3096,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol\":{\"keccak256\":\"0xe5bb39b4f0d8d92ad4355cf0451d1c9cad10a76f3b43058276866f27233c35cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2b79ecfb3efa214763e6a0c19d394986b1381e23d56d8f03dbc07a6ed084ea6b\",\"dweb:/ipfs/QmdnP2aDhVpZChfGjFr2sMJeuvueTjmnnuzaaLB8wUedpS\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x7e0668df2a2851ec51d3a32b9a40cccba141a4adbde1413da1cc1fa81bfc78f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e6cad65bffa5bbf2ed5bd7c515e59970f23a1530d756207783371a969c34c1\",\"dweb:/ipfs/QmVFiZZnjZbH5998eDm1DvbGTwdD1GEu8vpUmLmUPSoFjs\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x4c3b5ecf2e0f2d466f6e12645709d1a884961b4b82c8f6b7fad7c83f6c52ae42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1409caf33c143298e72b1b8f7e32badf0575bc7458a2f417acf0e6bbdd868359\",\"dweb:/ipfs/Qmcq8iWwCk5NjdeuxrVTg4FAPrPhbbkL8DdvUpYBFjYX2f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xe9f6e61c1cb74b20b0f77828ad61faff9d993ec05ca813613f277c437ce8ab4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://51365ac19d4ed3bd7d77343f793968128c509e606611b328ae900684658053b3\",\"dweb:/ipfs/QmSXWiRwXdZyHVvyGis6zKBDm5nJehYJxMXfAyLdFiei1E\"]},\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xf66b7397bb70080f6f4ec77eecfda1814d04e47f70d55b0f22179619045f6835\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b70065eda5adfda82cdec1258c13a660dfe9a403bba7df7abc320ca04770ebc7\",\"dweb:/ipfs/QmbW11jKKvA5HUrAR5P4YoDdWJLEGGM9MZu64YqwgFwgNn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15109  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":203:15109  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204c9abbd2c74f78159332dbad837e2473f01ea6f354ad48e1ad7ea74daba8010f64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c9abbd2c74f78159332dbad837e2473f01ea6f354ad48e1ad7ea74daba8010f64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SWAP11 0xBB 0xD2 0xC7 0x4F PUSH25 0x159332DBAD837E2473F01EA6F354AD48E1AD7EA74DABA8010F PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14906:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212204c9abbd2c74f78159332dbad837e2473f01ea6f354ad48e1ad7ea74daba8010f64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C SWAP11 0xBB 0xD2 0xC7 0x4F PUSH25 0x159332DBAD837E2473F01EA6F354AD48E1AD7EA74DABA8010F PUSH5 0x736F6C6343 STOP ADDMOD ISZERO STOP CALLER ",
							"sourceMap": "203:14906:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 203,
									"end": 15109,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204c9abbd2c74f78159332dbad837e2473f01ea6f354ad48e1ad7ea74daba8010f64736f6c63430008150033",
									".code": [
										{
											"begin": 203,
											"end": 15109,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 203,
											"end": 15109,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x7e0668df2a2851ec51d3a32b9a40cccba141a4adbde1413da1cc1fa81bfc78f2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://05e6cad65bffa5bbf2ed5bd7c515e59970f23a1530d756207783371a969c34c1\",\"dweb:/ipfs/QmVFiZZnjZbH5998eDm1DvbGTwdD1GEu8vpUmLmUPSoFjs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220633daffaeea3338326a364878078bba2baef7ff6a10d3c4dc2f437a1c81facaf64736f6c63430008150033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220633daffaeea3338326a364878078bba2baef7ff6a10d3c4dc2f437a1c81facaf64736f6c63430008150033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x3DAFFAEE LOG3 CALLER DUP4 0x26 LOG3 PUSH5 0x878078BBA2 0xBA 0xEF PUSH32 0xF6A10D3C4DC2F437A1C81FACAF64736F6C634300081500330000000000000000 ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220633daffaeea3338326a364878078bba2baef7ff6a10d3c4dc2f437a1c81facaf64736f6c63430008150033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x3DAFFAEE LOG3 CALLER DUP4 0x26 LOG3 PUSH5 0x878078BBA2 0xBA 0xEF PUSH32 0xF6A10D3C4DC2F437A1C81FACAF64736F6C634300081500330000000000000000 ",
							"sourceMap": "216:1047:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220633daffaeea3338326a364878078bba2baef7ff6a10d3c4dc2f437a1c81facaf64736f6c63430008150033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyNFT.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
								"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x4c3b5ecf2e0f2d466f6e12645709d1a884961b4b82c8f6b7fad7c83f6c52ae42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1409caf33c143298e72b1b8f7e32badf0575bc7458a2f417acf0e6bbdd868359\",\"dweb:/ipfs/Qmcq8iWwCk5NjdeuxrVTg4FAPrPhbbkL8DdvUpYBFjYX2f\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyNFT.sol": {
				"ast": {
					"absolutePath": "contracts/MyNFT.sol",
					"exportedSymbols": {
						"ERC721": [
							1185
						],
						"ERC721URIStorage": [
							1505
						],
						"IERC165": [
							1846
						],
						"IERC4906": [
							64
						],
						"MyNFT": [
							36
						],
						"Strings": [
							1810
						]
					},
					"id": 37,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "35:24:0"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 37,
							"sourceUnit": 1506,
							"src": "63:131:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"216:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1505,
										"src": "216:16:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "216:16:0"
								}
							],
							"canonicalName": "MyNFT",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 36,
							"linearizedBaseContracts": [
								36,
								1505,
								1185,
								158,
								1533,
								64,
								1302,
								1834,
								1846,
								1555
							],
							"name": "MyNFT",
							"nameLocation": "207:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "281:2:0",
										"statements": []
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "537461636b204e465473",
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "259:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_e35b8e743705f15470eb6c4f62ce7b2a33d5013ff00777b4e0290333111aa65c",
														"typeString": "literal_string \"Stack NFTs\""
													},
													"value": "Stack NFTs"
												},
												{
													"hexValue": "534e4654",
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a18789003a02245e0d622227aa1c8c4381221a4274a0fd7a60fd5b2a63f59639",
														"typeString": "literal_string \"SNFT\""
													},
													"value": "SNFT"
												}
											],
											"id": 9,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 6,
												"name": "ERC721",
												"nameLocations": [
													"252:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1185,
												"src": "252:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "252:28:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "281:0:0"
									},
									"scope": 36,
									"src": "238:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "75794a3c",
									"id": 14,
									"mutability": "mutable",
									"name": "nextTokenId",
									"nameLocation": "304:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 36,
									"src": "289:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "289:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "397:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 22,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "411:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 23,
															"name": "nextTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "416:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 21,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "405:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "405:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "405:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 27,
															"name": "nextTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 14,
															"src": "449:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 28,
															"name": "_uri",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "462:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_calldata_ptr",
																"typeString": "string calldata"
															}
														],
														"id": 26,
														"name": "_setTokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "436:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "436:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "436:31:0"
											},
											{
												"expression": {
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "475:13:0",
													"subExpression": {
														"id": 31,
														"name": "nextTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "475:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "475:13:0"
											}
										]
									},
									"functionSelector": "d0def521",
									"id": 35,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "331:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "351:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "343:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "377:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "361:20:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 17,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "361:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:51:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "397:0:0"
									},
									"scope": 36,
									"src": "322:172:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 37,
							"src": "198:299:0",
							"usedErrors": [
								116,
								121,
								130,
								135,
								140,
								147,
								152,
								157
							],
							"usedEvents": [
								56,
								63,
								1201,
								1210,
								1219
							]
						}
					],
					"src": "35:462:0"
				},
				"id": 0
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1846
						]
					},
					"id": 41,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 38,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "91:24:1"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 40,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 41,
							"sourceUnit": 1847,
							"src": "117:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 39,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1846,
										"src": "125:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "91:86:1"
				},
				"id": 1
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1846
						],
						"IERC4906": [
							64
						],
						"IERC721": [
							1302
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 42,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 44,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 65,
							"sourceUnit": 41,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 43,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1846,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 46,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 65,
							"sourceUnit": 69,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 45,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1302,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 48,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1846,
										"src": "279:7:2"
									},
									"id": 49,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 50,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1302,
										"src": "288:7:2"
									},
									"id": 51,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 47,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 64,
							"linearizedBaseContracts": [
								64,
								1302,
								1846
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 56,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 63,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 60,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 65,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								56,
								63,
								1201,
								1210,
								1219
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1302
						]
					},
					"id": 69,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "91:24:3"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 68,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 69,
							"sourceUnit": 1303,
							"src": "117:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 67,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1302,
										"src": "125:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "91:79:3"
				},
				"id": 3
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							205
						],
						"IERC20Errors": [
							110
						],
						"IERC721Errors": [
							158
						]
					},
					"id": 206,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 70,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 71,
								"nodeType": "StructuredDocumentation",
								"src": "58:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 110,
							"linearizedBaseContracts": [
								110
							],
							"name": "IERC20Errors",
							"nameLocation": "208:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "227:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 80,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "547:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "580:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "572:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "572:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "596:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "588:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "588:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "613:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "605:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "605:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "571:49:4"
									},
									"src": "541:80:4"
								},
								{
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "627:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 85,
									"name": "ERC20InvalidSender",
									"nameLocation": "790:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "817:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "809:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"src": "784:41:4"
								},
								{
									"documentation": {
										"id": 86,
										"nodeType": "StructuredDocumentation",
										"src": "831:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 90,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1001:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1030:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1022:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:18:4"
									},
									"src": "995:45:4"
								},
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "1046:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 99,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1402:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1437:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1429:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1454:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1446:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1446:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1473:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "1465:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1428:52:4"
									},
									"src": "1396:85:4"
								},
								{
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "1487:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 104,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1672:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1701:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "1693:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:18:4"
									},
									"src": "1666:45:4"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "1717:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 109,
									"name": "ERC20InvalidSpender",
									"nameLocation": "1923:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1951:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "1943:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1942:17:4"
									},
									"src": "1917:43:4"
								}
							],
							"scope": 206,
							"src": "198:1764:4",
							"usedErrors": [
								80,
								85,
								90,
								99,
								104,
								109
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 111,
								"nodeType": "StructuredDocumentation",
								"src": "1964:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 158,
							"linearizedBaseContracts": [
								158
							],
							"name": "IERC721Errors",
							"nameLocation": "2116:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "2136:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 116,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2366:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2393:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2385:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2385:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2384:15:4"
									},
									"src": "2360:40:4"
								},
								{
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "2406:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 121,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2549:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2580:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 121,
												"src": "2572:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:17:4"
									},
									"src": "2543:46:4"
								},
								{
									"documentation": {
										"id": 122,
										"nodeType": "StructuredDocumentation",
										"src": "2595:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 130,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2895:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2924:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2916:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2940:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2932:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2932:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 130,
												"src": "2949:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2915:48:4"
									},
									"src": "2889:75:4"
								},
								{
									"documentation": {
										"id": 131,
										"nodeType": "StructuredDocumentation",
										"src": "2970:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 135,
									"name": "ERC721InvalidSender",
									"nameLocation": "3133:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3161:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "3153:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3152:16:4"
									},
									"src": "3127:42:4"
								},
								{
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "3175:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 140,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3345:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3375:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3367:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3367:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3366:18:4"
									},
									"src": "3339:46:4"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3391:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 147,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3649:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3684:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "3676:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3676:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3702:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "3694:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3675:35:4"
									},
									"src": "3643:68:4"
								},
								{
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "3717:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 152,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3902:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "3932:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "3924:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3923:18:4"
									},
									"src": "3896:46:4"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "3948:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 157,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4156:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4186:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "4178:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4178:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:18:4"
									},
									"src": "4150:46:4"
								}
							],
							"scope": 206,
							"src": "2106:2092:4",
							"usedErrors": [
								116,
								121,
								130,
								135,
								140,
								147,
								152,
								157
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 159,
								"nodeType": "StructuredDocumentation",
								"src": "4200:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 205,
							"linearizedBaseContracts": [
								205
							],
							"name": "IERC1155Errors",
							"nameLocation": "4354:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "4375:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 170,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4747:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4782:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4774:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4774:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4798:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4790:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4790:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4815:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4807:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4807:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4831:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "4823:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4773:66:4"
									},
									"src": "4741:99:4"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "4846:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 175,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5009:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5038:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "5030:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5030:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5029:16:4"
									},
									"src": "5003:43:4"
								},
								{
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "5052:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 180,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5222:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5253:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "5245:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5245:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5244:18:4"
									},
									"src": "5216:47:4"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "5269:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 187,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5536:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5573:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "5565:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5565:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5591:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "5583:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5583:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5564:33:4"
									},
									"src": "5530:68:4"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "5604:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 192,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5789:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5820:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "5812:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5811:18:4"
									},
									"src": "5783:47:4"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "5836:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 197,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6044:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6075:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "6067:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6067:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6066:18:4"
									},
									"src": "6038:47:4"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "6091:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 204,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6382:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6416:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "6408:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6408:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6435:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "6427:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6427:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6407:41:4"
									},
									"src": "6376:73:4"
								}
							],
							"scope": 206,
							"src": "4344:2107:4",
							"usedErrors": [
								170,
								175,
								180,
								187,
								192,
								197,
								204
							],
							"usedEvents": []
						}
					],
					"src": "32:6420:4"
				},
				"id": 4
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1555
						],
						"ERC165": [
							1834
						],
						"ERC721": [
							1185
						],
						"IERC165": [
							1846
						],
						"IERC721": [
							1302
						],
						"IERC721Errors": [
							158
						],
						"IERC721Metadata": [
							1533
						],
						"IERC721Receiver": [
							1320
						],
						"Strings": [
							1810
						]
					},
					"id": 1186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 207,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:5"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1303,
							"src": "133:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 208,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1302,
										"src": "141:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1321,
							"src": "172:54:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 210,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1320,
										"src": "180:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 213,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1534,
							"src": "227:65:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 212,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1533,
										"src": "235:15:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 215,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1556,
							"src": "293:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 214,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1555,
										"src": "301:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 217,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1811,
							"src": "342:48:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 216,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1810,
										"src": "350:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 1835,
							"src": "391:69:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 218,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1846,
										"src": "399:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 219,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1834,
										"src": "408:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 222,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1186,
							"sourceUnit": 206,
							"src": "461:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 221,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 158,
										"src": "469:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 224,
										"name": "Context",
										"nameLocations": [
											"804:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1555,
										"src": "804:7:5"
									},
									"id": 225,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:5"
								},
								{
									"baseName": {
										"id": 226,
										"name": "ERC165",
										"nameLocations": [
											"813:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1834,
										"src": "813:6:5"
									},
									"id": 227,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:5"
								},
								{
									"baseName": {
										"id": 228,
										"name": "IERC721",
										"nameLocations": [
											"821:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1302,
										"src": "821:7:5"
									},
									"id": 229,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:5"
								},
								{
									"baseName": {
										"id": 230,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1533,
										"src": "830:15:5"
									},
									"id": 231,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:5"
								},
								{
									"baseName": {
										"id": 232,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 158,
										"src": "847:13:5"
									},
									"id": 233,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:5"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 223,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:5",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1185,
							"linearizedBaseContracts": [
								1185,
								158,
								1533,
								1302,
								1834,
								1846,
								1555
							],
							"name": "ERC721",
							"nameLocation": "794:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 236,
									"libraryName": {
										"id": 234,
										"name": "Strings",
										"nameLocations": [
											"873:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1810,
										"src": "873:7:5"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:5",
									"typeName": {
										"id": 235,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 238,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "917:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 237,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 240,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "964:22:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 239,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:5",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 244,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "993:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 243,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:5",
										"keyType": {
											"id": 241,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 242,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:5",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "1051:51:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 247,
										"keyName": "owner",
										"keyNameLocation": "1067:5:5",
										"keyType": {
											"id": 245,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 246,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 252,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "1109:59:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 251,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:5",
										"keyType": {
											"id": 249,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 250,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:5",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 258,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:5",
									"nodeType": "VariableDeclaration",
									"scope": 1185,
									"src": "1175:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 257,
										"keyName": "owner",
										"keyNameLocation": "1191:5:5",
										"keyType": {
											"id": 253,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:5",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 256,
											"keyName": "operator",
											"keyNameLocation": "1216:8:5",
											"keyType": {
												"id": 254,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:5",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 255,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:5",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "1437:57:5",
										"statements": [
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 266,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "1447:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 267,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 261,
														"src": "1455:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:5"
											},
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 270,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "1470:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 271,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "1480:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:5"
											}
										]
									},
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:5",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 275,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1393:19:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 260,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1414:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 262,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:5"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:5"
									},
									"scope": 1185,
									"src": "1381:113:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1833,
										1845
									],
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "1669:192:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 286,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1698:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 288,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1302,
																			"src": "1718:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1302_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1302_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 287,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 289,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1302",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1754:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 294,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1533,
																			"src": "1774:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1533_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1533_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 293,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1533",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:5",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 301,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 278,
																"src": "1842:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 299,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1185_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:5",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1833,
															"src": "1818:23:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 285,
												"id": 304,
												"nodeType": "Return",
												"src": "1679:175:5"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 282,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 280,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1834,
												"src": "1637:6:5"
											},
											{
												"id": 281,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1846,
												"src": "1645:7:5"
											}
										],
										"src": "1628:25:5"
									},
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1588:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 277,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:5"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "1663:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 283,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:5"
									},
									"scope": 1185,
									"src": "1561:300:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "1992:136:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 314,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "2006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 315,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "2002:87:5",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "2027:62:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 323,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 321,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 320,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 116,
																	"src": "2048:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 326,
															"nodeType": "RevertStatement",
															"src": "2041:37:5"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 329,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2105:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 331,
													"indexExpression": {
														"id": 330,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "2115:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "2098:23:5"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:5",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1939:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:5"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "1983:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:5"
									},
									"scope": 1185,
									"src": "1920:208:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1235
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "2257:169:5",
										"statements": [
											{
												"assignments": [
													343
												],
												"declarations": [
													{
														"constant": false,
														"id": 343,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2275:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "2267:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 342,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2267:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 347,
												"initialValue": {
													"arguments": [
														{
															"id": 345,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "2292:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 344,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "2283:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2283:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2267:33:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 348,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "2314:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2331:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2323:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 349,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2323:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2323:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2314:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "2310:88:5",
												"trueBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "2335:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 355,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 337,
																		"src": "2379:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 354,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "2356:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2356:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 357,
															"nodeType": "RevertStatement",
															"src": "2349:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 360,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 343,
													"src": "2414:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 341,
												"id": 361,
												"nodeType": "Return",
												"src": "2407:12:5"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:5",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2202:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:5"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2248:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:5"
									},
									"scope": 1185,
									"src": "2185:241:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1518
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "2548:29:5",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 238,
													"src": "2565:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "2558:12:5"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2432:51:5",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2497:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2501:2:5"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "2533:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2533:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2532:15:5"
									},
									"scope": 1185,
									"src": "2488:89:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1524
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "2703:31:5",
										"statements": [
											{
												"expression": {
													"id": 378,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 240,
													"src": "2720:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 377,
												"id": 379,
												"nodeType": "Return",
												"src": "2713:14:5"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "2583:53:5",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2650:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2688:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 375,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2688:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2687:15:5"
									},
									"scope": 1185,
									"src": "2641:93:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1532
									],
									"body": {
										"id": 416,
										"nodeType": "Block",
										"src": "2879:177:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 390,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "2904:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 389,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "2889:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2889:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "2889:23:5"
											},
											{
												"assignments": [
													394
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2937:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 416,
														"src": "2923:21:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 393,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2923:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 395,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "2947:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2947:10:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2923:34:5"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 404,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 400,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "2980:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2974:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 398,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2974:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2974:14:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2989:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2974:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2998:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2974:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3047:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2974:75:5",
													"trueExpression": {
														"arguments": [
															{
																"id": 408,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "3016:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 409,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 384,
																		"src": "3025:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3033:8:5",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1623,
																	"src": "3025:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3025:18:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3002:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 405,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "3002:6:5",
																	"typeDescriptions": {}
																}
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3009:6:5",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "3002:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3002:42:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 388,
												"id": 415,
												"nodeType": "Return",
												"src": "2967:82:5"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2740:55:5",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2809:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2826:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2818:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 383,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2818:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2817:17:5"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2864:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2864:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2863:15:5"
									},
									"scope": 1185,
									"src": "2800:256:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3364:26:5",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3381:2:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 422,
												"id": 424,
												"nodeType": "Return",
												"src": "3374:9:5"
											}
										]
									},
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "3062:231:5",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3307:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3315:2:5"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3349:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 420,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3349:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3348:15:5"
									},
									"scope": 1185,
									"src": "3298:92:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "3508:52:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 435,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "3527:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "3531:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 437,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "3540:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3540:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 434,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "3518:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 440,
												"nodeType": "ExpressionStatement",
												"src": "3518:35:5"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3396:46:5",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3456:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3472:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3464:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3484:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "3476:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3476:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:29:5"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3508:0:5"
									},
									"scope": 1185,
									"src": "3447:113:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1291
									],
									"body": {
										"id": 458,
										"nodeType": "Block",
										"src": "3697:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 451,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3722:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 450,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "3707:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3707:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 453,
												"nodeType": "ExpressionStatement",
												"src": "3707:23:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "3761:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 454,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "3748:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3748:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 449,
												"id": 457,
												"nodeType": "Return",
												"src": "3741:28:5"
											}
										]
									},
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "3566:50:5",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 459,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3630:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3650:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3642:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3642:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3641:17:5"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3688:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3688:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3687:9:5"
									},
									"scope": 1185,
									"src": "3621:155:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1283
									],
									"body": {
										"id": 474,
										"nodeType": "Block",
										"src": "3918:69:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 468,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "3947:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3947:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "3961:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "3971:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 467,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1099,
														"src": "3928:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3928:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 473,
												"nodeType": "ExpressionStatement",
												"src": "3928:52:5"
											}
										]
									},
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "3782:56:5",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3852:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3878:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3870:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3870:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3893:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "3888:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3888:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3869:33:5"
									},
									"returnParameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3918:0:5"
									},
									"scope": 1185,
									"src": "3843:144:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1301
									],
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "4147:59:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 485,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "4164:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 487,
														"indexExpression": {
															"id": 486,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "4183:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4164:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 489,
													"indexExpression": {
														"id": 488,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "4190:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4164:35:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 484,
												"id": 490,
												"nodeType": "Return",
												"src": "4157:42:5"
											}
										]
									},
									"documentation": {
										"id": 476,
										"nodeType": "StructuredDocumentation",
										"src": "3993:55:5",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4062:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4087:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4079:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4079:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4102:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4094:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4078:33:5"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "4141:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 482,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4141:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4140:6:5"
									},
									"scope": 1185,
									"src": "4053:153:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "4348:498:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 502,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "4362:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4376:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4368:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 503,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4368:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4368:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4362:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 516,
												"nodeType": "IfStatement",
												"src": "4358:87:5",
												"trueBody": {
													"id": 515,
													"nodeType": "Block",
													"src": "4380:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 511,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4431:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 510,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4423:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 509,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4423:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4423:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 508,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "4401:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4401:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 514,
															"nodeType": "RevertStatement",
															"src": "4394:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													518
												],
												"declarations": [
													{
														"constant": false,
														"id": 518,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4671:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "4663:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 517,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4663:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 525,
												"initialValue": {
													"arguments": [
														{
															"id": 520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "4695:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 521,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "4699:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 522,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "4708:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4708:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 519,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "4687:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4687:34:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4663:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 526,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 518,
														"src": "4735:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 527,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "4752:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4735:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "4731:109:5",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "4758:82:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 530,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 495,
																		"src": "4800:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 531,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 499,
																		"src": "4806:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 532,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 518,
																		"src": "4815:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 529,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "4779:20:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4779:50:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "4772:57:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "4212:51:5",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4277:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4298:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "4290:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4290:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4312:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "4304:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4304:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4324:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "4316:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4289:43:5"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4348:0:5"
									},
									"scope": 1185,
									"src": "4268:578:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1257
									],
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "4988:56:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 549,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "5015:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 550,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "5021:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "5025:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5034:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 548,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															556,
															582
														],
														"referencedDeclaration": 582,
														"src": "4998:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:39:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "4998:39:5"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "4852:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4921:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4946:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4938:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4938:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4960:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4952:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4952:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4972:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "4964:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4964:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4937:43:5"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4988:0:5"
									},
									"scope": 1185,
									"src": "4912:132:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1247
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "5213:105:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 569,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "5236:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 570,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5242:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5246:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 568,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "5223:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5223:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 573,
												"nodeType": "ExpressionStatement",
												"src": "5223:31:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 575,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "5287:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "5293:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 577,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "5297:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 578,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 565,
															"src": "5306:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 574,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "5264:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5264:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "5264:47:5"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "5050:55:5",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5119:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5144:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5136:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5158:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5150:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5150:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5170:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5162:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5192:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "5179:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5179:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5135:62:5"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5213:0:5"
									},
									"scope": 1185,
									"src": "5110:208:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "5907:40:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 590,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "5924:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 592,
													"indexExpression": {
														"id": 591,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "5932:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5924:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "5917:23:5"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "5324:503:5",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5841:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5858:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5850:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5850:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5849:17:5"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "5898:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:9:5"
									},
									"scope": 1185,
									"src": "5832:115:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "6142:48:5",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 603,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 252,
														"src": "6159:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 605,
													"indexExpression": {
														"id": 604,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "6175:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6159:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 602,
												"id": 606,
												"nodeType": "Return",
												"src": "6152:31:5"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "5953:105:5",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "6072:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6093:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6085:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6085:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6084:17:5"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "6133:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6133:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6132:9:5"
									},
									"scope": 1185,
									"src": "6063:127:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "6610:163:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 620,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 613,
															"src": "6639:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 623,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6658:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6650:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 621,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6650:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6650:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6639:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 639,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 628,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 626,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 611,
																			"src": "6677:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 627,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 613,
																			"src": "6686:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6677:16:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 630,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 611,
																				"src": "6714:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 631,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 613,
																				"src": "6721:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 629,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "6697:16:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6697:32:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6677:52:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 635,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 615,
																				"src": "6746:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 634,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 608,
																			"src": "6733:12:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6733:21:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 637,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 613,
																		"src": "6758:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6733:32:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6677:88:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 640,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6676:90:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6639:127:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 619,
												"id": 642,
												"nodeType": "Return",
												"src": "6620:146:5"
											}
										]
									},
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "6196:300:5",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not\n verify this assumption."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6510:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6532:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "6524:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6524:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6547:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "6539:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 612,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6539:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6564:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "6556:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6556:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6523:49:5"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "6604:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 617,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6604:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6603:6:5"
									},
									"scope": 1185,
									"src": "6501:272:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "7298:271:5",
										"statements": [
											{
												"condition": {
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7312:39:5",
													"subExpression": {
														"arguments": [
															{
																"id": 655,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 647,
																"src": "7327:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 656,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 649,
																"src": "7334:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 657,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 651,
																"src": "7343:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 654,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "7313:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7313:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "7308:255:5",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "7353:210:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 660,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 647,
																	"src": "7371:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7388:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7380:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 661,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7380:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7380:10:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7371:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 676,
																"nodeType": "Block",
																"src": "7469:84:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 672,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 649,
																					"src": "7521:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 673,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 651,
																					"src": "7530:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 671,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 147,
																				"src": "7494:26:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7494:44:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 675,
																		"nodeType": "RevertStatement",
																		"src": "7487:51:5"
																	}
																]
															},
															"id": 677,
															"nodeType": "IfStatement",
															"src": "7367:186:5",
															"trueBody": {
																"id": 670,
																"nodeType": "Block",
																"src": "7392:71:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 667,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 651,
																					"src": "7440:7:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 666,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 121,
																				"src": "7417:22:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7417:31:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 669,
																		"nodeType": "RevertStatement",
																		"src": "7410:38:5"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "6779:417:5",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` has not approval for all assets of the provided `owner` nor the actual owner approved the `spender` for the specific `tokenId`.\n WARNING: This function relies on {_isAuthorized}, so it doesn't check whether `owner` is the\n actual owner of `tokenId`."
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7210:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7235:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "7227:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7227:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7250:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "7242:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7267:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "7259:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7259:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7226:49:5"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7298:0:5"
									},
									"scope": 1185,
									"src": "7201:368:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "8286:78:5",
										"statements": [
											{
												"id": 695,
												"nodeType": "UncheckedBlock",
												"src": "8296:62:5",
												"statements": [
													{
														"expression": {
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 689,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 248,
																	"src": "8320:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 691,
																"indexExpression": {
																	"id": 690,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "8330:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8320:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 692,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "8342:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8320:27:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 694,
														"nodeType": "ExpressionStatement",
														"src": "8320:27:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "7575:631:5",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8220:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8245:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "8237:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8237:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8262:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "8254:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 685,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8254:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8236:32:5"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8286:0:5"
									},
									"scope": 1185,
									"src": "8211:153:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "9052:600:5",
										"statements": [
											{
												"assignments": [
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "9070:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 778,
														"src": "9062:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 709,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9062:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"id": 712,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "9086:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 711,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "9077:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9077:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9062:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 715,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "9154:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9170:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9162:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 716,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9162:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9162:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9154:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "9150:86:5",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "9174:62:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 722,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 710,
																		"src": "9205:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 723,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 704,
																		"src": "9211:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 724,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "9217:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 721,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "9188:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9188:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 726,
															"nodeType": "ExpressionStatement",
															"src": "9188:37:5"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 729,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "9280:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9296:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9288:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 730,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9288:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9288:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9280:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "9276:156:5",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "9300:132:5",
													"statements": [
														{
															"expression": {
																"id": 738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "9314:31:5",
																"subExpression": {
																	"baseExpression": {
																		"id": 735,
																		"name": "_tokenApprovals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 252,
																		"src": "9321:15:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 737,
																	"indexExpression": {
																		"id": 736,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 702,
																		"src": "9337:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "9321:24:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 739,
															"nodeType": "ExpressionStatement",
															"src": "9314:31:5"
														},
														{
															"id": 746,
															"nodeType": "UncheckedBlock",
															"src": "9359:63:5",
															"statements": [
																{
																	"expression": {
																		"id": 744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 248,
																				"src": "9387:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 710,
																				"src": "9397:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9387:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9406:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9387:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 745,
																	"nodeType": "ExpressionStatement",
																	"src": "9387:20:5"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 749,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "9446:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9460:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9452:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 750,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9452:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9452:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9446:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "9442:107:5",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "9464:85:5",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "9478:61:5",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 755,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 248,
																				"src": "9506:9:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 757,
																			"indexExpression": {
																				"id": 756,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 700,
																				"src": "9516:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9506:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9523:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9506:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "9506:18:5"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 764,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 244,
															"src": "9559:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 766,
														"indexExpression": {
															"id": 765,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "9567:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9559:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 767,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "9578:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9559:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 769,
												"nodeType": "ExpressionStatement",
												"src": "9559:21:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 771,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "9605:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "9611:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 773,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "9615:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 770,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "9596:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9596:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 775,
												"nodeType": "EmitStatement",
												"src": "9591:32:5"
											},
											{
												"expression": {
													"id": 776,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 710,
													"src": "9641:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 708,
												"id": 777,
												"nodeType": "Return",
												"src": "9634:11:5"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "8370:582:5",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8966:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8982:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "8974:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8974:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8994:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "8986:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8986:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "9011:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "9003:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 703,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9003:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8973:43:5"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "9043:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9043:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9042:9:5"
									},
									"scope": 1185,
									"src": "8957:695:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "10027:274:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "10041:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10055:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10047:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10047:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10047:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10041:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "10037:87:5",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "10059:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10110:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10102:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10102:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10102:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "10080:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10080:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "10073:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													803
												],
												"declarations": [
													{
														"constant": false,
														"id": 803,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10141:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "10133:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 802,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10133:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"arguments": [
														{
															"id": 805,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "10165:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 806,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "10169:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10186:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 808,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10178:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 807,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10178:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 810,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10178:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 804,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "10157:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10157:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10133:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 813,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 803,
														"src": "10203:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10228:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10220:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 814,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10220:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 817,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10220:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10203:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 827,
												"nodeType": "IfStatement",
												"src": "10199:96:5",
												"trueBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "10232:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10281:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10273:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 820,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10273:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10273:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 819,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "10253:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10253:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 825,
															"nodeType": "RevertStatement",
															"src": "10246:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "9658:311:5",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9983:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9997:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "9989:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10009:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "10001:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10001:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9988:29:5"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10027:0:5"
									},
									"scope": 1185,
									"src": "9974:327:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "10709:43:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 838,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "10729:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "10733:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10742:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 837,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															844,
															870
														],
														"referencedDeclaration": 870,
														"src": "10719:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10719:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "10719:26:5"
											}
										]
									},
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "10307:340:5",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10661:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10679:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10671:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10671:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10691:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "10683:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10670:29:5"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10709:0:5"
									},
									"scope": 1185,
									"src": "10652:100:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "11057:98:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "11073:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 856,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "11077:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 854,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "11067:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11067:18:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "11067:18:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11126:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11118:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11118:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11118:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 864,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "11130:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "11134:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 866,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "11143:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 859,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "11095:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11095:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "11095:53:5"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "10758:210:5",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10982:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "11000:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "10992:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10992:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11012:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "11004:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11004:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11034:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "11021:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11021:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10991:48:5"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11057:0:5"
									},
									"scope": 1185,
									"src": "10973:182:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "11522:186:5",
										"statements": [
											{
												"assignments": [
													877
												],
												"declarations": [
													{
														"constant": false,
														"id": 877,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11540:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 902,
														"src": "11532:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 876,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11532:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 889,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11572:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11564:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 879,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11564:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11564:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 883,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "11576:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 886,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11593:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11585:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 884,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11585:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11585:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 878,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "11556:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11556:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11532:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "11610:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11635:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11627:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11627:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11627:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11610:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "11606:96:5",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "11639:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 897,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "11683:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 896,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "11660:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11660:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "RevertStatement",
															"src": "11653:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "11161:315:5",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11490:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11504:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "11496:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 872,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11496:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11495:17:5"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11522:0:5"
									},
									"scope": 1185,
									"src": "11481:227:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "12103:389:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 913,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "12117:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 916,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12123:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 914,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12123:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12123:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12117:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 927,
												"nodeType": "IfStatement",
												"src": "12113:87:5",
												"trueBody": {
													"id": 926,
													"nodeType": "Block",
													"src": "12135:65:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 922,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12186:1:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12178:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 920,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12178:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 923,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12178:10:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 919,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "12156:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12156:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 925,
															"nodeType": "RevertStatement",
															"src": "12149:40:5"
														}
													]
												}
											},
											{
												"assignments": [
													929
												],
												"declarations": [
													{
														"constant": false,
														"id": 929,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12217:13:5",
														"nodeType": "VariableDeclaration",
														"scope": 962,
														"src": "12209:21:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 928,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12209:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"arguments": [
														{
															"id": 931,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "12241:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 932,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "12245:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12262:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12254:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 933,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12254:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12254:10:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 930,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "12233:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12233:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12209:56:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 939,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "12279:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12304:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 941,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12296:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 940,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12296:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12296:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12279:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 950,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "12381:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 951,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "12398:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12381:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 960,
													"nodeType": "IfStatement",
													"src": "12377:109:5",
													"trueBody": {
														"id": 959,
														"nodeType": "Block",
														"src": "12404:82:5",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 954,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 906,
																			"src": "12446:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 955,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 910,
																			"src": "12452:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 956,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 929,
																			"src": "12461:13:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 953,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 130,
																		"src": "12425:20:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 957,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12425:50:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 958,
																"nodeType": "RevertStatement",
																"src": "12418:57:5"
															}
														]
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "12275:211:5",
												"trueBody": {
													"id": 949,
													"nodeType": "Block",
													"src": "12308:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 946,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "12352:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 945,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "12329:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12329:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 948,
															"nodeType": "RevertStatement",
															"src": "12322:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "11714:313:5",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12041:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12059:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "12051:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12051:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12073:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "12065:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12065:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12085:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "12077:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12077:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12050:43:5"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12103:0:5"
									},
									"scope": 1185,
									"src": "12032:460:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "13500:53:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 974,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "13524:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 975,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "13530:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 976,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "13534:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13543:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 973,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															981,
															1007
														],
														"referencedDeclaration": 1007,
														"src": "13510:13:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13510:36:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 979,
												"nodeType": "ExpressionStatement",
												"src": "13510:36:5"
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "12498:922:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13434:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13456:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "13448:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 965,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13448:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13470:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "13462:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13462:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13482:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "13474:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13474:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13447:43:5"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13500:0:5"
									},
									"scope": 1185,
									"src": "13425:128:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "13892:102:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 994,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "13912:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "13918:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 996,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "13922:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 993,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "13902:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13902:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 998,
												"nodeType": "ExpressionStatement",
												"src": "13902:28:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1000,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "13963:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "13969:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1002,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 988,
															"src": "13973:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1003,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "13982:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 999,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1184,
														"src": "13940:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13940:47:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1005,
												"nodeType": "ExpressionStatement",
												"src": "13940:47:5"
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "13559:226:5",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13799:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13821:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "13813:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13813:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13835:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "13827:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13827:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13847:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "13839:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13869:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "13856:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 989,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13856:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13812:62:5"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13892:0:5"
									},
									"scope": 1185,
									"src": "13790:204:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1061,
										"nodeType": "Block",
										"src": "14419:404:5",
										"statements": [
											{
												"assignments": [
													1020
												],
												"declarations": [
													{
														"constant": false,
														"id": 1020,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14437:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 1061,
														"src": "14429:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1019,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14429:7:5",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1024,
												"initialValue": {
													"arguments": [
														{
															"id": 1022,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "14453:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1021,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "14445:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14445:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14429:32:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1025,
																"name": "auth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "14581:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1028,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14597:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14589:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1026,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14589:7:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14589:10:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14581:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1031,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "14603:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1032,
																"name": "auth",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1014,
																"src": "14612:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14603:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "14581:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "14620:30:5",
														"subExpression": {
															"arguments": [
																{
																	"id": 1036,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1020,
																	"src": "14638:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1037,
																	"name": "auth",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1014,
																	"src": "14645:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1035,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 492,
																"src": "14621:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14621:29:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14581:69:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "14577:134:5",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "14652:59:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1042,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "14695:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1041,
																	"name": "ERC721InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "14673:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14673:27:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1044,
															"nodeType": "RevertStatement",
															"src": "14666:34:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1047,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "14721:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1049,
														"indexExpression": {
															"id": 1048,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "14737:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14721:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1050,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "14748:2:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14721:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1052,
												"nodeType": "ExpressionStatement",
												"src": "14721:29:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1054,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "14774:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1055,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1010,
															"src": "14781:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1056,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1012,
															"src": "14785:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1053,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1210,
														"src": "14765:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14765:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1058,
												"nodeType": "EmitStatement",
												"src": "14760:33:5"
											},
											{
												"expression": {
													"id": 1059,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1020,
													"src": "14811:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1018,
												"id": 1060,
												"nodeType": "Return",
												"src": "14804:12:5"
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "14000:318:5",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event."
									},
									"id": 1062,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14332:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14349:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "14341:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14341:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14361:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "14353:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14353:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14378:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "14370:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14370:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14340:43:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "14410:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14410:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14409:9:5"
									},
									"scope": 1185,
									"src": "14323:500:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1098,
										"nodeType": "Block",
										"src": "15125:219:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1072,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "15139:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15159:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15151:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1073,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15151:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15151:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15139:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1083,
												"nodeType": "IfStatement",
												"src": "15135:91:5",
												"trueBody": {
													"id": 1082,
													"nodeType": "Block",
													"src": "15163:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1079,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1067,
																		"src": "15206:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1078,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 157,
																	"src": "15184:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15184:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1081,
															"nodeType": "RevertStatement",
															"src": "15177:38:5"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1084,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "15235:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1087,
															"indexExpression": {
																"id": 1085,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "15254:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15235:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1088,
														"indexExpression": {
															"id": 1086,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "15261:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15235:35:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1089,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "15273:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15235:46:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "15235:46:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1093,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "15311:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1094,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "15318:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1095,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "15328:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1092,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "15296:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15296:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "EmitStatement",
												"src": "15291:46:5"
											}
										]
									},
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "14829:198:5",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15041:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15068:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "15060:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15060:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15083:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "15075:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15075:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15098:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1099,
												"src": "15093:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1068,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15093:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15059:48:5"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15125:0:5"
									},
									"scope": 1185,
									"src": "15032:312:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1119,
										"nodeType": "Block",
										"src": "15491:116:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1106,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1102,
																"src": "15514:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1105,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "15505:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 1107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15505:17:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1110,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15534:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15526:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1108,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15526:7:5",
																"typeDescriptions": {}
															}
														},
														"id": 1111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15526:10:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15505:31:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1118,
												"nodeType": "IfStatement",
												"src": "15501:100:5",
												"trueBody": {
													"id": 1117,
													"nodeType": "Block",
													"src": "15538:63:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1114,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1102,
																		"src": "15582:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1113,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "15559:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15559:31:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1116,
															"nodeType": "RevertStatement",
															"src": "15552:38:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1100,
										"nodeType": "StructuredDocumentation",
										"src": "15350:73:5",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 1120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "15437:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15460:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1120,
												"src": "15452:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15452:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15451:17:5"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15491:0:5"
									},
									"scope": 1185,
									"src": "15428:179:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "16248:680:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1132,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "16262:2:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16265:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "16262:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "16270:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "16262:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "16279:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "16262:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "IfStatement",
												"src": "16258:664:5",
												"trueBody": {
													"id": 1181,
													"nodeType": "Block",
													"src": "16282:640:5",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1161,
																		"nodeType": "Block",
																		"src": "16396:162:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1154,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1150,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1148,
																						"src": "16418:6:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1151,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1320,
																								"src": "16428:15:5",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1320_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1152,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "16444:16:5",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1319,
																							"src": "16428:32:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "16461:8:5",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "16428:41:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "16418:51:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1160,
																				"nodeType": "IfStatement",
																				"src": "16414:130:5",
																				"trueBody": {
																					"id": 1159,
																					"nodeType": "Block",
																					"src": "16471:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1156,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1125,
																										"src": "16522:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1155,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 140,
																									"src": "16500:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1157,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16500:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1158,
																							"nodeType": "RevertStatement",
																							"src": "16493:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1162,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1149,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1148,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "16388:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1162,
																				"src": "16381:13:5",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1147,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "16381:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16380:15:5"
																	},
																	"src": "16372:186:5"
																},
																{
																	"block": {
																		"id": 1178,
																		"nodeType": "Block",
																		"src": "16587:325:5",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1169,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1166,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1164,
																							"src": "16609:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1167,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "16616:6:5",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "16609:13:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1168,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "16626:1:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "16609:18:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1176,
																					"nodeType": "Block",
																					"src": "16708:190:5",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "16794:86:5",
																								"nodeType": "YulBlock",
																								"src": "16794:86:5",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "16831:2:5",
																															"nodeType": "YulLiteral",
																															"src": "16831:2:5",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "16835:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "16835:6:5"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "16827:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "16827:3:5"
																													},
																													"nativeSrc": "16827:15:5",
																													"nodeType": "YulFunctionCall",
																													"src": "16827:15:5"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "16850:6:5",
																															"nodeType": "YulIdentifier",
																															"src": "16850:6:5"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "16844:5:5",
																														"nodeType": "YulIdentifier",
																														"src": "16844:5:5"
																													},
																													"nativeSrc": "16844:13:5",
																													"nodeType": "YulFunctionCall",
																													"src": "16844:13:5"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "16820:6:5",
																												"nodeType": "YulIdentifier",
																												"src": "16820:6:5"
																											},
																											"nativeSrc": "16820:38:5",
																											"nodeType": "YulFunctionCall",
																											"src": "16820:38:5"
																										},
																										"nativeSrc": "16820:38:5",
																										"nodeType": "YulExpressionStatement",
																										"src": "16820:38:5"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1164,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "16835:6:5",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1164,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "16850:6:5",
																									"valueSize": 1
																								}
																							],
																							"id": 1175,
																							"nodeType": "InlineAssembly",
																							"src": "16785:95:5"
																						}
																					]
																				},
																				"id": 1177,
																				"nodeType": "IfStatement",
																				"src": "16605:293:5",
																				"trueBody": {
																					"id": 1174,
																					"nodeType": "Block",
																					"src": "16629:73:5",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1171,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1125,
																										"src": "16680:2:5",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1170,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 140,
																									"src": "16658:21:5",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1172,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "16658:25:5",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1173,
																							"nodeType": "RevertStatement",
																							"src": "16651:32:5"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1179,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1165,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1164,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "16579:6:5",
																				"nodeType": "VariableDeclaration",
																				"scope": 1179,
																				"src": "16566:19:5",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1163,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "16566:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "16565:21:5"
																	},
																	"src": "16559:353:5"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1141,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "16337:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16337:12:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1143,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1123,
																		"src": "16351:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1144,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1127,
																		"src": "16357:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1145,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1129,
																		"src": "16366:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1138,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1125,
																				"src": "16316:2:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1137,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1320,
																			"src": "16300:15:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1320_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16300:19:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1320",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "16320:16:5",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1319,
																	"src": "16300:36:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16300:71:5",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1180,
															"nodeType": "TryStatement",
															"src": "16296:616:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "15613:528:5",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16155:22:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16186:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "16178:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16200:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "16192:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16192:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16212:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "16204:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16204:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16234:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "16221:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16221:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16177:62:5"
									},
									"returnParameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16248:0:5"
									},
									"scope": 1185,
									"src": "16146:782:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1186,
							"src": "776:16154:5",
							"usedErrors": [
								116,
								121,
								130,
								135,
								140,
								147,
								152,
								157
							],
							"usedEvents": [
								1201,
								1210,
								1219
							]
						}
					],
					"src": "107:16824:5"
				},
				"id": 5
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1846
						],
						"IERC721": [
							1302
						]
					},
					"id": 1303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:6"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1189,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1303,
							"sourceUnit": 1847,
							"src": "134:62:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1188,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1846,
										"src": "142:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1191,
										"name": "IERC165",
										"nameLocations": [
											"287:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1846,
										"src": "287:7:6"
									},
									"id": 1192,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:6"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1190,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1302,
							"linearizedBaseContracts": [
								1302,
								1846
							],
							"name": "IERC721",
							"nameLocation": "276:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1201,
									"name": "Transfer",
									"nameLocation": "400:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "409:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "431:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1201,
												"src": "451:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:6"
									},
									"src": "394:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1210,
									"name": "Approval",
									"nameLocation": "587:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1204,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "596:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1206,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "619:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1210,
												"src": "645:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:6"
									},
									"src": "581:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1211,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1219,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "819:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "842:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1216,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:6"
									},
									"src": "798:85:6"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "989:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:6"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1027:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:6"
									},
									"scope": 1302,
									"src": "970:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1235,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1203:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:6"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1235,
												"src": "1243:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:6"
									},
									"scope": 1302,
									"src": "1186:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1236,
										"nodeType": "StructuredDocumentation",
										"src": "1264:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1247,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1834:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1859:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1851:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1851:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1873:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1865:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1885:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1877:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1909:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "1894:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1243,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1894:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1850:64:6"
									},
									"returnParameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1923:0:6"
									},
									"scope": 1302,
									"src": "1825:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "1930:687:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2631:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2656:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2648:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2648:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2670:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2662:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2662:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2682:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "2674:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:43:6"
									},
									"returnParameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2699:0:6"
									},
									"scope": 1302,
									"src": "2622:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "2706:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3452:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3473:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3465:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3487:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3479:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3499:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "3491:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3464:43:6"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:6"
									},
									"scope": 1302,
									"src": "3443:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "3523:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3989:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4005:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "3997:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3997:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4017:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4009:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4009:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:29:6"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4034:0:6"
									},
									"scope": 1302,
									"src": "3980:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "4041:315:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4370:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4396:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4388:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4388:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4411:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4406:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4406:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4387:33:6"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4429:0:6"
									},
									"scope": 1302,
									"src": "4361:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "4436:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1291,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4589:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4609:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "4601:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4601:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4600:17:6"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4649:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1291,
												"src": "4641:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4640:18:6"
									},
									"scope": 1302,
									"src": "4580:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1292,
										"nodeType": "StructuredDocumentation",
										"src": "4665:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1301,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4817:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4842:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "4834:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4857:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "4849:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4849:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:33:6"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1301,
												"src": "4890:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4890:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4889:6:6"
									},
									"scope": 1302,
									"src": "4808:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1303,
							"src": "266:4632:6",
							"usedErrors": [],
							"usedEvents": [
								1201,
								1210,
								1219
							]
						}
					],
					"src": "108:4791:6"
				},
				"id": 6
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1320
						]
					},
					"id": 1321,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1305,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:7",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1320,
							"linearizedBaseContracts": [
								1320
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "327:493:7",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1319,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "834:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "868:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "860:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "894:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "886:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "916:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "908:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "948:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "933:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "933:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:108:7"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1319,
												"src": "977:6:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1316,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "977:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "976:8:7"
									},
									"scope": 1320,
									"src": "825:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1321,
							"src": "295:692:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:872:7"
				},
				"id": 7
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1185
						],
						"ERC721URIStorage": [
							1505
						],
						"IERC165": [
							1846
						],
						"IERC4906": [
							64
						],
						"Strings": [
							1810
						]
					},
					"id": 1506,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1322,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:8"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1324,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1506,
							"sourceUnit": 1186,
							"src": "154:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1323,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1185,
										"src": "162:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1506,
							"sourceUnit": 1811,
							"src": "192:51:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1325,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1810,
										"src": "200:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1328,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1506,
							"sourceUnit": 65,
							"src": "244:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1327,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 64,
										"src": "252:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1330,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1506,
							"sourceUnit": 41,
							"src": "303:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1329,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1846,
										"src": "311:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1332,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "469:8:8"
									},
									"id": 1333,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:8"
								},
								{
									"baseName": {
										"id": 1334,
										"name": "ERC721",
										"nameLocations": [
											"479:6:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1185,
										"src": "479:6:8"
									},
									"id": 1335,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:8"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:8",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1505,
							"linearizedBaseContracts": [
								1505,
								1185,
								158,
								1533,
								64,
								1302,
								1834,
								1846,
								1555
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1338,
									"libraryName": {
										"id": 1336,
										"name": "Strings",
										"nameLocations": [
											"498:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1810,
										"src": "498:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:8",
									"typeName": {
										"id": 1337,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 1342,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "606:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1505,
									"src": "563:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1341,
										"keyName": "tokenId",
										"keyNameLocation": "579:7:8",
										"keyType": {
											"id": 1339,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "571:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "563:34:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1340,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "590:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										306,
										1845
									],
									"body": {
										"id": 1365,
										"nodeType": "Block",
										"src": "791:97:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1353,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1345,
															"src": "808:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30783439303634393036",
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "830:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1225148678_by_1",
																		"typeString": "int_const 1225148678"
																	},
																	"value": "0x49064906"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1225148678_by_1",
																		"typeString": "int_const 1225148678"
																	}
																],
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "823:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": {
																	"id": 1354,
																	"name": "bytes4",
																	"nodeType": "ElementaryTypeName",
																	"src": "823:6:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "823:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "808:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1361,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "869:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1359,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "845:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1505_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "851:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 306,
															"src": "845:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "845:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "808:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1352,
												"id": 1364,
												"nodeType": "Return",
												"src": "801:80:8"
											}
										]
									},
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "623:55:8",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "692:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1349,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1347,
												"name": "ERC721",
												"nameLocations": [
													"759:6:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1185,
												"src": "759:6:8"
											},
											{
												"id": 1348,
												"name": "IERC165",
												"nameLocations": [
													"767:7:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1846,
												"src": "767:7:8"
											}
										],
										"src": "750:25:8"
									},
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "717:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "710:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "710:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "709:20:8"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1366,
												"src": "785:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "785:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:6:8"
									},
									"scope": 1505,
									"src": "683:205:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										417
									],
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "1042:506:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "1067:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1375,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1120,
														"src": "1052:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1052:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "1052:23:8"
											},
											{
												"assignments": [
													1380
												],
												"declarations": [
													{
														"constant": false,
														"id": 1380,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1100:9:8",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "1086:23:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1379,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1086:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"baseExpression": {
														"id": 1381,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "1112:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1383,
													"indexExpression": {
														"id": 1382,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "1123:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1112:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1086:45:8"
											},
											{
												"assignments": [
													1386
												],
												"declarations": [
													{
														"constant": false,
														"id": 1386,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1155:4:8",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "1141:18:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1385,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1141:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1389,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1387,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "1162:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:10:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1141:31:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1392,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1386,
																	"src": "1251:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1245:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1390,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1245:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1245:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1257:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1245:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1267:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1245:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "1241:70:8",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "1270:41:8",
													"statements": [
														{
															"expression": {
																"id": 1397,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "1291:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1374,
															"id": 1398,
															"nodeType": "Return",
															"src": "1284:16:8"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1403,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "1416:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1410:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1401,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1410:5:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1410:16:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1427:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1410:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1436:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1410:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1416,
												"nodeType": "IfStatement",
												"src": "1406:95:8",
												"trueBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "1439:62:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1411,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1386,
																		"src": "1474:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1412,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1380,
																		"src": "1480:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1460:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1408,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1460:6:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1467:6:8",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1460:13:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1460:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1374,
															"id": 1414,
															"nodeType": "Return",
															"src": "1453:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1419,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "1533:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1417,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1518:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1505_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1524:8:8",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 417,
														"src": "1518:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1518:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1374,
												"id": 1421,
												"nodeType": "Return",
												"src": "1511:30:8"
											}
										]
									},
									"documentation": {
										"id": 1367,
										"nodeType": "StructuredDocumentation",
										"src": "894:55:8",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "963:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1371,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1009:8:8"
									},
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "980:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "972:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:17:8"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "1027:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1372,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1027:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:15:8"
									},
									"scope": 1505,
									"src": "954:594:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1455,
										"nodeType": "Block",
										"src": "1814:196:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1432,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "1837:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1431,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 595,
															"src": "1828:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1828:17:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1857:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1849:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1434,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1849:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1849:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1828:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1444,
												"nodeType": "IfStatement",
												"src": "1824:100:8",
												"trueBody": {
													"id": 1443,
													"nodeType": "Block",
													"src": "1861:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1440,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1426,
																		"src": "1905:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1439,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 121,
																	"src": "1882:22:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1882:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1442,
															"nodeType": "RevertStatement",
															"src": "1875:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1445,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "1933:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1447,
														"indexExpression": {
															"id": 1446,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "1944:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1933:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1448,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1428,
														"src": "1955:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1933:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1450,
												"nodeType": "ExpressionStatement",
												"src": "1933:31:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1452,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "1995:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1451,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "1980:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1980:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "EmitStatement",
												"src": "1975:28:8"
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "1554:174:8",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 1456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1742:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1763:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1755:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1786:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1456,
												"src": "1772:23:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1427,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1772:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:42:8"
									},
									"returnParameters": {
										"id": 1430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1814:0:8"
									},
									"scope": 1505,
									"src": "1733:277:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										779
									],
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "2345:229:8",
										"statements": [
											{
												"assignments": [
													1470
												],
												"declarations": [
													{
														"constant": false,
														"id": 1470,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "2363:13:8",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "2355:21:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1469,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2355:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"arguments": [
														{
															"id": 1473,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "2393:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1461,
															"src": "2397:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1475,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1463,
															"src": "2406:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1471,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2379:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1505_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2385:7:8",
														"memberName": "_update",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 779,
														"src": "2379:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2379:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2355:56:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1483,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1478,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1459,
															"src": "2426:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2440:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2432:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1479,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2432:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1482,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2432:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "2426:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1486,
																			"name": "_tokenURIs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "2452:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																				"typeString": "mapping(uint256 => string storage ref)"
																			}
																		},
																		"id": 1488,
																		"indexExpression": {
																			"id": 1487,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1461,
																			"src": "2463:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2452:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	],
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2446:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1484,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2446:5:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2446:26:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_storage_ptr",
																	"typeString": "bytes storage pointer"
																}
															},
															"id": 1490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2473:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2446:33:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2483:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2446:38:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2426:58:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1500,
												"nodeType": "IfStatement",
												"src": "2422:115:8",
												"trueBody": {
													"id": 1499,
													"nodeType": "Block",
													"src": "2486:51:8",
													"statements": [
														{
															"expression": {
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "2500:26:8",
																"subExpression": {
																	"baseExpression": {
																		"id": 1494,
																		"name": "_tokenURIs",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1342,
																		"src": "2507:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																			"typeString": "mapping(uint256 => string storage ref)"
																		}
																	},
																	"id": 1496,
																	"indexExpression": {
																		"id": 1495,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1461,
																		"src": "2518:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2507:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1498,
															"nodeType": "ExpressionStatement",
															"src": "2500:26:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1501,
													"name": "previousOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1470,
													"src": "2554:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1468,
												"id": 1502,
												"nodeType": "Return",
												"src": "2547:20:8"
											}
										]
									},
									"documentation": {
										"id": 1457,
										"nodeType": "StructuredDocumentation",
										"src": "2016:220:8",
										"text": " @dev See {ERC721-_update}. When burning, this override will additionally check if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."
									},
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "2250:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1465,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2318:8:8"
									},
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2266:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2258:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1461,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2278:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2270:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "2295:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2287:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2287:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:43:8"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "2336:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2336:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2335:9:8"
									},
									"scope": 1505,
									"src": "2241:333:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1506,
							"src": "431:2145:8",
							"usedErrors": [
								116,
								121,
								130,
								135,
								140,
								147,
								152,
								157
							],
							"usedEvents": [
								56,
								63,
								1201,
								1210,
								1219
							]
						}
					],
					"src": "128:2449:8"
				},
				"id": 8
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1302
						],
						"IERC721Metadata": [
							1533
						]
					},
					"id": 1534,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1507,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:9"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1509,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1534,
							"sourceUnit": 1303,
							"src": "138:39:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1508,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1302,
										"src": "146:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1511,
										"name": "IERC721",
										"nameLocations": [
											"342:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1302,
										"src": "342:7:9"
									},
									"id": 1512,
									"nodeType": "InheritanceSpecifier",
									"src": "342:7:9"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1510,
								"nodeType": "StructuredDocumentation",
								"src": "179:133:9",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1533,
							"linearizedBaseContracts": [
								1533,
								1302,
								1846
							],
							"name": "IERC721Metadata",
							"nameLocation": "323:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1513,
										"nodeType": "StructuredDocumentation",
										"src": "356:58:9",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "428:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "432:2:9"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1516,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "458:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1515,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "458:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "457:15:9"
									},
									"scope": 1533,
									"src": "419:54:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "479:60:9",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "553:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "559:2:9"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1524,
												"src": "585:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "585:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "584:15:9"
									},
									"scope": 1533,
									"src": "544:56:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1525,
										"nodeType": "StructuredDocumentation",
										"src": "606:90:9",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1532,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "710:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "727:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "719:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "719:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "718:17:9"
									},
									"returnParameters": {
										"id": 1531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1532,
												"src": "759:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "759:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "758:15:9"
									},
									"scope": 1533,
									"src": "701:73:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1534,
							"src": "313:463:9",
							"usedErrors": [],
							"usedEvents": [
								1201,
								1210,
								1219
							]
						}
					],
					"src": "112:665:9"
				},
				"id": 9
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1555
						]
					},
					"id": 1556,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1535,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "86:24:10"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1536,
								"nodeType": "StructuredDocumentation",
								"src": "112:496:10",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1555,
							"linearizedBaseContracts": [
								1555
							],
							"name": "Context",
							"nameLocation": "627:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "703:34:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1541,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "720:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "724:6:10",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "720:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1540,
												"id": 1543,
												"nodeType": "Return",
												"src": "713:17:10"
											}
										]
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "650:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "660:2:10"
									},
									"returnParameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "694:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:9:10"
									},
									"scope": 1555,
									"src": "641:96:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1553,
										"nodeType": "Block",
										"src": "810:32:10",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1550,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "827:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "831:4:10",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "827:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1549,
												"id": 1552,
												"nodeType": "Return",
												"src": "820:15:10"
											}
										]
									},
									"id": 1554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "752:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "760:2:10"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1554,
												"src": "794:14:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "794:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "793:16:10"
									},
									"scope": 1555,
									"src": "743:99:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1556,
							"src": "609:235:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "86:759:10"
				},
				"id": 10
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2900
						],
						"SignedMath": [
							3005
						],
						"Strings": [
							1810
						]
					},
					"id": 1811,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1557,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1559,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 2901,
							"src": "127:37:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1558,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2900,
										"src": "135:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1561,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1811,
							"sourceUnit": 3006,
							"src": "165:49:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1560,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3005,
										"src": "173:10:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1562,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:11",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1810,
							"linearizedBaseContracts": [
								1810
							],
							"name": "Strings",
							"nameLocation": "259:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1565,
									"mutability": "constant",
									"name": "_HEX_DIGITS",
									"nameLocation": "298:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1810,
									"src": "273:57:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1563,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1564,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "312:18:11",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1568,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "359:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1810,
									"src": "336:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1566,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "336:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1567,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "377:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1569,
										"nodeType": "StructuredDocumentation",
										"src": "386:81:11",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1575,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "478:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "515:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "507:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "507:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "530:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "522:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "506:31:11"
									},
									"src": "472:66:11"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "710:628:11",
										"statements": [
											{
												"id": 1621,
												"nodeType": "UncheckedBlock",
												"src": "720:612:11",
												"statements": [
													{
														"assignments": [
															1584
														],
														"declarations": [
															{
																"constant": false,
																"id": 1584,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "752:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1621,
																"src": "744:14:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1583,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "744:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1591,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1587,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1578,
																		"src": "772:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1585,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2900,
																		"src": "761:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2900_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "766:5:11",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2720,
																	"src": "761:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "761:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "781:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "761:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "744:38:11"
													},
													{
														"assignments": [
															1593
														],
														"declarations": [
															{
																"constant": false,
																"id": 1593,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "810:6:11",
																"nodeType": "VariableDeclaration",
																"scope": 1621,
																"src": "796:20:11",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1592,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "796:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1598,
														"initialValue": {
															"arguments": [
																{
																	"id": 1596,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1584,
																	"src": "830:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "819:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1594,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "823:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "819:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "796:41:11"
													},
													{
														"assignments": [
															1600
														],
														"declarations": [
															{
																"constant": false,
																"id": 1600,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "859:3:11",
																"nodeType": "VariableDeclaration",
																"scope": 1621,
																"src": "851:11:11",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1599,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "851:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1601,
														"nodeType": "VariableDeclarationStatement",
														"src": "851:11:11"
													},
													{
														"AST": {
															"nativeSrc": "932:67:11",
															"nodeType": "YulBlock",
															"src": "932:67:11",
															"statements": [
																{
																	"nativeSrc": "950:35:11",
																	"nodeType": "YulAssignment",
																	"src": "950:35:11",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "961:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "961:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "973:2:11",
																						"nodeType": "YulLiteral",
																						"src": "973:2:11",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "977:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "977:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "969:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "969:3:11"
																				},
																				"nativeSrc": "969:15:11",
																				"nodeType": "YulFunctionCall",
																				"src": "969:15:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "957:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "957:3:11"
																		},
																		"nativeSrc": "957:28:11",
																		"nodeType": "YulFunctionCall",
																		"src": "957:28:11"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "950:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "950:3:11"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1593,
																"isOffset": false,
																"isSlot": false,
																"src": "961:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1584,
																"isOffset": false,
																"isSlot": false,
																"src": "977:6:11",
																"valueSize": 1
															},
															{
																"declaration": 1600,
																"isOffset": false,
																"isSlot": false,
																"src": "950:3:11",
																"valueSize": 1
															}
														],
														"id": 1602,
														"nodeType": "InlineAssembly",
														"src": "923:76:11"
													},
													{
														"body": {
															"id": 1617,
															"nodeType": "Block",
															"src": "1025:270:11",
															"statements": [
																{
																	"expression": {
																		"id": 1605,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1043:5:11",
																		"subExpression": {
																			"id": 1604,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "1043:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1606,
																	"nodeType": "ExpressionStatement",
																	"src": "1043:5:11"
																},
																{
																	"AST": {
																		"nativeSrc": "1126:87:11",
																		"nodeType": "YulBlock",
																		"src": "1126:87:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1156:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "1156:3:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1170:5:11",
																											"nodeType": "YulIdentifier",
																											"src": "1170:5:11"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1177:2:11",
																											"nodeType": "YulLiteral",
																											"src": "1177:2:11",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1166:3:11",
																										"nodeType": "YulIdentifier",
																										"src": "1166:3:11"
																									},
																									"nativeSrc": "1166:14:11",
																									"nodeType": "YulFunctionCall",
																									"src": "1166:14:11"
																								},
																								{
																									"name": "_HEX_DIGITS",
																									"nativeSrc": "1182:11:11",
																									"nodeType": "YulIdentifier",
																									"src": "1182:11:11"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1161:4:11",
																								"nodeType": "YulIdentifier",
																								"src": "1161:4:11"
																							},
																							"nativeSrc": "1161:33:11",
																							"nodeType": "YulFunctionCall",
																							"src": "1161:33:11"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1148:7:11",
																						"nodeType": "YulIdentifier",
																						"src": "1148:7:11"
																					},
																					"nativeSrc": "1148:47:11",
																					"nodeType": "YulFunctionCall",
																					"src": "1148:47:11"
																				},
																				"nativeSrc": "1148:47:11",
																				"nodeType": "YulExpressionStatement",
																				"src": "1148:47:11"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1565,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1182:11:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1600,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1156:3:11",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1578,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1170:5:11",
																			"valueSize": 1
																		}
																	],
																	"id": 1607,
																	"nodeType": "InlineAssembly",
																	"src": "1117:96:11"
																},
																{
																	"expression": {
																		"id": 1610,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1608,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1578,
																			"src": "1230:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1609,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1239:2:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1230:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1611,
																	"nodeType": "ExpressionStatement",
																	"src": "1230:11:11"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1614,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1612,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1578,
																			"src": "1263:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1613,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1272:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1263:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1616,
																	"nodeType": "IfStatement",
																	"src": "1259:21:11",
																	"trueBody": {
																		"id": 1615,
																		"nodeType": "Break",
																		"src": "1275:5:11"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1019:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1618,
														"nodeType": "WhileStatement",
														"src": "1012:283:11"
													},
													{
														"expression": {
															"id": 1619,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "1315:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1582,
														"id": 1620,
														"nodeType": "Return",
														"src": "1308:13:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "544:90:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "648:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "665:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "657:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:15:11"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "695:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1580,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "695:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:15:11"
									},
									"scope": 1810,
									"src": "639:699:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "1514:92:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1626,
																	"src": "1545:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1553:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1545:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1563:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1639,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1545:20:11",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1557:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1643,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1626,
																			"src": "1591:5:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1641,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "1576:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3005_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1587:3:11",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3004,
																		"src": "1576:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1576:21:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1640,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1623,
																"src": "1567:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1567:31:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1531:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1631,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1531:6:11",
																"typeDescriptions": {}
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1538:6:11",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1531:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:68:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1630,
												"id": 1647,
												"nodeType": "Return",
												"src": "1524:75:11"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "1344:89:11",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1447:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1469:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "1462:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1625,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1462:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:14:11"
									},
									"returnParameters": {
										"id": 1630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "1499:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1499:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1498:15:11"
									},
									"scope": 1810,
									"src": "1438:168:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "1785:100:11",
										"statements": [
											{
												"id": 1667,
												"nodeType": "UncheckedBlock",
												"src": "1795:84:11",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1658,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1652,
																	"src": "1838:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1661,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1652,
																				"src": "1857:5:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1659,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2900,
																				"src": "1845:4:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2900_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1850:6:11",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2842,
																			"src": "1845:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1845:18:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1866:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1845:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1657,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1669,
																	1752,
																	1772
																],
																"referencedDeclaration": 1752,
																"src": "1826:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1826:42:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1656,
														"id": 1666,
														"nodeType": "Return",
														"src": "1819:49:11"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "1612:94:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1720:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1740:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1732:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1732:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1731:15:11"
									},
									"returnParameters": {
										"id": 1656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "1770:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1770:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1769:15:11"
									},
									"scope": 1810,
									"src": "1711:174:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1751,
										"nodeType": "Block",
										"src": "2098:436:11",
										"statements": [
											{
												"assignments": [
													1680
												],
												"declarations": [
													{
														"constant": false,
														"id": 1680,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2116:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "2108:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1679,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2108:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1682,
												"initialValue": {
													"id": 1681,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1672,
													"src": "2129:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2108:26:11"
											},
											{
												"assignments": [
													1684
												],
												"declarations": [
													{
														"constant": false,
														"id": 1684,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2157:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1751,
														"src": "2144:19:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1683,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2144:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1693,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2176:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1688,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1674,
																	"src": "2180:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2176:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2189:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2176:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1686,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2166:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1685,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2170:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2166:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2144:47:11"
											},
											{
												"expression": {
													"id": 1698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1694,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "2201:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1696,
														"indexExpression": {
															"hexValue": "30",
															"id": 1695,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2208:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2201:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1697,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2213:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2201:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1699,
												"nodeType": "ExpressionStatement",
												"src": "2201:15:11"
											},
											{
												"expression": {
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1700,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "2226:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1702,
														"indexExpression": {
															"hexValue": "31",
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2233:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2226:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1703,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2238:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2226:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "2226:15:11"
											},
											{
												"body": {
													"id": 1734,
													"nodeType": "Block",
													"src": "2296:96:11",
													"statements": [
														{
															"expression": {
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1720,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1684,
																		"src": "2310:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1722,
																	"indexExpression": {
																		"id": 1721,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "2317:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2310:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1723,
																		"name": "_HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1565,
																		"src": "2322:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1727,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1724,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1680,
																			"src": "2334:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2347:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2334:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2322:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2310:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1729,
															"nodeType": "ExpressionStatement",
															"src": "2310:41:11"
														},
														{
															"expression": {
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1730,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "2365:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2380:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2365:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1733,
															"nodeType": "ExpressionStatement",
															"src": "2365:16:11"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1714,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1707,
														"src": "2284:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1715,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2288:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2284:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1735,
												"initializationExpression": {
													"assignments": [
														1707
													],
													"declarations": [
														{
															"constant": false,
															"id": 1707,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2264:1:11",
															"nodeType": "VariableDeclaration",
															"scope": 1735,
															"src": "2256:9:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1706,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2256:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1713,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2268:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1709,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1674,
																"src": "2272:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2268:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2281:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2268:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2256:26:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2291:3:11",
														"subExpression": {
															"id": 1717,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "2293:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1719,
													"nodeType": "ExpressionStatement",
													"src": "2291:3:11"
												},
												"nodeType": "ForStatement",
												"src": "2251:141:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1736,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "2405:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2419:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2405:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "2401:96:11",
												"trueBody": {
													"id": 1744,
													"nodeType": "Block",
													"src": "2422:75:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1740,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "2472:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1741,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1674,
																		"src": "2479:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1739,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1575,
																	"src": "2443:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2443:43:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1743,
															"nodeType": "RevertStatement",
															"src": "2436:50:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1748,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "2520:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2513:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1746,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2513:6:11",
															"typeDescriptions": {}
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2513:14:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1678,
												"id": 1750,
												"nodeType": "Return",
												"src": "2506:21:11"
											}
										]
									},
									"documentation": {
										"id": 1670,
										"nodeType": "StructuredDocumentation",
										"src": "1891:112:11",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2017:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2037:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "2029:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2029:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2052:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "2044:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2028:31:11"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1752,
												"src": "2083:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1676,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2083:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2082:15:11"
									},
									"scope": 1810,
									"src": "2008:526:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1771,
										"nodeType": "Block",
										"src": "2759:76:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1765,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1755,
																			"src": "2804:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2796:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1763,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2796:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2796:13:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1762,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2788:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1761,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2788:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2788:22:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1768,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1568,
															"src": "2812:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1760,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1669,
															1752,
															1772
														],
														"referencedDeclaration": 1752,
														"src": "2776:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2776:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1759,
												"id": 1770,
												"nodeType": "Return",
												"src": "2769:59:11"
											}
										]
									},
									"documentation": {
										"id": 1753,
										"nodeType": "StructuredDocumentation",
										"src": "2540:141:11",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2695:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1755,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2715:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2707:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2707:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2706:14:11"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1772,
												"src": "2744:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2744:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2743:15:11"
									},
									"scope": 1810,
									"src": "2686:149:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1808,
										"nodeType": "Block",
										"src": "2990:104:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1784,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "3013:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3007:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1782,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3007:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3007:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3016:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3007:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1789,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1777,
																		"src": "3032:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3026:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1787,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3026:5:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1790,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3026:8:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3035:6:11",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3026:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3007:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1796,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1775,
																			"src": "3061:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1795,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3055:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1794,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3055:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3055:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1793,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3045:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3045:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1802,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1777,
																			"src": "3084:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3078:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1800,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3078:5:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1803,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3078:8:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1799,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3068:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1804,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3068:19:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3045:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3007:80:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1781,
												"id": 1807,
												"nodeType": "Return",
												"src": "3000:87:11"
											}
										]
									},
									"documentation": {
										"id": 1773,
										"nodeType": "StructuredDocumentation",
										"src": "2841:66:11",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1809,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2921:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2941:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "2927:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1774,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2927:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2958:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "2944:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1776,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2944:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2926:34:11"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1809,
												"src": "2984:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1779,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2984:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2983:6:11"
									},
									"scope": 1810,
									"src": "2912:182:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1811,
							"src": "251:2845:11",
							"usedErrors": [
								1575
							],
							"usedEvents": []
						}
					],
					"src": "101:2996:11"
				},
				"id": 11
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1834
						],
						"IERC165": [
							1846
						]
					},
					"id": 1835,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "99:24:12"
						},
						{
							"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1814,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1835,
							"sourceUnit": 1847,
							"src": "125:38:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1813,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1846,
										"src": "133:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1816,
										"name": "IERC165",
										"nameLocations": [
											"672:7:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1846,
										"src": "672:7:12"
									},
									"id": 1817,
									"nodeType": "InheritanceSpecifier",
									"src": "672:7:12"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1815,
								"nodeType": "StructuredDocumentation",
								"src": "165:478:12",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1834,
							"linearizedBaseContracts": [
								1834,
								1846
							],
							"name": "ERC165",
							"nameLocation": "662:6:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1845
									],
									"body": {
										"id": 1832,
										"nodeType": "Block",
										"src": "829:64:12",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1825,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "846:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1827,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "866:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1846_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1846_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1826,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "861:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "861:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1846",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "875:11:12",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "861:25:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "846:40:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1824,
												"id": 1831,
												"nodeType": "Return",
												"src": "839:47:12"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "686:56:12",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1833,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "756:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "781:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "774:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:20:12"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "823:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:6:12"
									},
									"scope": 1834,
									"src": "747:146:12",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1835,
							"src": "644:251:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:797:12"
				},
				"id": 12
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1846
						]
					},
					"id": 1847,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1836,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1837,
								"nodeType": "StructuredDocumentation",
								"src": "126:279:13",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1846,
							"linearizedBaseContracts": [
								1846
							],
							"name": "IERC165",
							"nameLocation": "416:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "430:340:13",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "784:17:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "809:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "802:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1839,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "802:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "801:20:13"
									},
									"returnParameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1845,
												"src": "845:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1842,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "845:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "844:6:13"
									},
									"scope": 1846,
									"src": "775:76:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1847,
							"src": "406:447:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:754:13"
				},
				"id": 13
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2900
						]
					},
					"id": 2901,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1848,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1849,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:14",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2900,
							"linearizedBaseContracts": [
								2900
							],
							"name": "Math",
							"nameLocation": "211:4:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1850,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:14",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1852,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:14"
									},
									"src": "277:29:14"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1857,
									"members": [
										{
											"id": 1853,
											"name": "Floor",
											"nameLocation": "336:5:14",
											"nodeType": "EnumValue",
											"src": "336:5:14"
										},
										{
											"id": 1854,
											"name": "Ceil",
											"nameLocation": "379:4:14",
											"nodeType": "EnumValue",
											"src": "379:4:14"
										},
										{
											"id": 1855,
											"name": "Trunc",
											"nameLocation": "421:5:14",
											"nodeType": "EnumValue",
											"src": "421:5:14"
										},
										{
											"id": 1856,
											"name": "Expand",
											"nameLocation": "451:6:14",
											"nodeType": "EnumValue",
											"src": "451:6:14"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:14",
									"nodeType": "EnumDefinition",
									"src": "312:169:14"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "661:140:14",
										"statements": [
											{
												"id": 1887,
												"nodeType": "UncheckedBlock",
												"src": "671:124:14",
												"statements": [
													{
														"assignments": [
															1870
														],
														"declarations": [
															{
																"constant": false,
																"id": 1870,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1887,
																"src": "695:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1869,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1874,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1871,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "707:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1872,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1862,
																"src": "711:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1875,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "730:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1876,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1860,
																"src": "734:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1882,
														"nodeType": "IfStatement",
														"src": "726:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1879,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1880,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1868,
															"id": 1881,
															"nodeType": "Return",
															"src": "737:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1883,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1884,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "782:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1885,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1868,
														"id": 1886,
														"nodeType": "Return",
														"src": "768:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1858,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:14",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "601:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "612:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:14"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "646:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1864,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "652:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:14"
									},
									"scope": 2900,
									"src": "585:216:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1916,
										"nodeType": "Block",
										"src": "984:113:14",
										"statements": [
											{
												"id": 1915,
												"nodeType": "UncheckedBlock",
												"src": "994:97:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "1022:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1902,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "1026:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1908,
														"nodeType": "IfStatement",
														"src": "1018:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1906,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1900,
															"id": 1907,
															"nodeType": "Return",
															"src": "1029:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1910,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "1074:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1911,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "1078:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1913,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1900,
														"id": 1914,
														"nodeType": "Return",
														"src": "1060:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:14",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "924:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "935:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:14"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "969:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1917,
												"src": "975:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:14"
									},
									"scope": 2900,
									"src": "908:189:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "1283:417:14",
										"statements": [
											{
												"id": 1957,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1929,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "1551:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1936,
														"nodeType": "IfStatement",
														"src": "1547:28:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1934,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1928,
															"id": 1935,
															"nodeType": "Return",
															"src": "1559:16:14"
														}
													},
													{
														"assignments": [
															1938
														],
														"declarations": [
															{
																"constant": false,
																"id": 1938,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:14",
																"nodeType": "VariableDeclaration",
																"scope": 1957,
																"src": "1589:9:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1937,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1942,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1939,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1920,
																"src": "1601:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1940,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "1605:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1945,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1943,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "1624:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1944,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1920,
																	"src": "1628:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1946,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "1633:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1952,
														"nodeType": "IfStatement",
														"src": "1620:33:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1950,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1928,
															"id": 1951,
															"nodeType": "Return",
															"src": "1636:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1953,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1954,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1938,
																	"src": "1681:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1955,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1928,
														"id": 1956,
														"nodeType": "Return",
														"src": "1667:16:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1918,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:14",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1223:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1234:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:14"
									},
									"returnParameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1268:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1924,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "1274:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:14"
									},
									"scope": 2900,
									"src": "1207:493:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "1887:114:14",
										"statements": [
											{
												"id": 1985,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1971,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1964,
																"src": "1925:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1978,
														"nodeType": "IfStatement",
														"src": "1921:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1970,
															"id": 1977,
															"nodeType": "Return",
															"src": "1933:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1980,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1962,
																		"src": "1978:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1981,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1964,
																		"src": "1982:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1983,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1970,
														"id": 1984,
														"nodeType": "Return",
														"src": "1964:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:14",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1827:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1838:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:14"
									},
									"returnParameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1872:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "1878:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:14"
									},
									"scope": 2900,
									"src": "1811:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "2198:114:14",
										"statements": [
											{
												"id": 2013,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1999,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "2236:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2006,
														"nodeType": "IfStatement",
														"src": "2232:29:14",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2002,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2004,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1998,
															"id": 2005,
															"nodeType": "Return",
															"src": "2244:17:14"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2008,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1990,
																		"src": "2289:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2009,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1992,
																		"src": "2293:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2011,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1998,
														"id": 2012,
														"nodeType": "Return",
														"src": "2275:20:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1988,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:14",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1993,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2138:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2149:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:14"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2183:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1994,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2189:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:14"
									},
									"scope": 2900,
									"src": "2122:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "2449:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2025,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "2466:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2026,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2020,
															"src": "2470:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2029,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "2478:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:14",
													"trueExpression": {
														"id": 2028,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2018,
														"src": "2474:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2024,
												"id": 2031,
												"nodeType": "Return",
												"src": "2459:20:14"
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:14",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2395:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2406:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:14"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "2440:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:14"
									},
									"scope": 2900,
									"src": "2382:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "2624:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2043,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "2641:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2044,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "2645:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2047,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2038,
														"src": "2653:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:14",
													"trueExpression": {
														"id": 2046,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "2649:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2042,
												"id": 2049,
												"nodeType": "Return",
												"src": "2634:20:14"
											}
										]
									},
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:14",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "2570:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "2581:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:14"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "2615:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:14"
									},
									"scope": 2900,
									"src": "2557:104:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "2845:82:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2061,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2054,
																	"src": "2900:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2062,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2056,
																	"src": "2904:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2064,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2065,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2054,
																		"src": "2910:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2066,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "2914:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2068,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2060,
												"id": 2072,
												"nodeType": "Return",
												"src": "2892:28:14"
											}
										]
									},
									"documentation": {
										"id": 2052,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:14",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "2791:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "2802:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:14"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "2836:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:14"
									},
									"scope": 2900,
									"src": "2774:153:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "3219:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2084,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "3233:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2092,
												"nodeType": "IfStatement",
												"src": "3229:127:14",
												"trueBody": {
													"id": 2091,
													"nodeType": "Block",
													"src": "3241:115:14",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2087,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2077,
																	"src": "3340:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2088,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2079,
																	"src": "3344:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2083,
															"id": 2090,
															"nodeType": "Return",
															"src": "3333:12:14"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2093,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "3444:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2094,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2097,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "3458:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2098,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2100,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2101,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2079,
																"src": "3467:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:14",
													"trueExpression": {
														"hexValue": "30",
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2083,
												"id": 2106,
												"nodeType": "Return",
												"src": "3437:35:14"
											}
										]
									},
									"documentation": {
										"id": 2075,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:14",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3165:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3176:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:14"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3210:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:14"
									},
									"scope": 2900,
									"src": "3148:331:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "3893:4018:14",
										"statements": [
											{
												"id": 2232,
												"nodeType": "UncheckedBlock",
												"src": "3903:4002:14",
												"statements": [
													{
														"assignments": [
															2121
														],
														"declarations": [
															{
																"constant": false,
																"id": 2121,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4232:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2232,
																"src": "4224:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2120,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4224:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2125,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2122,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2111,
																"src": "4240:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2123,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2113,
																"src": "4244:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4240:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4224:21:14"
													},
													{
														"assignments": [
															2127
														],
														"declarations": [
															{
																"constant": false,
																"id": 2127,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4312:5:14",
																"nodeType": "VariableDeclaration",
																"scope": 2232,
																"src": "4304:13:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2126,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4304:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2128,
														"nodeType": "VariableDeclarationStatement",
														"src": "4304:13:14"
													},
													{
														"AST": {
															"nativeSrc": "4384:122:14",
															"nodeType": "YulBlock",
															"src": "4384:122:14",
															"statements": [
																{
																	"nativeSrc": "4402:30:14",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4402:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4419:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4419:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4422:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "4422:1:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4429:1:14",
																						"nodeType": "YulLiteral",
																						"src": "4429:1:14",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4425:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4425:3:14"
																				},
																				"nativeSrc": "4425:6:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4425:6:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4412:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "4412:6:14"
																		},
																		"nativeSrc": "4412:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4412:20:14"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4406:2:14",
																			"nodeType": "YulTypedName",
																			"src": "4406:2:14",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4449:43:14",
																	"nodeType": "YulAssignment",
																	"src": "4449:43:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4466:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4466:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4470:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4470:5:14"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4462:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4462:3:14"
																				},
																				"nativeSrc": "4462:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4462:14:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4481:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4481:2:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4485:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "4485:5:14"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4478:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "4478:2:14"
																				},
																				"nativeSrc": "4478:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4478:13:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4458:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:14"
																		},
																		"nativeSrc": "4458:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4458:34:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4449:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "4449:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "4470:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "4485:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2127,
																"isOffset": false,
																"isSlot": false,
																"src": "4449:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2111,
																"isOffset": false,
																"isSlot": false,
																"src": "4419:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2113,
																"isOffset": false,
																"isSlot": false,
																"src": "4422:1:14",
																"valueSize": 1
															}
														],
														"id": 2129,
														"nodeType": "InlineAssembly",
														"src": "4375:131:14"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2130,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "4587:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4596:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4587:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2138,
														"nodeType": "IfStatement",
														"src": "4583:368:14",
														"trueBody": {
															"id": 2137,
															"nodeType": "Block",
															"src": "4599:352:14",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2133,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "4917:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2134,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "4925:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4917:19:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2119,
																	"id": 2136,
																	"nodeType": "Return",
																	"src": "4910:26:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2139,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "5057:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2140,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "5072:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5057:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2146,
														"nodeType": "IfStatement",
														"src": "5053:88:14",
														"trueBody": {
															"id": 2145,
															"nodeType": "Block",
															"src": "5079:62:14",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2142,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1852,
																			"src": "5104:20:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5104:22:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2144,
																	"nodeType": "RevertStatement",
																	"src": "5097:29:14"
																}
															]
														}
													},
													{
														"assignments": [
															2148
														],
														"declarations": [
															{
																"constant": false,
																"id": 2148,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5404:9:14",
																"nodeType": "VariableDeclaration",
																"scope": 2232,
																"src": "5396:17:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2147,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5396:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2149,
														"nodeType": "VariableDeclarationStatement",
														"src": "5396:17:14"
													},
													{
														"AST": {
															"nativeSrc": "5436:291:14",
															"nodeType": "YulBlock",
															"src": "5436:291:14",
															"statements": [
																{
																	"nativeSrc": "5505:38:14",
																	"nodeType": "YulAssignment",
																	"src": "5505:38:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5525:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5525:1:14"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5528:1:14",
																				"nodeType": "YulIdentifier",
																				"src": "5528:1:14"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5531:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "5531:11:14"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5518:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "5518:6:14"
																		},
																		"nativeSrc": "5518:25:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5518:25:14"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5505:9:14",
																			"nodeType": "YulIdentifier",
																			"src": "5505:9:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5625:41:14",
																	"nodeType": "YulAssignment",
																	"src": "5625:41:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5638:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5638:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5648:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "5648:9:14"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5659:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "5659:5:14"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5645:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "5645:2:14"
																				},
																				"nativeSrc": "5645:20:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5645:20:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5634:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5634:3:14"
																		},
																		"nativeSrc": "5634:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5634:32:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5625:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5625:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "5683:30:14",
																	"nodeType": "YulAssignment",
																	"src": "5683:30:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5696:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5696:5:14"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5703:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5703:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5692:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5692:3:14"
																		},
																		"nativeSrc": "5692:21:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5692:21:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5683:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "5683:5:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2115,
																"isOffset": false,
																"isSlot": false,
																"src": "5531:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "5659:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "5683:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "5696:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2127,
																"isOffset": false,
																"isSlot": false,
																"src": "5625:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2127,
																"isOffset": false,
																"isSlot": false,
																"src": "5638:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5505:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5648:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2148,
																"isOffset": false,
																"isSlot": false,
																"src": "5703:9:14",
																"valueSize": 1
															},
															{
																"declaration": 2111,
																"isOffset": false,
																"isSlot": false,
																"src": "5525:1:14",
																"valueSize": 1
															},
															{
																"declaration": 2113,
																"isOffset": false,
																"isSlot": false,
																"src": "5528:1:14",
																"valueSize": 1
															}
														],
														"id": 2150,
														"nodeType": "InlineAssembly",
														"src": "5427:300:14"
													},
													{
														"assignments": [
															2152
														],
														"declarations": [
															{
																"constant": false,
																"id": 2152,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5939:4:14",
																"nodeType": "VariableDeclaration",
																"scope": 2232,
																"src": "5931:12:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2151,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5931:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2159,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2153,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2115,
																"src": "5946:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5961:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2155,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "5965:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5961:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5960:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5946:31:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5931:46:14"
													},
													{
														"AST": {
															"nativeSrc": "6000:362:14",
															"nodeType": "YulBlock",
															"src": "6000:362:14",
															"statements": [
																{
																	"nativeSrc": "6065:37:14",
																	"nodeType": "YulAssignment",
																	"src": "6065:37:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6084:11:14",
																				"nodeType": "YulIdentifier",
																				"src": "6084:11:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6097:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6097:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6080:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6080:3:14"
																		},
																		"nativeSrc": "6080:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6080:22:14"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6065:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "6065:11:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6169:25:14",
																	"nodeType": "YulAssignment",
																	"src": "6169:25:14",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6182:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6182:5:14"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6189:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "6189:4:14"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6178:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6178:3:14"
																		},
																		"nativeSrc": "6178:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6178:16:14"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6169:5:14",
																			"nodeType": "YulIdentifier",
																			"src": "6169:5:14"
																		}
																	]
																},
																{
																	"nativeSrc": "6309:39:14",
																	"nodeType": "YulAssignment",
																	"src": "6309:39:14",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6329:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6329:1:14",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6332:4:14",
																								"nodeType": "YulIdentifier",
																								"src": "6332:4:14"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6325:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6325:3:14"
																						},
																						"nativeSrc": "6325:12:14",
																						"nodeType": "YulFunctionCall",
																						"src": "6325:12:14"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6339:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "6339:4:14"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6321:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6321:3:14"
																				},
																				"nativeSrc": "6321:23:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6321:23:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6346:1:14",
																				"nodeType": "YulLiteral",
																				"src": "6346:1:14",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6317:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6317:3:14"
																		},
																		"nativeSrc": "6317:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6317:31:14"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6309:4:14",
																			"nodeType": "YulIdentifier",
																			"src": "6309:4:14"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2115,
																"isOffset": false,
																"isSlot": false,
																"src": "6065:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2115,
																"isOffset": false,
																"isSlot": false,
																"src": "6084:11:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6169:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2121,
																"isOffset": false,
																"isSlot": false,
																"src": "6182:5:14",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "6097:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "6189:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "6309:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "6332:4:14",
																"valueSize": 1
															},
															{
																"declaration": 2152,
																"isOffset": false,
																"isSlot": false,
																"src": "6339:4:14",
																"valueSize": 1
															}
														],
														"id": 2160,
														"nodeType": "InlineAssembly",
														"src": "5991:371:14"
													},
													{
														"expression": {
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2161,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "6428:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2162,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2127,
																	"src": "6437:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2163,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "6445:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6437:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6428:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2166,
														"nodeType": "ExpressionStatement",
														"src": "6428:21:14"
													},
													{
														"assignments": [
															2168
														],
														"declarations": [
															{
																"constant": false,
																"id": 2168,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6775:7:14",
																"nodeType": "VariableDeclaration",
																"scope": 2232,
																"src": "6767:15:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2167,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6767:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2175,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6786:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2170,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2115,
																			"src": "6790:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6786:15:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2172,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6785:17:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6805:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6785:21:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6767:39:14"
													},
													{
														"expression": {
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2176,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "7023:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2181,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7034:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2180,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2178,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "7038:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2179,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "7052:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7038:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7034:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7023:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2183,
														"nodeType": "ExpressionStatement",
														"src": "7023:36:14"
													},
													{
														"expression": {
															"id": 2190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2184,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "7092:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7103:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2186,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "7107:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2187,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "7121:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7107:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7103:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7092:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2191,
														"nodeType": "ExpressionStatement",
														"src": "7092:36:14"
													},
													{
														"expression": {
															"id": 2198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2192,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "7162:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7173:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2196,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2194,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "7177:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2195,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "7191:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7177:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7173:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7162:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2199,
														"nodeType": "ExpressionStatement",
														"src": "7162:36:14"
													},
													{
														"expression": {
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2200,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "7232:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2205,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7243:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2202,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "7247:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2203,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "7261:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7247:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7243:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7232:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2207,
														"nodeType": "ExpressionStatement",
														"src": "7232:36:14"
													},
													{
														"expression": {
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2208,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "7302:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7313:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2212,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2210,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "7317:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2211,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "7331:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7317:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7313:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7302:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2215,
														"nodeType": "ExpressionStatement",
														"src": "7302:36:14"
													},
													{
														"expression": {
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2216,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "7373:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7384:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2218,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "7388:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2219,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2168,
																		"src": "7402:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7388:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7384:25:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7373:36:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2223,
														"nodeType": "ExpressionStatement",
														"src": "7373:36:14"
													},
													{
														"expression": {
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2224,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "7843:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2225,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "7852:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2226,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2168,
																	"src": "7860:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7852:15:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7843:24:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2229,
														"nodeType": "ExpressionStatement",
														"src": "7843:24:14"
													},
													{
														"expression": {
															"id": 2230,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "7888:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2119,
														"id": 2231,
														"nodeType": "Return",
														"src": "7881:13:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2109,
										"nodeType": "StructuredDocumentation",
										"src": "3485:305:14",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3804:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3819:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "3811:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3811:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3830:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "3822:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3841:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "3833:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3833:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3810:43:14"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3885:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2234,
												"src": "3877:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3877:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3876:16:14"
									},
									"scope": 2900,
									"src": "3795:4116:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2276,
										"nodeType": "Block",
										"src": "8153:192:14",
										"statements": [
											{
												"assignments": [
													2250
												],
												"declarations": [
													{
														"constant": false,
														"id": 2250,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8171:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2276,
														"src": "8163:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2249,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8163:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2256,
												"initialValue": {
													"arguments": [
														{
															"id": 2252,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "8187:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2253,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "8190:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2254,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2241,
															"src": "8193:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2251,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2234,
															2277
														],
														"referencedDeclaration": 2234,
														"src": "8180:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8180:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8163:42:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2258,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2244,
																"src": "8236:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1857",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1857",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2257,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2899,
															"src": "8219:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1857_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8219:26:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2261,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "8256:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2262,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "8259:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2263,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2241,
																	"src": "8262:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2260,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8249:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8249:25:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8277:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8249:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8219:59:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2273,
												"nodeType": "IfStatement",
												"src": "8215:101:14",
												"trueBody": {
													"id": 2272,
													"nodeType": "Block",
													"src": "8280:36:14",
													"statements": [
														{
															"expression": {
																"id": 2270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2268,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2250,
																	"src": "8294:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8304:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8294:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2271,
															"nodeType": "ExpressionStatement",
															"src": "8294:11:14"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2274,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2250,
													"src": "8332:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2248,
												"id": 2275,
												"nodeType": "Return",
												"src": "8325:13:14"
											}
										]
									},
									"documentation": {
										"id": 2235,
										"nodeType": "StructuredDocumentation",
										"src": "7917:121:14",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2277,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8052:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8067:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8059:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8059:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8078:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8070:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8070:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2241,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8089:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8081:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8081:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8111:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8102:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2243,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2242,
														"name": "Rounding",
														"nameLocations": [
															"8102:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1857,
														"src": "8102:8:14"
													},
													"referencedDeclaration": 1857,
													"src": "8102:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8058:62:14"
									},
									"returnParameters": {
										"id": 2248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2277,
												"src": "8144:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8144:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8143:9:14"
									},
									"scope": 2900,
									"src": "8043:302:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2388,
										"nodeType": "Block",
										"src": "8636:1585:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2285,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2280,
														"src": "8650:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8655:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8650:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2291,
												"nodeType": "IfStatement",
												"src": "8646:45:14",
												"trueBody": {
													"id": 2290,
													"nodeType": "Block",
													"src": "8658:33:14",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2288,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8679:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2284,
															"id": 2289,
															"nodeType": "Return",
															"src": "8672:8:14"
														}
													]
												}
											},
											{
												"assignments": [
													2293
												],
												"declarations": [
													{
														"constant": false,
														"id": 2293,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9378:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2388,
														"src": "9370:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2292,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9370:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2302,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9387:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2296,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2280,
																			"src": "9398:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2295,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2556,
																			2591
																		],
																		"referencedDeclaration": 2556,
																		"src": "9393:4:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9393:7:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9404:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9393:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2300,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9392:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9387:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9370:36:14"
											},
											{
												"id": 2387,
												"nodeType": "UncheckedBlock",
												"src": "9807:408:14",
												"statements": [
													{
														"expression": {
															"id": 2312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2303,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "9831:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2311,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2304,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "9841:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2305,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "9850:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2306,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "9854:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9850:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9841:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2309,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9840:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9865:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9840:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9831:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2313,
														"nodeType": "ExpressionStatement",
														"src": "9831:35:14"
													},
													{
														"expression": {
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2314,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "9880:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2322,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2315,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "9890:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2316,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "9899:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2317,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "9903:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9899:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9890:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2320,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9889:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2321,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9914:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9889:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9880:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2324,
														"nodeType": "ExpressionStatement",
														"src": "9880:35:14"
													},
													{
														"expression": {
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2325,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "9929:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2330,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2326,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "9939:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2327,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "9948:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2328,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "9952:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9948:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9939:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2331,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9938:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9963:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9938:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9929:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2335,
														"nodeType": "ExpressionStatement",
														"src": "9929:35:14"
													},
													{
														"expression": {
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2336,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "9978:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2337,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "9988:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2338,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "9997:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2339,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "10001:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9997:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9988:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2342,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9987:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10012:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9987:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9978:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2346,
														"nodeType": "ExpressionStatement",
														"src": "9978:35:14"
													},
													{
														"expression": {
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2347,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "10027:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2348,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "10037:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2349,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "10046:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2350,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "10050:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10046:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10037:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2353,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10036:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10061:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10036:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10027:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2357,
														"nodeType": "ExpressionStatement",
														"src": "10027:35:14"
													},
													{
														"expression": {
															"id": 2367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2358,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "10076:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2359,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "10086:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2362,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2360,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "10095:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2361,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "10099:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10095:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10086:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2364,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10085:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10110:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10085:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10076:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2368,
														"nodeType": "ExpressionStatement",
														"src": "10076:35:14"
													},
													{
														"expression": {
															"id": 2378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2369,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2293,
																"src": "10125:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2370,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2293,
																				"src": "10135:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2373,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2371,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2280,
																					"src": "10144:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2372,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2293,
																					"src": "10148:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10144:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10135:19:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2375,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10134:21:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10159:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10134:26:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10125:35:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2379,
														"nodeType": "ExpressionStatement",
														"src": "10125:35:14"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2381,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2293,
																	"src": "10185:6:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2382,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2280,
																		"src": "10193:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2383,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2293,
																		"src": "10197:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10193:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2380,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2051,
																"src": "10181:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10181:23:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2284,
														"id": 2386,
														"nodeType": "Return",
														"src": "10174:30:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2278,
										"nodeType": "StructuredDocumentation",
										"src": "8351:223:14",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8588:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2280,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8601:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "8593:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8593:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8592:11:14"
									},
									"returnParameters": {
										"id": 2284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2389,
												"src": "8627:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8627:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8626:9:14"
									},
									"scope": 2900,
									"src": "8579:1642:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2423,
										"nodeType": "Block",
										"src": "10397:164:14",
										"statements": [
											{
												"id": 2422,
												"nodeType": "UncheckedBlock",
												"src": "10407:148:14",
												"statements": [
													{
														"assignments": [
															2401
														],
														"declarations": [
															{
																"constant": false,
																"id": 2401,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10439:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2422,
																"src": "10431:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2400,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10431:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2405,
														"initialValue": {
															"arguments": [
																{
																	"id": 2403,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2392,
																	"src": "10453:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2402,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2389,
																	2424
																],
																"referencedDeclaration": 2389,
																"src": "10448:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10448:7:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10431:24:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2406,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2401,
																"src": "10476:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2408,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2395,
																						"src": "10503:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2407,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2899,
																					"src": "10486:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1857_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10486:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2414,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2412,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2410,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2401,
																						"src": "10516:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2411,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2401,
																						"src": "10525:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10516:15:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2413,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2392,
																					"src": "10534:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10516:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10486:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10542:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10486:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10538:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2419,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10485:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10476:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2399,
														"id": 2421,
														"nodeType": "Return",
														"src": "10469:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2390,
										"nodeType": "StructuredDocumentation",
										"src": "10227:89:14",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10330:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2392,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10343:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "10335:9:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10335:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2395,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10355:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "10346:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2394,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2393,
														"name": "Rounding",
														"nameLocations": [
															"10346:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1857,
														"src": "10346:8:14"
													},
													"referencedDeclaration": 1857,
													"src": "10346:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10334:30:14"
									},
									"returnParameters": {
										"id": 2399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2424,
												"src": "10388:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10388:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10387:9:14"
									},
									"scope": 2900,
									"src": "10321:240:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2555,
										"nodeType": "Block",
										"src": "10752:922:14",
										"statements": [
											{
												"assignments": [
													2433
												],
												"declarations": [
													{
														"constant": false,
														"id": 2433,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10770:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2555,
														"src": "10762:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2435,
												"initialValue": {
													"hexValue": "30",
													"id": 2434,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10779:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:18:14"
											},
											{
												"id": 2552,
												"nodeType": "UncheckedBlock",
												"src": "10790:855:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2440,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2436,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "10818:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10827:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10818:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10833:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10818:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2450,
														"nodeType": "IfStatement",
														"src": "10814:99:14",
														"trueBody": {
															"id": 2449,
															"nodeType": "Block",
															"src": "10836:77:14",
															"statements": [
																{
																	"expression": {
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2441,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "10854:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2442,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10864:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10854:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2444,
																	"nodeType": "ExpressionStatement",
																	"src": "10854:13:14"
																},
																{
																	"expression": {
																		"id": 2447,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2445,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "10885:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2446,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10895:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10885:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2448,
																	"nodeType": "ExpressionStatement",
																	"src": "10885:13:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2451,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "10930:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10939:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10930:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10944:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10930:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2465,
														"nodeType": "IfStatement",
														"src": "10926:96:14",
														"trueBody": {
															"id": 2464,
															"nodeType": "Block",
															"src": "10947:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2456,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "10965:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10975:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10965:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2459,
																	"nodeType": "ExpressionStatement",
																	"src": "10965:12:14"
																},
																{
																	"expression": {
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2460,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "10995:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11005:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10995:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2463,
																	"nodeType": "ExpressionStatement",
																	"src": "10995:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2466,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "11039:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11048:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11039:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11053:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11039:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2480,
														"nodeType": "IfStatement",
														"src": "11035:96:14",
														"trueBody": {
															"id": 2479,
															"nodeType": "Block",
															"src": "11056:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2471,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "11074:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11084:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11074:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2474,
																	"nodeType": "ExpressionStatement",
																	"src": "11074:12:14"
																},
																{
																	"expression": {
																		"id": 2477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2475,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "11104:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2476,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11114:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11104:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2478,
																	"nodeType": "ExpressionStatement",
																	"src": "11104:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "11148:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11157:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11148:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11162:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11148:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2495,
														"nodeType": "IfStatement",
														"src": "11144:96:14",
														"trueBody": {
															"id": 2494,
															"nodeType": "Block",
															"src": "11165:75:14",
															"statements": [
																{
																	"expression": {
																		"id": 2488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2486,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "11183:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11193:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11183:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2489,
																	"nodeType": "ExpressionStatement",
																	"src": "11183:12:14"
																},
																{
																	"expression": {
																		"id": 2492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2490,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "11213:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11223:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11213:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2493,
																	"nodeType": "ExpressionStatement",
																	"src": "11213:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2496,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "11257:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11266:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11257:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11270:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11257:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2510,
														"nodeType": "IfStatement",
														"src": "11253:93:14",
														"trueBody": {
															"id": 2509,
															"nodeType": "Block",
															"src": "11273:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "11291:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11301:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11291:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2504,
																	"nodeType": "ExpressionStatement",
																	"src": "11291:11:14"
																},
																{
																	"expression": {
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2505,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "11320:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11330:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11320:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2508,
																	"nodeType": "ExpressionStatement",
																	"src": "11320:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2511,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "11363:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11372:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11363:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11376:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11363:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2525,
														"nodeType": "IfStatement",
														"src": "11359:93:14",
														"trueBody": {
															"id": 2524,
															"nodeType": "Block",
															"src": "11379:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2518,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "11397:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2517,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11407:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11397:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2519,
																	"nodeType": "ExpressionStatement",
																	"src": "11397:11:14"
																},
																{
																	"expression": {
																		"id": 2522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2520,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "11426:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2521,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11436:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11426:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2523,
																	"nodeType": "ExpressionStatement",
																	"src": "11426:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2526,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "11469:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11478:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11469:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11482:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11469:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2540,
														"nodeType": "IfStatement",
														"src": "11465:93:14",
														"trueBody": {
															"id": 2539,
															"nodeType": "Block",
															"src": "11485:73:14",
															"statements": [
																{
																	"expression": {
																		"id": 2533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2531,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2427,
																			"src": "11503:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2532,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11513:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11503:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2534,
																	"nodeType": "ExpressionStatement",
																	"src": "11503:11:14"
																},
																{
																	"expression": {
																		"id": 2537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2535,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "11532:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11542:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11532:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2538,
																	"nodeType": "ExpressionStatement",
																	"src": "11532:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2541,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2427,
																	"src": "11575:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11584:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11575:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2544,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11588:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11575:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2551,
														"nodeType": "IfStatement",
														"src": "11571:64:14",
														"trueBody": {
															"id": 2550,
															"nodeType": "Block",
															"src": "11591:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2548,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2546,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2433,
																			"src": "11609:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11619:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11609:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2549,
																	"nodeType": "ExpressionStatement",
																	"src": "11609:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2553,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2433,
													"src": "11661:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2431,
												"id": 2554,
												"nodeType": "Return",
												"src": "11654:13:14"
											}
										]
									},
									"documentation": {
										"id": 2425,
										"nodeType": "StructuredDocumentation",
										"src": "10567:119:14",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10700:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2427,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10713:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "10705:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10705:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10704:15:14"
									},
									"returnParameters": {
										"id": 2431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2556,
												"src": "10743:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2429,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10743:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10742:9:14"
									},
									"scope": 2900,
									"src": "10691:983:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2590,
										"nodeType": "Block",
										"src": "11907:168:14",
										"statements": [
											{
												"id": 2589,
												"nodeType": "UncheckedBlock",
												"src": "11917:152:14",
												"statements": [
													{
														"assignments": [
															2568
														],
														"declarations": [
															{
																"constant": false,
																"id": 2568,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11949:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2589,
																"src": "11941:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2567,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11941:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2572,
														"initialValue": {
															"arguments": [
																{
																	"id": 2570,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2559,
																	"src": "11963:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2569,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2556,
																	2591
																],
																"referencedDeclaration": 2556,
																"src": "11958:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11958:11:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11941:28:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2573,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2568,
																"src": "11990:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2575,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2562,
																						"src": "12017:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2574,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2899,
																					"src": "12000:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1857_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12000:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12030:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2578,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2568,
																						"src": "12035:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12030:11:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2580,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2559,
																					"src": "12044:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12030:19:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12000:49:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12056:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12000:57:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2583,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12052:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11999:59:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11990:68:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2566,
														"id": 2588,
														"nodeType": "Return",
														"src": "11983:75:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2557,
										"nodeType": "StructuredDocumentation",
										"src": "11680:142:14",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11836:4:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2559,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11849:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "11841:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11841:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2562,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11865:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "11856:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2561,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2560,
														"name": "Rounding",
														"nameLocations": [
															"11856:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1857,
														"src": "11856:8:14"
													},
													"referencedDeclaration": 1857,
													"src": "11856:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11840:34:14"
									},
									"returnParameters": {
										"id": 2566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2591,
												"src": "11898:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11898:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11897:9:14"
									},
									"scope": 2900,
									"src": "11827:248:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2719,
										"nodeType": "Block",
										"src": "12268:854:14",
										"statements": [
											{
												"assignments": [
													2600
												],
												"declarations": [
													{
														"constant": false,
														"id": 2600,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12286:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2719,
														"src": "12278:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12278:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2602,
												"initialValue": {
													"hexValue": "30",
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12295:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12278:18:14"
											},
											{
												"id": 2716,
												"nodeType": "UncheckedBlock",
												"src": "12306:787:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2603,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "12334:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12343:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12349:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12343:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12334:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2619,
														"nodeType": "IfStatement",
														"src": "12330:103:14",
														"trueBody": {
															"id": 2618,
															"nodeType": "Block",
															"src": "12353:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2608,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "12371:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12380:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2610,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12386:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12380:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12371:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2613,
																	"nodeType": "ExpressionStatement",
																	"src": "12371:17:14"
																},
																{
																	"expression": {
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2614,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "12406:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12416:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12406:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2617,
																	"nodeType": "ExpressionStatement",
																	"src": "12406:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2620,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "12450:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12459:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12465:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12459:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12450:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2636,
														"nodeType": "IfStatement",
														"src": "12446:103:14",
														"trueBody": {
															"id": 2635,
															"nodeType": "Block",
															"src": "12469:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2625,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "12487:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12496:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2627,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12502:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12496:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12487:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2630,
																	"nodeType": "ExpressionStatement",
																	"src": "12487:17:14"
																},
																{
																	"expression": {
																		"id": 2633,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2631,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "12522:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2632,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12532:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12522:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2634,
																	"nodeType": "ExpressionStatement",
																	"src": "12522:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2637,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "12566:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12575:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12581:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12575:8:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12566:17:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2653,
														"nodeType": "IfStatement",
														"src": "12562:103:14",
														"trueBody": {
															"id": 2652,
															"nodeType": "Block",
															"src": "12585:80:14",
															"statements": [
																{
																	"expression": {
																		"id": 2646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2642,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "12603:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12612:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2644,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12618:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12612:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12603:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2647,
																	"nodeType": "ExpressionStatement",
																	"src": "12603:17:14"
																},
																{
																	"expression": {
																		"id": 2650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2648,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "12638:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2649,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12648:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12638:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2651,
																	"nodeType": "ExpressionStatement",
																	"src": "12638:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2654,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "12682:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12691:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12697:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12691:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12682:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2670,
														"nodeType": "IfStatement",
														"src": "12678:100:14",
														"trueBody": {
															"id": 2669,
															"nodeType": "Block",
															"src": "12700:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2659,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "12718:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2660,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12727:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2661,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12733:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12727:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12718:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2664,
																	"nodeType": "ExpressionStatement",
																	"src": "12718:16:14"
																},
																{
																	"expression": {
																		"id": 2667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2665,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "12752:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12762:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12752:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2668,
																	"nodeType": "ExpressionStatement",
																	"src": "12752:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2671,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "12795:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12804:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12810:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12804:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12795:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2687,
														"nodeType": "IfStatement",
														"src": "12791:100:14",
														"trueBody": {
															"id": 2686,
															"nodeType": "Block",
															"src": "12813:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2676,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "12831:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2679,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12840:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2678,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12846:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12840:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12831:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2681,
																	"nodeType": "ExpressionStatement",
																	"src": "12831:16:14"
																},
																{
																	"expression": {
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2682,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "12865:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12875:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12865:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"nodeType": "ExpressionStatement",
																	"src": "12865:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2688,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "12908:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12917:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12923:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12917:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12908:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2704,
														"nodeType": "IfStatement",
														"src": "12904:100:14",
														"trueBody": {
															"id": 2703,
															"nodeType": "Block",
															"src": "12926:78:14",
															"statements": [
																{
																	"expression": {
																		"id": 2697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2693,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2594,
																			"src": "12944:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2696,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2694,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12953:2:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12959:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12953:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12944:16:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2698,
																	"nodeType": "ExpressionStatement",
																	"src": "12944:16:14"
																},
																{
																	"expression": {
																		"id": 2701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "12978:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12988:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12978:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2702,
																	"nodeType": "ExpressionStatement",
																	"src": "12978:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2705,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2594,
																"src": "13021:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2708,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13030:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13036:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13030:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13021:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2715,
														"nodeType": "IfStatement",
														"src": "13017:66:14",
														"trueBody": {
															"id": 2714,
															"nodeType": "Block",
															"src": "13039:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2710,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2600,
																			"src": "13057:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13067:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13057:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2713,
																	"nodeType": "ExpressionStatement",
																	"src": "13057:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2717,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2600,
													"src": "13109:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2598,
												"id": 2718,
												"nodeType": "Return",
												"src": "13102:13:14"
											}
										]
									},
									"documentation": {
										"id": 2592,
										"nodeType": "StructuredDocumentation",
										"src": "12081:120:14",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12215:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2594,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12229:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "12221:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12221:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12220:15:14"
									},
									"returnParameters": {
										"id": 2598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2597,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2720,
												"src": "12259:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2596,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12259:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12258:9:14"
									},
									"scope": 2900,
									"src": "12206:916:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2754,
										"nodeType": "Block",
										"src": "13357:170:14",
										"statements": [
											{
												"id": 2753,
												"nodeType": "UncheckedBlock",
												"src": "13367:154:14",
												"statements": [
													{
														"assignments": [
															2732
														],
														"declarations": [
															{
																"constant": false,
																"id": 2732,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13399:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2753,
																"src": "13391:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2731,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13391:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2736,
														"initialValue": {
															"arguments": [
																{
																	"id": 2734,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2723,
																	"src": "13414:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2733,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2720,
																	2755
																],
																"referencedDeclaration": 2720,
																"src": "13408:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13408:12:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13391:29:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2737,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2732,
																"src": "13441:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2739,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2726,
																						"src": "13468:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2738,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2899,
																					"src": "13451:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1857_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2740,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13451:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2745,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2743,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2741,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13481:2:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2742,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2732,
																						"src": "13487:6:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13481:12:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2744,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "13496:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13481:20:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13451:50:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13508:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13451:58:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13504:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2750,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13450:60:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13441:69:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2730,
														"id": 2752,
														"nodeType": "Return",
														"src": "13434:76:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2721,
										"nodeType": "StructuredDocumentation",
										"src": "13128:143:14",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13285:5:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13299:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "13291:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13291:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2726,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13315:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "13306:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2725,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2724,
														"name": "Rounding",
														"nameLocations": [
															"13306:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1857,
														"src": "13306:8:14"
													},
													"referencedDeclaration": 1857,
													"src": "13306:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13290:34:14"
									},
									"returnParameters": {
										"id": 2730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2755,
												"src": "13348:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13348:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13347:9:14"
									},
									"scope": 2900,
									"src": "13276:251:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2841,
										"nodeType": "Block",
										"src": "13847:600:14",
										"statements": [
											{
												"assignments": [
													2764
												],
												"declarations": [
													{
														"constant": false,
														"id": 2764,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13865:6:14",
														"nodeType": "VariableDeclaration",
														"scope": 2841,
														"src": "13857:14:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13857:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2766,
												"initialValue": {
													"hexValue": "30",
													"id": 2765,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13874:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13857:18:14"
											},
											{
												"id": 2838,
												"nodeType": "UncheckedBlock",
												"src": "13885:533:14",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2767,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "13913:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13922:3:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13913:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13928:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13913:16:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2781,
														"nodeType": "IfStatement",
														"src": "13909:98:14",
														"trueBody": {
															"id": 2780,
															"nodeType": "Block",
															"src": "13931:76:14",
															"statements": [
																{
																	"expression": {
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "13949:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13959:3:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13949:13:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2775,
																	"nodeType": "ExpressionStatement",
																	"src": "13949:13:14"
																},
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2776,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2764,
																			"src": "13980:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13990:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13980:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "13980:12:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "14024:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14033:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14024:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14038:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14024:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2796,
														"nodeType": "IfStatement",
														"src": "14020:95:14",
														"trueBody": {
															"id": 2795,
															"nodeType": "Block",
															"src": "14041:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2787,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "14059:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14069:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14059:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "14059:12:14"
																},
																{
																	"expression": {
																		"id": 2793,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2791,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2764,
																			"src": "14089:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2792,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14099:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14089:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2794,
																	"nodeType": "ExpressionStatement",
																	"src": "14089:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "14132:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14141:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14132:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2800,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14146:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14132:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2811,
														"nodeType": "IfStatement",
														"src": "14128:95:14",
														"trueBody": {
															"id": 2810,
															"nodeType": "Block",
															"src": "14149:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2802,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "14167:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14177:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14167:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2805,
																	"nodeType": "ExpressionStatement",
																	"src": "14167:12:14"
																},
																{
																	"expression": {
																		"id": 2808,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2806,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2764,
																			"src": "14197:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14207:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14197:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2809,
																	"nodeType": "ExpressionStatement",
																	"src": "14197:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2814,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2812,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "14240:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14249:2:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14240:11:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14254:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14240:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2826,
														"nodeType": "IfStatement",
														"src": "14236:95:14",
														"trueBody": {
															"id": 2825,
															"nodeType": "Block",
															"src": "14257:74:14",
															"statements": [
																{
																	"expression": {
																		"id": 2819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2817,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2758,
																			"src": "14275:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2818,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14285:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14275:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2820,
																	"nodeType": "ExpressionStatement",
																	"src": "14275:12:14"
																},
																{
																	"expression": {
																		"id": 2823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2821,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2764,
																			"src": "14305:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14315:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14305:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2824,
																	"nodeType": "ExpressionStatement",
																	"src": "14305:11:14"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2827,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2758,
																	"src": "14348:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14357:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14348:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14361:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14348:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2837,
														"nodeType": "IfStatement",
														"src": "14344:64:14",
														"trueBody": {
															"id": 2836,
															"nodeType": "Block",
															"src": "14364:44:14",
															"statements": [
																{
																	"expression": {
																		"id": 2834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2832,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2764,
																			"src": "14382:6:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2833,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14392:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14382:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2835,
																	"nodeType": "ExpressionStatement",
																	"src": "14382:11:14"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2839,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2764,
													"src": "14434:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2762,
												"id": 2840,
												"nodeType": "Return",
												"src": "14427:13:14"
											}
										]
									},
									"documentation": {
										"id": 2756,
										"nodeType": "StructuredDocumentation",
										"src": "13533:246:14",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13793:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2758,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13808:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "13800:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13800:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13799:15:14"
									},
									"returnParameters": {
										"id": 2762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2842,
												"src": "13838:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13838:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13837:9:14"
									},
									"scope": 2900,
									"src": "13784:663:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "14684:177:14",
										"statements": [
											{
												"id": 2878,
												"nodeType": "UncheckedBlock",
												"src": "14694:161:14",
												"statements": [
													{
														"assignments": [
															2854
														],
														"declarations": [
															{
																"constant": false,
																"id": 2854,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14726:6:14",
																"nodeType": "VariableDeclaration",
																"scope": 2878,
																"src": "14718:14:14",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2853,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14718:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2858,
														"initialValue": {
															"arguments": [
																{
																	"id": 2856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2845,
																	"src": "14742:5:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2855,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2842,
																	2880
																],
																"referencedDeclaration": 2842,
																"src": "14735:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14735:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14718:30:14"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2876,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2859,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2854,
																"src": "14769:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2861,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2848,
																						"src": "14796:8:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1857",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2860,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2899,
																					"src": "14779:16:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1857_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14779:26:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2870,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2868,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2863,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14809:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2866,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2864,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2854,
																									"src": "14815:6:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2865,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14825:1:14",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14815:11:14",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2867,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14814:13:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14809:18:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2869,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2845,
																					"src": "14830:5:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14809:26:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14779:56:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14842:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14779:64:14",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14838:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14778:66:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14769:75:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2852,
														"id": 2877,
														"nodeType": "Return",
														"src": "14762:82:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2843,
										"nodeType": "StructuredDocumentation",
										"src": "14453:144:14",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14611:6:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14626:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "14618:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14618:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14642:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "14633:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2847,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2846,
														"name": "Rounding",
														"nameLocations": [
															"14633:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1857,
														"src": "14633:8:14"
													},
													"referencedDeclaration": 1857,
													"src": "14633:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14617:34:14"
									},
									"returnParameters": {
										"id": 2852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "14675:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14675:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14674:9:14"
									},
									"scope": 2900,
									"src": "14602:259:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2898,
										"nodeType": "Block",
										"src": "15059:48:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2891,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2884,
																	"src": "15082:8:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1857",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1857",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2890,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15076:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2889,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15076:5:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15076:15:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2893,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15094:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15076:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15099:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15076:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2888,
												"id": 2897,
												"nodeType": "Return",
												"src": "15069:31:14"
											}
										]
									},
									"documentation": {
										"id": 2881,
										"nodeType": "StructuredDocumentation",
										"src": "14867:113:14",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "14994:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2884,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15020:8:14",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "15011:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1857",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2883,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2882,
														"name": "Rounding",
														"nameLocations": [
															"15011:8:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1857,
														"src": "15011:8:14"
													},
													"referencedDeclaration": 1857,
													"src": "15011:8:14",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1857",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15010:19:14"
									},
									"returnParameters": {
										"id": 2888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2899,
												"src": "15053:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15053:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15052:6:14"
									},
									"scope": 2900,
									"src": "14985:122:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2901,
							"src": "203:14906:14",
							"usedErrors": [
								1852
							],
							"usedEvents": []
						}
					],
					"src": "103:15007:14"
				},
				"id": 14
			},
			"https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3005
						]
					},
					"id": 3006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2902,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2903,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:15",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3005,
							"linearizedBaseContracts": [
								3005
							],
							"name": "SignedMath",
							"nameLocation": "224:10:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2920,
										"nodeType": "Block",
										"src": "376:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2915,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2913,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2906,
															"src": "393:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2914,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2908,
															"src": "397:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2917,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2908,
														"src": "405:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:15",
													"trueExpression": {
														"id": 2916,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2906,
														"src": "401:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2912,
												"id": 2919,
												"nodeType": "Return",
												"src": "386:20:15"
											}
										]
									},
									"documentation": {
										"id": 2904,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:15",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2906,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "325:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2905,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "335:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2907,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:15"
									},
									"returnParameters": {
										"id": 2912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2911,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2921,
												"src": "368:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2910,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:15"
									},
									"scope": 3005,
									"src": "312:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "555:37:15",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2931,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2924,
															"src": "572:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2932,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2926,
															"src": "576:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2935,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2926,
														"src": "584:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:15",
													"trueExpression": {
														"id": 2934,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2924,
														"src": "580:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2930,
												"id": 2937,
												"nodeType": "Return",
												"src": "565:20:15"
											}
										]
									},
									"documentation": {
										"id": 2922,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:15",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2924,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "504:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2923,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2926,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "514:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2925,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:15"
									},
									"returnParameters": {
										"id": 2930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "547:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2928,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:15"
									},
									"scope": 3005,
									"src": "491:101:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2982,
										"nodeType": "Block",
										"src": "797:162:15",
										"statements": [
											{
												"assignments": [
													2950
												],
												"declarations": [
													{
														"constant": false,
														"id": 2950,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:15",
														"nodeType": "VariableDeclaration",
														"scope": 2982,
														"src": "859:8:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2949,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2963,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2951,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2942,
																	"src": "871:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2952,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2944,
																	"src": "875:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2954,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2955,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2942,
																				"src": "882:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2956,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2944,
																				"src": "886:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2958,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2961,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:15"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2980,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2964,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2950,
														"src": "911:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2972,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2969,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2950,
																						"src": "931:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2967,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:15",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:15",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2971,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2965,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:15",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:15",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2974,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2942,
																				"src": "945:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2975,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2944,
																				"src": "949:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2977,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2979,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:15",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2948,
												"id": 2981,
												"nodeType": "Return",
												"src": "904:48:15"
											}
										]
									},
									"documentation": {
										"id": 2940,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:15",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "746:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2941,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2944,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "756:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2943,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:15"
									},
									"returnParameters": {
										"id": 2948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2947,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2983,
												"src": "789:6:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2946,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:15"
									},
									"scope": 3005,
									"src": "729:230:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3003,
										"nodeType": "Block",
										"src": "1103:158:15",
										"statements": [
											{
												"id": 3002,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:15",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2993,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2986,
																			"src": "1228:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2998,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:15",
																		"subExpression": {
																			"id": 2997,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2986,
																			"src": "1242:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2999,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:15",
																	"trueExpression": {
																		"id": 2996,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2986,
																		"src": "1237:1:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2991,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:15",
																	"typeDescriptions": {}
																}
															},
															"id": 3000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2990,
														"id": 3001,
														"nodeType": "Return",
														"src": "1213:31:15"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2984,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:15",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2986,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "1061:8:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2985,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:15"
									},
									"returnParameters": {
										"id": 2990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3004,
												"src": "1094:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:15"
									},
									"scope": 3005,
									"src": "1048:213:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3006,
							"src": "216:1047:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:15"
				},
				"id": 15
			}
		}
	}
}